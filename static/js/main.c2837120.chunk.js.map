{"version":3,"sources":["main/ui/App/Header/Nav/Nav.module.scss","pages/recoveryPass/ui/RecoveryPassForm/RecoveryPassForm.module.scss","pages/packs/ui/PacksContainer/Packs.module.scss","pages/error404/ui/Error404Page.module.scss","common/ui/InputText/InputText.module.scss","common/ui/Button/Button.module.scss","common/ui/Paginator/Paginator.module.scss","pages/learn/ui/TrainFormContainer/TrainForm.module.scss","pages/login/ui/LoginFormContainer/LoginForm.module.scss","common/ui/InputCheckbox/InputCheckbox.module.scss","common/ui/InputRadio/InputRadio.module.scss","main/ui/App/Header/Header.module.scss","common/ui/Preloader/Preloader.module.scss","pages/registration/ui/RegistrationForm/RegistrationForm.module.scss","main/ui/App/Main/Main.module.scss","pages/login/ui/LoginPage.module.scss","common/ui/ErrorMessage/ErrorMessage.module.scss","pages/registration/ui/RegistrationPage.module.scss","pages/recoveryPass/ui/RecoveryPassPage.module.scss","pages/setPass/ui/SetPassPage.module.scss","pages/profile/ui/ProfilePage.module.scss","pages/packs/ui/Packs.module.scss","common/Search/Search.module.scss","pages/learn/ui/TrainPage.module.scss","pages/cards/ui/Cards.module.scss","pages/cards/ui/CardsContainer/Cards.module.scss","common/ui/InfoMessage/InfoMessage.module.scss","pages/test/ui/TestPage.module.scss","pages/test/ui/Test.module.scss","common/ui/LinkNative/LinkNative.module.scss","common/ui/Select/Select.module.scss","pages/cards/bll/CardsReducer.ts","common/ui/SvgIcon/SvgIcon.tsx","common/ui/InputText/InputText.tsx","common/ui/Button/Button.tsx","common/ui/InputCheckbox/InputCheckbox.tsx","utils/randomId.ts","common/ui/Preloader/Preloader.tsx","hooks/ValidationFormAndrew.tsx","common/ui/ErrorMessage/ErrorMessage.tsx","pages/login/ui/LoginFormContainer/LoginForm.tsx","utils/textTransform.ts","hooks/useTypedSelector.ts","config.ts","main/dal/api.ts","pages/login/dal/loginApi.ts","pages/profile/dal/profileApi.ts","pages/cards/dal/CardsApi.ts","pages/login/bll/loginReducer.ts","pages/recoveryPass/bll/recoveryPassActions.ts","pages/login/ui/LoginFormContainer/LoginFormContainer.tsx","pages/login/ui/LoginPage.tsx","pages/registration/ui/RegistrationForm/RegistrationForm.tsx","pages/registration/ui/RegistrationForm/RegistrationFormContainer.tsx","pages/registration/ui/RegistrationPage.tsx","pages/recoveryPass/ui/RecoveryPassForm/RecoveryPassForm.tsx","pages/packs/bll/PacksReducer.ts","pages/recoveryPass/dal/recoveryPassApi.ts","pages/recoveryPass/dal/messageTemplate.ts","pages/recoveryPass/bll/recoveryPassThunk.ts","pages/recoveryPass/ui/RecoveryPassForm/RecoveryPassFormContainer.tsx","pages/recoveryPass/ui/RecoveryPassPage.tsx","pages/setPass/ui/SetPassPage.tsx","pages/error404/ui/Error404Page.tsx","pages/profile/ui/ProfileFormContainer/ProfileForm.tsx","pages/profile/ui/ProfileFormContainer/ProfileFormContainer.tsx","pages/profile/ui/ProfilePage.tsx","pages/packs/dal/PacksApi.ts","pages/registration/bll/registrationReducer.ts","common/ui/Paginator/Paginator.tsx","common/ui/Modals/Modal.tsx","common/Search/Search.tsx","pages/packs/ui/PacksContainer/Packs.tsx","pages/packs/ui/PacksContainer/PacksContainer.tsx","pages/packs/ui/PacksPage.tsx","pages/learn/ui/TrainFormContainer/TrainForm.tsx","pages/learn/ui/TrainPage.tsx","common/ui/DoubleRange/DoubleRange.tsx","common/ui/InfoMessage/InfoMessage.tsx","pages/cards/ui/CardsContainer/Cards.tsx","pages/cards/bll/selectors.ts","pages/cards/ui/CardsContainer/CardsContainer.tsx","pages/cards/ui/CardsPage.tsx","pages/test/ui/Test.tsx","pages/test/ui/TestContainer.tsx","common/ui/LinkNative/LinkNative.tsx","common/ui/InputRadio/InputRadio.tsx","common/ui/Select/Select.tsx","pages/test/ui/TestPage.tsx","main/ui/App/NotAuthWithRedirect.tsx","main/ui/App/Routes.tsx","main/ui/App/Header/Nav/Nav.tsx","main/ui/App/Header/Nav/NavContainer.tsx","main/ui/App/Header/Header.tsx","main/ui/App/Main/Main.tsx","main/ui/App/App.tsx","reportWebVitals.ts","pages/setPass/bll/setPassReducer.ts","pages/recoveryPass/bll/recoveryPassState.ts","pages/profile/bll/profileReducer.ts","main/bll/store.ts","pages/recoveryPass/bll/recoveryPassReducer.ts","index.tsx"],"names":["module","exports","packsActionType","SvgIcon","type","viewBox","height","width","xmlns","d","aria-hidden","InputText","onChange","onChangeText","onKeyPress","onEnter","error","className","errorClassName","text","restProps","finalErrorClassName","s","errorMessage","finalInputClassName","input","inputWrapper","label","e","currentTarget","value","key","Button","large","small","finalClassName","btn","default","InputCheckbox","onChangeChecked","labelClassName","children","finalLabelClassName","finalCheckboxClassName","checkbox","checkboxWrapper","checked","randomId","Math","floor","random","toString","Preloader","preloader","loader","useInput","initialValue","validations","useState","setValue","isDirty","setDirty","valid","inputError","setInputError","inputValid","setInputValid","useEffect","validation","length","test","String","toLowerCase","minLength","useValidation","target","onBlur","ErrorMessage","clickHandler","message","onClick","LoginForm","loginLinks","sendLogin","loading","success","setSuc","userId","closeMessage","redirectLink","rememberMe","setRememberMe","email","isEmail","password","isPassword","to","closeMessageHandler","obj","form","onSubmit","preventDefault","trim","placeholder","disabled","linksForm","map","link","title","capitalizeFirstLetter","str","charAt","toUpperCase","slice","transformLinkToTitle","replace","useTypedSelector","useSelector","DEV","process","API","axios","create","baseURL","withCredentials","authAPI","post","then","response","data","logOutAPI","delete","isAuthAPI","changeAuthAPI","name","avatar","put","updatedUser","cardsApi","cardsPack_id","pageCount","page","get","params","question","answer","card","_id","grade","card_id","cardId","id","loginActionType","initialState","cards","cardsTotalCount","maxGrade","minGrade","packUserId","setLoadingCards","SET_LOADING_CARDS","payload","setCards","SET_CARDS","setErrorCards","SET_ERROR_CARDS","getCardsTC","dispatch","a","RecoveryPassActionType","user","publicCardPacksCount","created","Date","updated","isAdmin","verified","isInitial","setLoading","SET_LOADING","setSuccess","SET_SUCCESS","setUser","SET_USER","setError","SET_ERROR","changeUser","CHANGE_USER","LoginFormContainer","useDispatch","RECOVERY_PASS","PATH","REGISTRATION","PROFILE","state","login","loginPageTC","LoginPage","RegistrationForm","loginLink","console","log","RegistrationFormContainer","LOGIN","RegistrationPage","RecoveryPassForm","sendEmail","setEmail","messageWrapper","recoveryPassActions","recoveryPassApi","from","res","RecoveryPassFormContainer","SET_PASS","recoveryPass","info","sendEmailAsync","RecoveryPassPage","SetPassPage","Error404Page","main","footer","footerText","ProfileForm","sendLogOut","changeAuth","editModeName","setEditModeName","editModeAvatar","setEditModeAvatar","setName","setAvatar","activateEditMode","deactivateEditMode","undefined","src","alt","autoFocus","spanAvatar","onDoubleClick","ProfileFormContainer","changeAuthTC","ProfilePage","packsAPI","user_id","privat","cardsPack","private","ActionType","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","setErrorPacks","SET_ERROR_PACKS","getCardsPacksTC","SET_PACKS","Pagination","totalPages","handleChangePage","setPageCount","pattern","Array","_","i","changeNumber","n","paginatorBlock","paginator","index","active","paginatorItems","inputPage","newPageCount","parseInt","Modal","packsModal","stopPropagation","Search","handleSearch","search","Packs","deletedCardsPack","updatedCardsPack","addCardsPack","setPage","CARDS","TRAIN","modalAdd","setModalAdd","modalDelete","setModalDelete","modalChange","setModalChange","newPackName","setNewPackName","changePackName","setChangePackName","privatPack","setPrivatPack","myPacks","setMyPacks","PackNameId","setPackNameId","timeId","setTimeId","setN","clearTimeout","setTimeout","searchCardsPacks","filter","p","includes","ceil","addCardsPackSubmit","changedPackName","changeCardsPackSubmit","hGridContainer","toUTCString","substring","Fragment","cardsCount","cardsPackId","cardsPackName","PacksContainer","packs","deletedCardsPackTC","updatedCardsPackTC","addCardsPackTC","PacksPage","grades","getCard","sum","reduce","acc","rand","newSum","TrainForm","isChecked","setIsChecked","first","setFirst","setBtn","shots","rating","__v","setCard","useParams","trainBlock","g","onN","updateGradeCardTC","TrainPage","RangeWithTooltip","createSliderWithTooltip","Range","DoubleRange","onChangeRange","min","max","step","draggableTrack","val1","val2","InfoMessage","action","Cards","addCard","updatedCard","deleteCard","cardQuestion","setCardQuestion","cardAnswer","setCardAnswer","changeCard","setChangeCard","cardNameId","setCardNameId","value1","setValue1","value2","setValue2","onCardQuestion","onCardAnswerAdd","searchCardsGrade","c","updateCardHandler","cardsSelectors","CardsContainer","pageCountInitialState","addCardTC","updateCardTC","deleteCardTC","CardsPage","Test","examples","table","item","Example","props","exampleLibrary","href","button","buttonError","inputText","inputEmail","inputPassword","inputTextError","inputCheckbox","inputRadio","options","onChangeOption","onChangeCallback","finalRadioClassName","radio","mappedOptions","o","radioWrapper","select","finalSelectClassName","Object","entries","example","word","idx","TestContainer","TestPage","NotAuthWithRedirect","path","render","PACKS","TEST","ERROR_404","Routes","exact","Nav","navLinks","open","setOpen","closeMenuHandler","nav","navControl","navContent","navItems","navItem","navItemLink","activeClassName","navItemLinkActive","navBtn","htmlFor","NavContainer","values","navLink","navLinksWithoutError404","Header","header","container","Main","App","IS_INITIAL","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","recoveryPassInitState","rootReducer","combineReducers","register","setPass","profile","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","enhancedStore","applyMiddleware","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2837120.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__VE29K\",\"navControl\":\"Nav_navControl__q9neT\",\"navContent\":\"Nav_navContent__3Czvi\",\"navItems\":\"Nav_navItems__37FoA\",\"navItem\":\"Nav_navItem__nAPWr\",\"navItemLink\":\"Nav_navItemLink__2Vf4X\",\"linkRotate\":\"Nav_linkRotate__3TONa\",\"navItemLinkActive\":\"Nav_navItemLinkActive__1-Yl7\",\"navBtn\":\"Nav_navBtn__hd2I5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RecoveryPassForm_form__2fk97 form_form__a6yyo\",\"messageWrapper\":\"RecoveryPassForm_messageWrapper__fPqq6\",\"link\":\"RecoveryPassForm_link__3t279 LinkNative_link__hGO0Z\",\"spanAvatar\":\"RecoveryPassForm_spanAvatar__ejPYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsModal\":\"Packs_packsModal__2Gb97\",\"form\":\"Packs_form__38web\",\"packsDescription\":\"Packs_packsDescription__atyIN\",\"paginator\":\"Packs_paginator__Y5DMI\",\"paginatorItems\":\"Packs_paginatorItems__3OfWh\",\"inputPage\":\"Packs_inputPage__2fxQZ\",\"linksForm\":\"Packs_linksForm__3fqe_\",\"link\":\"Packs_link__27AM4 LinkNative_link__hGO0Z\",\"hGridContainer\":\"Packs_hGridContainer__37TVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Error404Page_page__3pOuS\",\"title\":\"Error404Page_title__DmawO\",\"text\":\"Error404Page_text__18c0F\",\"footer\":\"Error404Page_footer__1Cf4V\",\"footerText\":\"Error404Page_footerText__1oXY9\",\"link\":\"Error404Page_link__3Kzqd LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"InputText_inputWrapper__2htqf\",\"errorMessage\":\"InputText_errorMessage__3yIyw\",\"label\":\"InputText_label__22uGC\",\"text\":\"InputText_text__1OAjg\",\"input\":\"InputText_input__23_di\",\"error\":\"InputText_error__21ezK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__dgCCX\",\"large\":\"Button_large__2WdYn\",\"small\":\"Button_small__2gjkf\",\"default\":\"Button_default__1fIO7\",\"error\":\"Button_error__3Np7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3j5OD\",\"active\":\"Paginator_active__2WK2K\",\"paginatorItems\":\"Paginator_paginatorItems__SPC1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TrainForm_form__2am2r form_form__a6yyo\",\"trainBlock\":\"TrainForm_trainBlock__JOO5x\",\"grade\":\"TrainForm_grade__dud6m\",\"active\":\"TrainForm_active__YfqbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1gpGZ form_form__a6yyo\",\"linksForm\":\"LoginForm_linksForm__3WehA\",\"link\":\"LoginForm_link__2QSbo LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxWrapper\":\"InputCheckbox_checkboxWrapper__2wAqz\",\"checkbox\":\"InputCheckbox_checkbox__3gPmy\",\"label\":\"InputCheckbox_label__2oNoo\",\"info\":\"InputCheckbox_info__1monh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioWrapper\":\"InputRadio_radioWrapper__VLFsv\",\"radio\":\"InputRadio_radio__zFt8P\",\"label\":\"InputRadio_label__3COpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3h183\",\"container\":\"Header_container__2uUPK container_container__PX4-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3FUM8\",\"loader\":\"Preloader_loader__28BcO\",\"load\":\"Preloader_load__3odh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegistrationForm_form__3ynJP form_form__a6yyo\",\"link\":\"RegistrationForm_link__3EmAX LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__ib6B-\",\"container\":\"Main_container__1V-h- container_container__PX4-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"LoginPage_page__2921G page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"ErrorMessage_message__15zE2\",\"shake\":\"ErrorMessage_shake__1Izju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"RegistrationPage_page__kZj2O page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"RecoveryPassPage_page__7i91j page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"SetPassPage_page__4r-_B page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ProfilePage_page__2SAW9 page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Packs_page__3qwbU page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__1ixmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"TrainPage_page__3aywU page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Cards_page__2JSyE page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsModal\":\"Cards_packsModal__2N541\",\"form\":\"Cards_form__10qoN\",\"paginator\":\"Cards_paginator__3zIRk\",\"paginatorItems\":\"Cards_paginatorItems__2ykRB\",\"inputPage\":\"Cards_inputPage__257HV\",\"linksForm\":\"Cards_linksForm__5yVdN\",\"link\":\"Cards_link__GITJ6 LinkNative_link__hGO0Z\",\"hGridContainer\":\"Cards_hGridContainer__3z2Z_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"InfoMessage_messageWrapper__1vn64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"TestPage_page__uEre9 page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Test_table__1U9P9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3wUUe\"};","import { ThunkType } from '../../../main/bll/store';\r\nimport { cardsApi, CardsResponseDataType, CardsType } from '../dal/CardsApi';\r\n\r\nexport enum packsActionType {\r\n  SET_LOADING_CARDS = 'CARDS/CARDS/SET_LOADING',\r\n  SET_ERROR_CARDS = 'CARDS/CARDS/SET_ERROR_PACKS',\r\n  SET_CARDS = 'CARDS/CARDS/SET_PACKS',\r\n  ADD_CARD = 'CARDS/CARDS/ADD_CARD',\r\n  UPDATE_CARD = 'CARDS/CARDS/UPDATE_CARD',\r\n  DELETE_CARD = 'CARDS/CARDS/DELETE_CARD',\r\n}\r\n\r\n\r\nconst initialState: StateType = {\r\n  cards: [],\r\n  loading: false,\r\n  error: '',\r\n  cardsTotalCount: 0,\r\n  maxGrade: 0,\r\n  minGrade: 0,\r\n  page: 0,\r\n  pageCount: 4,\r\n  packUserId: '',\r\n};\r\n\r\nexport const cardsReducer = (\r\n  state = initialState,\r\n  action: ActionsType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case packsActionType.SET_LOADING_CARDS:\r\n      return {\r\n        ...state,\r\n        loading: action.payload.loading,\r\n      };\r\n    case packsActionType.SET_ERROR_CARDS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case packsActionType.SET_CARDS:\r\n      return { ...state, ...action.data };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n/** Actions */\r\nexport const setLoadingCards = (loading: boolean) => ({\r\n  type: packsActionType.SET_LOADING_CARDS,\r\n  payload: {\r\n    loading,\r\n  },\r\n} as const);\r\nexport const setCards = (data: CardsResponseDataType) =>\r\n  ({ type: packsActionType.SET_CARDS, data } as const);\r\n\r\nexport const setErrorCards = (error: string) =>\r\n  ({\r\n    type: packsActionType.SET_ERROR_CARDS,\r\n    payload: {\r\n      error,\r\n    },\r\n  } as const);\r\nexport const addCard = (newCard: CardsResponseDataType) =>\r\n  ({\r\n    type: packsActionType.ADD_CARD,\r\n    newCard,\r\n  } as const);\r\nexport const updatedCard = (updatedCard: CardsResponseDataType) =>\r\n  ({\r\n    type: packsActionType.UPDATE_CARD,\r\n    updatedCard,\r\n  } as const);\r\nexport const deletedCard = (deletedCard: CardsResponseDataType) =>\r\n  ({\r\n    type: packsActionType.DELETE_CARD,\r\n    deletedCard,\r\n  } as const);\r\n\r\n/** Thunks */\r\nexport const getCardsTC = (cardsPack_id: string, pageCount?: number, page?: number): ThunkType<ActionsType> =>\r\n  async (dispatch) => {\r\n\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      \r\n      // const {cardPacks, data: {cardPacks}} = await cardsApi.getPacks(userId);\r\n      const data = await cardsApi.getCards({ cardsPack_id, pageCount, page });\r\n      dispatch(setCards(data));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const addCardTC = (cardsPack_id: string, question: string, answer: string,\r\n                          pageCount: number, page: number): ThunkType<ActionsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      let data = await cardsApi.addCard({ cardsPack_id, question, answer });\r\n      await dispatch(getCardsTC(cardsPack_id, pageCount, page));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const updateCardTC = (_id: string, question: string, answer: string, cardsPack_id: string,\r\n                             pageCount: number, page: number): ThunkType<ActionsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      let data = await cardsApi.updatedCard({ _id, question, answer });\r\n      await dispatch(getCardsTC(cardsPack_id, pageCount, page));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const updateGradeCardTC = (cardsPack_id: string, card_id: string, grade: number): ThunkType<ActionsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      debugger\r\n      dispatch(setLoadingCards(true));\r\n      let data = await cardsApi.updatedGradeCard({ grade, card_id });\r\n      await dispatch(getCardsTC(cardsPack_id));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const deleteCardTC = (cardId: string, cardsPack_id: string,\r\n                             pageCount: number, page: number): ThunkType<ActionsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      let data = await cardsApi.deleteCard(cardId);\r\n      await dispatch(getCardsTC(cardsPack_id, pageCount, page));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\n\r\n/** Types */\r\nexport type StateType = {\r\n  cards: CardsType[];\r\n  cardsTotalCount: number\r\n  maxGrade: number\r\n  minGrade: number\r\n  page: number\r\n  pageCount: number\r\n  packUserId: string\r\n  loading: boolean;\r\n  error: string;\r\n};\r\n\r\nexport type ActionsType = ReturnType<typeof setLoadingCards>\r\n  | ReturnType<typeof setCards>\r\n  | ReturnType<typeof addCard>\r\n  | ReturnType<typeof setErrorCards>\r\n  | ReturnType<typeof updatedCard>\r\n  | ReturnType<typeof deletedCard>\r\n","import React, { FC } from 'react';\r\n\r\ntype SvgIconType = {\r\n  type: 'text' | 'email' | 'password';\r\n};\r\n\r\nexport const SvgIcon: FC<SvgIconType> = ({ type }) => {\r\n  switch (type) {\r\n    case 'text':\r\n      return (\r\n        <svg\r\n          viewBox=\"0 0 484 484\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"m401.648438 18.234375c-24.394532-24.351563-63.898438-24.351563-88.292969 0l-22.101563 22.222656-235.269531 235.144531-.5.503907c-.121094.121093-.121094.25-.25.25-.25.375-.625.746093-.871094 1.121093 0 .125-.128906.125-.128906.25-.25.375-.371094.625-.625 1-.121094.125-.121094.246094-.246094.375-.125.375-.25.625-.378906 1 0 .121094-.121094.121094-.121094.25l-52.199219 156.96875c-1.53125 4.46875-.367187 9.417969 2.996094 12.734376 2.363282 2.332031 5.550782 3.636718 8.867188 3.625 1.355468-.023438 2.699218-.234376 3.996094-.625l156.847656-52.324219c.121094 0 .121094 0 .25-.121094.394531-.117187.773437-.285156 1.121094-.503906.097656-.011719.183593-.054688.253906-.121094.371094-.25.871094-.503906 1.246094-.753906.371093-.246094.75-.621094 1.125-.871094.125-.128906.246093-.128906.246093-.25.128907-.125.378907-.246094.503907-.5l257.371093-257.371094c24.351563-24.394531 24.351563-63.898437 0-88.289062zm-232.273438 353.148437-86.914062-86.910156 217.535156-217.535156 86.914062 86.910156zm-99.15625-63.808593 75.929688 75.925781-114.015626 37.960938zm347.664062-184.820313-13.238281 13.363282-86.917969-86.917969 13.367188-13.359375c14.621094-14.609375 38.320312-14.609375 52.945312 0l33.964844 33.964844c14.511719 14.6875 14.457032 38.332031-.121094 52.949218zm0 0\" />\r\n        </svg>\r\n      );\r\n\r\n    case 'email':\r\n      return (\r\n        <svg\r\n          viewBox=\"0 0 512 512\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M467 61H45C20.218 61 0 81.196 0 106v300c0 24.72 20.128 45 45 45h422c24.72 0 45-20.128 45-45V106c0-24.72-20.128-45-45-45zm-6.214 30L256.954 294.833 51.359 91h409.427zM30 399.788V112.069l144.479 143.24L30 399.788zM51.213 421l144.57-144.57 50.657 50.222c5.864 5.814 15.327 5.795 21.167-.046L317 277.213 460.787 421H51.213zM482 399.787L338.213 256 482 112.212v287.575z\" />\r\n        </svg>\r\n      );\r\n\r\n    case 'password':\r\n      return (\r\n        <svg\r\n          viewBox=\"0 0 24 24\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"m18.75 24h-13.5c-1.24 0-2.25-1.009-2.25-2.25v-10.5c0-1.241 1.01-2.25 2.25-2.25h13.5c1.24 0 2.25 1.009 2.25 2.25v10.5c0 1.241-1.01 2.25-2.25 2.25zm-13.5-13.5c-.413 0-.75.336-.75.75v10.5c0 .414.337.75.75.75h13.5c.413 0 .75-.336.75-.75v-10.5c0-.414-.337-.75-.75-.75z\" />\r\n          <path d=\"m17.25 10.5c-.414 0-.75-.336-.75-.75v-3.75c0-2.481-2.019-4.5-4.5-4.5s-4.5 2.019-4.5 4.5v3.75c0 .414-.336.75-.75.75s-.75-.336-.75-.75v-3.75c0-3.309 2.691-6 6-6s6 2.691 6 6v3.75c0 .414-.336.75-.75.75z\" />\r\n          <path d=\"m12 17c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zm0-2.5c-.275 0-.5.224-.5.5s.225.5.5.5.5-.224.5-.5-.225-.5-.5-.5z\" />\r\n          <path d=\"m12 20c-.414 0-.75-.336-.75-.75v-2.75c0-.414.336-.75.75-.75s.75.336.75.75v2.75c0 .414-.336.75-.75.75z\" />\r\n        </svg>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <svg\r\n          height=\"48\"\r\n          width=\"48\"\r\n          viewBox=\"0 0 512 512\"\r\n          aria-hidden=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M132.893 310.534l-30.082 10.911L91.9 291.364l30.081-10.911z\" />\r\n          <path d=\"M271.552 301.072l-77.856-46.72-41.616 15.152 10.944 30.064 27.28-9.92 82.144 49.28 97.6-65.072L480 315.088V480H32V347.2l40.8-14.848-10.928-30.048L0 324.8V512h512V292.912l-146.048-54.768z\" />\r\n          <path d=\"M0 0v278.848l66.576-24.224-10.928-30.064L32 233.152V32h448v168.912l-114.048-42.768-94.4 62.928-77.856-46.72-47.84 17.392 10.944 30.064 33.504-12.16 82.144 49.28 97.6-65.072L512 247.088V0z\" />\r\n          <path d=\"M96.656 243.686L85.721 213.63l30.07-10.94 10.935 30.055z\" />\r\n        </svg>\r\n      );\r\n  }\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n  FC,\r\n} from 'react';\r\n\r\nimport s from './InputText.module.scss';\r\nimport { SvgIcon } from '../SvgIcon';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n  type?: 'text' | 'email' | 'password';\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  errorClassName?: string;\r\n  text?: string;\r\n};\r\n\r\nexport const InputText: FC<PropsType> = ({\r\n  type = 'text',\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  errorClassName,\r\n  text,\r\n\r\n  ...restProps\r\n}) => {\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    e.key === 'Enter' && onEnter && onEnter();\r\n  };\r\n\r\n  const finalErrorClassName = `${s.errorMessage} ${\r\n    errorClassName ? errorClassName : ''\r\n  }`;\r\n  const finalInputClassName = `${s.input} ${error ? s.error : ''} ${\r\n    className ? className : ''\r\n  }`;\r\n\r\n  return (\r\n    <div className={s.inputWrapper}>\r\n      {error && <span className={finalErrorClassName}>{error}</span>}\r\n\r\n      <label className={s.label}>\r\n        <span className={s.text}>{text || `Enter your ${type}`}</span>\r\n\r\n        <input\r\n          type={type}\r\n          onChange={onChangeHandler}\r\n          onKeyPress={onKeyPressHandler}\r\n          className={finalInputClassName}\r\n          {...restProps}\r\n        />\r\n\r\n        <SvgIcon type={type} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps, FC } from 'react';\r\n\r\nimport s from './Button.module.scss';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype PropsType = DefaultButtonPropsType & {\r\n  error?: boolean;\r\n  large?: boolean;\r\n  small?: boolean;\r\n};\r\n\r\nexport const Button: FC<PropsType> = ({\r\n  error,\r\n  large,\r\n  small,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${s.btn} ${large ? s.large : ''} ${\r\n    small ? s.small : ''\r\n  } ${error ? s.error : s.default} ${className ? className : ''}`;\r\n\r\n  return <button className={finalClassName} {...restProps} />;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  FC,\r\n} from 'react';\r\n\r\nimport s from './InputCheckbox.module.scss';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  labelClassName?: string;\r\n};\r\n\r\nexport const InputCheckbox: FC<PropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  labelClassName,\r\n  children,\r\n\r\n  ...restProps\r\n}) => {\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalLabelClassName = `${s.label} ${\r\n    labelClassName ? labelClassName : ''\r\n  }`;\r\n  const finalCheckboxClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <label className={s.checkboxWrapper}>\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={onChangeHandler}\r\n        className={finalCheckboxClassName}\r\n        {...restProps}\r\n      />\r\n\r\n      <span className={finalLabelClassName}>{children}</span>\r\n    </label>\r\n  );\r\n};\r\n","export const randomId = (): string =>\r\n  Math.floor(Math.random() * 1e9).toString(16);\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Preloader.module.scss';\r\n\r\ntype PropsType = {\r\n  text?: string;\r\n};\r\n\r\nexport const Preloader: FC<PropsType> = ({ text }) => {\r\n  return (\r\n    <div className={s.preloader}>\r\n      <div className={s.loader}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { ChangeEvent } from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\ntype ValidationsType = {\r\n  isEmail?: boolean\r\n  minLength?: number\r\n  isPassword?: boolean\r\n}\r\n\r\nconst useValidation = (value: string, validations: ValidationsType) => {\r\n  const [inputError, setInputError] = useState('');\r\n  const [inputValid, setInputValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    for (const validation in validations) {\r\n      switch (validation) {\r\n        case 'isEmail':\r\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n          if (value.length === 0) {\r\n            setInputError('Email is required');\r\n          } else {\r\n            re.test(String(value).toLowerCase()) ? setInputError('') : setInputError('Email address is invalid');\r\n          }\r\n          break;\r\n        case 'isPassword':\r\n          if (value.length === 0) {\r\n            setInputError('Password is required');\r\n          } else value.length < (validations.minLength ? validations.minLength : 8)\r\n            ? setInputError('Password must be 8 or more characters')\r\n            : setInputError('');\r\n      }\r\n    }\r\n  }, [value, validations]);\r\n\r\n  useEffect(() => {\r\n    if (inputError) {\r\n      setInputValid(false);\r\n    } else {\r\n      setInputValid(true);\r\n    }\r\n  }, [inputError]);\r\n\r\n  return {\r\n    setInputError,\r\n    inputError,\r\n    inputValid,\r\n  };\r\n};\r\nexport type HookInputType = ReturnType<typeof useInput>\r\nexport const useInput = (initialValue: string, validations: ValidationsType) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [isDirty, setDirty] = useState(false); //выход из инпута\r\n  const valid = useValidation(value, validations);\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const onBlur = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setDirty(true);\r\n  };\r\n\r\n  return {\r\n    setDirty,\r\n    setValue,\r\n    value,\r\n    onChange,\r\n    onBlur,\r\n    isDirty,\r\n    ...valid,\r\n  };\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './ErrorMessage.module.scss';\r\nimport { Button } from '../Button';\r\n\r\ntype PropsType = {\r\n  clickHandler?: () => void;\r\n};\r\n\r\nexport const ErrorMessage: FC<PropsType> = ({ children, clickHandler }) => {\r\n  return (\r\n    <div className={s.message}>\r\n      <p>{children}</p>\r\n      {clickHandler && (\r\n        <Button small error onClick={clickHandler}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, FormEvent, useEffect, useState } from 'react';\r\n\r\nimport s from './LoginForm.module.scss';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { LoginLinkType } from './LoginFormContainer';\r\nimport { InputCheckbox } from '../../../../common/ui/InputCheckbox';\r\nimport { randomId } from '../../../../utils/randomId';\r\nimport { Preloader } from '../../../../common/ui/Preloader';\r\nimport {\r\n  HookInputType,\r\n  useInput,\r\n} from '../../../../hooks/ValidationFormAndrew';\r\nimport { ErrorMessage } from '../../../../common/ui/ErrorMessage';\r\n\r\ntype PropsType = {\r\n  loginLinks: LoginLinkType[];\r\n  sendLogin: (email: string, password: string, rememberMe: boolean) => void;\r\n  closeMessage: (error: string) => void;\r\n  loading: boolean;\r\n  success: boolean;\r\n  setSuc: (success: boolean) => void;\r\n  error: string;\r\n  redirectLink: string;\r\n  userId: string;\r\n};\r\n\r\nexport const LoginForm: FC<PropsType> = ({\r\n                                           loginLinks,\r\n                                           sendLogin,\r\n                                           loading,\r\n                                           success,\r\n                                           setSuc,\r\n                                           error,\r\n                                           userId,\r\n                                           closeMessage,\r\n                                           redirectLink,\r\n                                         }) => {\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const email = useInput('', { isEmail: true });\r\n  const password = useInput('', {\r\n    minLength: 8,\r\n    isPassword: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      email.setValue('');\r\n      password.setValue('');\r\n      setRememberMe(false);\r\n      setSuc(false);\r\n    }\r\n  }, [success, setSuc, email, password]);\r\n\r\n  if (userId) {\r\n    return <Redirect to={redirectLink} />;\r\n  }\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (email.value.trim() && password.value.trim()) {\r\n      sendLogin(email.value, password.value, rememberMe);\r\n    }\r\n  };\r\n\r\n  const closeMessageHandler = (obj?: HookInputType) => () => {\r\n    closeMessage('');\r\n    if (obj) {\r\n      obj.setDirty(false);\r\n    }\r\n  };\r\n\r\n  return <form className={s.form} onSubmit={submitHandler}>\r\n    <div>\r\n      {loading && <Preloader text='Sending...' />}\r\n      {error && (\r\n        <ErrorMessage clickHandler={closeMessageHandler()}>\r\n          {error}\r\n        </ErrorMessage>\r\n      )}\r\n    </div>\r\n\r\n    {email.isDirty && email.inputError && (\r\n      <ErrorMessage clickHandler={closeMessageHandler(email)}>\r\n        {email.inputError}\r\n      </ErrorMessage>\r\n    )}\r\n\r\n    <InputText placeholder={'Login'}\r\n               type={'email'}\r\n               onChange={e => email.onChange(e)}\r\n               onBlur={e => email.onBlur(e)}\r\n               value={email.value}\r\n               disabled={loading}\r\n    />\r\n\r\n    {password.isDirty && password.inputError && (\r\n      <ErrorMessage clickHandler={closeMessageHandler(password)}>\r\n        {password.inputError}\r\n      </ErrorMessage>\r\n    )}\r\n    <InputText placeholder={'Password'}\r\n               type={'password'}\r\n               onChange={e => password.onChange(e)}\r\n               onBlur={e => password.onBlur(e)}\r\n               value={password.value}\r\n               disabled={loading}\r\n    />\r\n    <InputCheckbox type={'checkbox'}\r\n                   checked={rememberMe}\r\n                   onChangeChecked={setRememberMe}\r\n    > Remember me\r\n    </InputCheckbox>\r\n\r\n    <Button type='submit'\r\n            disabled={!email.inputValid || !password.inputValid || loading}>Submit</Button>\r\n\r\n    <div className={s.linksForm}>\r\n      {loginLinks.map(({ link, title }) => (\r\n        <Link key={randomId()} to={link} className={s.link}>\r\n          {title}\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  </form>;\r\n};\r\n","export const unCamelCase = (str: string): string =>\r\n  `${str.replace(/([A-Z])/g, (word, idx) =>\r\n    idx === 0 ? word.toUpperCase() : ` ${word.toLowerCase()}`,\r\n  )}`;\r\n\r\nexport const capitalizeFirstLetter = (str: string): string =>\r\n  `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\r\n\r\nexport const concatString = (str: string, char: string = ''): string =>\r\n  str.replace(/\\s/g, char);\r\n\r\nexport const transformLinkToTitle = (str: string): string =>\r\n  str.slice(1, str.length).replace(/-/g, ' ');\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootStateType } from '../main/bll/store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector;\r\n","export const DEV = process.env.NODE_ENV !== 'production';\r\n","import axios from 'axios';\r\n\r\nimport { DEV } from '../../config';\r\n\r\nexport const baseURL = DEV\r\n  ? 'http://localhost:7542/2.0/'\r\n  : 'https://neko-back.herokuapp.com/2.0/';\r\n\r\nexport const API = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n});\r\n","import { API } from '../../../main/dal/api';\r\n\r\nexport const authAPI = {\r\n  login({ email, password, rememberMe }: RequestLoginDataType) {\r\n    return API.post<ResponseUserDataType>(`auth/login`, { email, password, rememberMe })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\ntype RequestLoginDataType = {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n};\r\n\r\nexport type ResponseUserDataType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n\r\n  created: Date;\r\n  updated: Date;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n\r\n  error?: string;\r\n};\r\n","import { API } from '../../../main/dal/api';\r\nimport { ResponseUserDataType } from '../../login/dal/loginApi';\r\n\r\nexport const logOutAPI = {\r\n  logOut() {\r\n    return API.delete(`auth/me`)\r\n      .then(response => response.data);\r\n  },\r\n};\r\nexport const isAuthAPI = {\r\n  isAuth() {\r\n    return API.post<ResponseUserDataType>(`auth/me`)\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\nexport const changeAuthAPI = {\r\n  changeAuth({ name, avatar }: RequestChangeUserDataType) {\r\n    return API.put<ResponseUserDataType>(`auth/me`, { updatedUser: { name, avatar } })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\ntype RequestChangeUserDataType = {\r\n  name: string;\r\n  avatar: string;\r\n};","import { API } from '../../../main/dal/api';\r\n\r\n\r\nexport const cardsApi = {\r\n  getCards({ cardsPack_id, pageCount, page }: CardsRequestDataType) {\r\n    return API.get<CardsResponseDataType>(`cards/card`, { params: { cardsPack_id, pageCount, page  } })\r\n      .then(response => response.data);\r\n  },\r\n  addCard({ cardsPack_id, question, answer }: CardAddRequestDataType) {\r\n    return API.post(`cards/card`, { card: { cardsPack_id, question, answer } })\r\n      .then(response => response.data);\r\n  },\r\n  updatedCard({ _id, question, answer }: CardRequestUpdateDataType) {\r\n    return API.put(`cards/card`, { card: { _id, question, answer } })\r\n      .then(response => response.data);\r\n  },\r\n  updatedGradeCard({  grade, card_id  }: GradeCardRequestUpdateDataType) {\r\n    return API.put<GradeCardResponseUpdateDataType>(`cards/grade`, {  grade, card_id  })\r\n      .then(response => response.data);\r\n  },\r\n  deleteCard(cardId: string) {\r\n    return API.delete(`cards/card`, { params: { id: cardId } })\r\n      .then(response => response.data);\r\n  },\r\n};\r\nexport type GradeCardRequestUpdateDataType = {\r\n  card_id: string\r\n  grade: number\r\n}\r\nexport type GradeCardResponseUpdateDataType = {\r\n_id: string\r\ncardsPack_id: string\r\ncard_id: string\r\nuser_id: string\r\ngrade: number\r\nshots: number\r\n}\r\nexport type CardRequestUpdateDataType = {\r\n  _id: string\r\n  question?: string\r\n  answer?: string\r\n  comments?: string\r\n}\r\ntype CardsRequestDataType = {\r\n  cardAnswer?: string\r\n  cardQuestion?: string\r\n  cardsPack_id: string\r\n  min?: number\r\n  max?: number\r\n  sortCards?: number\r\n  page?: number\r\n  pageCount?: number\r\n}\r\n\r\nexport type CardsResponseDataType = {\r\n  cards: CardsType[];\r\n  cardsTotalCount: number\r\n  maxGrade: number\r\n  minGrade: number\r\n  page: number\r\n  pageCount: number\r\n  packUserId: string\r\n}\r\nexport type CardsType = {\r\n  answer: string\r\n  question: string\r\n  cardsPack_id: string\r\n  user_id: string\r\n  grade: number\r\n  shots: number\r\n  rating: number\r\n  type: string\r\n  created: string\r\n  updated: string\r\n  __v: number\r\n  _id: string\r\n}\r\nexport type CardAddRequestDataType = {\r\n  cardsPack_id: string\r\n  question: string\r\n  answer: string\r\n  grade?: 0 // 0..5, не обязателен\r\n  shots?: 0 // не обязателен\r\n  rating?: 0 // не обязателен\r\n  answerImg?: string\r\n  questionImg?: string\r\n  questionVideo?: string\r\n  answerVideo?: string\r\n  type?: string\r\n}\r\n// export type CardsType = {\r\n//   _id: string\r\n//   user_id: string\r\n//   name: string\r\n//   path: string // папка\r\n//   cardsCount: number\r\n//   grade: number // средняя оценка карточек\r\n//   shots: number // количество попыток\r\n//   rating: number // лайки\r\n//   type: string // ещё будет \"folder\" (папка)\r\n//   created: string\r\n//   updated: string\r\n//   __v: number\r\n// }","import { ThunkType } from '../../../main/bll/store';\r\nimport { authAPI } from '../dal/loginApi';\r\nimport { changeAuthAPI, isAuthAPI, logOutAPI } from '../../profile/dal/profileApi';\r\nimport { setErrorCards, ActionsType as CardActionsType } from '../../cards/bll/CardsReducer';\r\n\r\nexport enum loginActionType {\r\n  SET_LOADING = 'CARDS/LOGIN/SET_LOADING',\r\n  SET_USER = 'CARDS/LOGIN/SET_USER',\r\n  SET_ERROR = 'CARDS/LOGIN/SET_ERROR',\r\n  SET_SUCCESS = 'CARDS/LOGIN/SET_SUCCESS',\r\n  CHANGE_USER = 'CARDS/LOGIN/CHANGE_USER',\r\n  IS_INITIAL = 'CARDS/LOGIN/IS_INITIAL'\r\n}\r\n\r\nconst user = {\r\n  _id: '',\r\n  email: '',\r\n  name: '',\r\n  publicCardPacksCount: 0, // количество колод\r\n\r\n  created: new Date(),\r\n  updated: new Date(),\r\n  isAdmin: false,\r\n  verified: false, // подтвердил ли почту\r\n  rememberMe: false,\r\n};\r\n\r\nconst initialState: StateType = {\r\n  user,\r\n  loading: false,\r\n  success: false,\r\n  error: '',\r\n  isInitial: false,\r\n};\r\n\r\nexport const loginReducer = (\r\n  state = initialState,\r\n  action: ActionsType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case loginActionType.SET_USER:\r\n      return { ...state, user: action.user };\r\n    case loginActionType.CHANGE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, name: action.name, avatar: action.avatar },\r\n      };\r\n    case loginActionType.IS_INITIAL:\r\n    case loginActionType.SET_LOADING:\r\n    case loginActionType.SET_ERROR:\r\n    case loginActionType.SET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: '',\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nexport const setLoading = (loading: boolean) => ({\r\n  type: loginActionType.SET_LOADING,\r\n  payload: {\r\n    loading,\r\n  },\r\n} as const);\r\nexport const setSuccess = (success: boolean) =>\r\n  ({\r\n    type: loginActionType.SET_SUCCESS,\r\n    payload: {\r\n      success,\r\n    },\r\n  } as const);\r\nexport const setIsInitial = (isInitial: boolean) =>\r\n  ({\r\n    type: loginActionType.IS_INITIAL,\r\n    payload: {\r\n      isInitial,\r\n    },\r\n  } as const);\r\nexport const setUser = (user: UserType) => ({ type: loginActionType.SET_USER, user } as const);\r\nexport const setError = (error: string) =>\r\n  ({\r\n    type: loginActionType.SET_ERROR,\r\n    payload: {\r\n      error,\r\n    },\r\n  } as const);\r\nexport const changeUser = (name: string, avatar: string) => ({\r\n  type: loginActionType.CHANGE_USER,\r\n  name,\r\n  avatar,\r\n} as const);\r\n\r\n/** Thunks */\r\nexport const loginPageTC = (email: string, password: string, rememberMe: boolean): ThunkType<ActionsType | CardActionsType> => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    dispatch(setError(''));\r\n    let data = await authAPI.login({ email, password, rememberMe });\r\n    dispatch(setUser(data));\r\n    dispatch(setSuccess(true));\r\n    dispatch(setErrorCards(''));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setError(error));\r\n  }\r\n};\r\nexport const logoutTC = (): ThunkType<ActionsType> => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    await logOutAPI.logOut();\r\n    dispatch(setLoading(false));\r\n    dispatch(setUser(user));\r\n\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setError(error));\r\n  }\r\n};\r\nexport const isAuthTC = (): ThunkType<ActionsType> => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    dispatch(setError(''));\r\n    let data = await isAuthAPI.isAuth();\r\n    dispatch(setIsInitial(true));\r\n    dispatch(setUser(data));\r\n    dispatch(setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setError(error));\r\n  }\r\n};\r\nexport const changeAuthTC = (name: string, avatar: string): ThunkType<ActionsType> => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    let data = await changeAuthAPI.changeAuth({ name, avatar });\r\n    dispatch(setLoading(false));\r\n    dispatch(changeUser(data.name, data.avatar ? data.avatar : ''));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setError(error));\r\n  }\r\n};\r\n\r\n/** Types */\r\nexport type StateType = {\r\n  user: UserType;\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string;\r\n  isInitial: boolean;\r\n};\r\n\r\ntype ActionsType = ReturnType<typeof setLoading>\r\n  | ReturnType<typeof setUser>\r\n  | ReturnType<typeof setError>\r\n  | ReturnType<typeof setSuccess>\r\n  | ReturnType<typeof changeUser>\r\n  | ReturnType<typeof setIsInitial>;\r\n\r\nexport type UserType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n\r\n  created: Date;\r\n  updated: Date;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n\r\n  error?: string;\r\n}","import { InferActionsType } from '../../../main/bll/store';\r\n\r\nexport enum RecoveryPassActionType {\r\n  SET_LOADING = 'CARDS/RECOVERY_PASS/SET_LOADING',\r\n  SET_SUCCESS = 'CARDS/RECOVERY_PASS/SET_SUCCESS',\r\n  SET_ERROR = 'CARDS/RECOVERY_PASS/SET_ERROR',\r\n}\r\n\r\nexport const recoveryPassActions = {\r\n  setLoading: (loading: boolean) =>\r\n    ({\r\n      type: RecoveryPassActionType.SET_LOADING,\r\n      payload: {\r\n        loading,\r\n      },\r\n    } as const),\r\n  setSuccess: (success: boolean) =>\r\n    ({\r\n      type: RecoveryPassActionType.SET_SUCCESS,\r\n      payload: {\r\n        success,\r\n      },\r\n    } as const),\r\n  setError: (error: string) =>\r\n    ({\r\n      type: RecoveryPassActionType.SET_ERROR,\r\n      payload: {\r\n        error,\r\n      },\r\n    } as const),\r\n};\r\n\r\nexport type RecoveryPassActionsType = InferActionsType<\r\n  typeof recoveryPassActions\r\n>;\r\n","import React, { FC } from 'react';\r\nimport { LoginForm } from './LoginForm';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { capitalizeFirstLetter, transformLinkToTitle } from '../../../../utils/textTransform';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport { loginPageTC, setError, setSuccess } from '../../bll/loginReducer';\r\n\r\nexport const LoginFormContainer: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { RECOVERY_PASS, REGISTRATION, PROFILE } = PATH;\r\n\r\n  const loginLinks: LoginLinkType[] = [\r\n    {\r\n      link: RECOVERY_PASS,\r\n      title: capitalizeFirstLetter(transformLinkToTitle(' Forgot password?')),\r\n    },\r\n    {\r\n      link: REGISTRATION,\r\n      title: capitalizeFirstLetter(transformLinkToTitle(' Registration')),\r\n    },\r\n  ];\r\n\r\n  const userId = useTypedSelector<string>((state) => state.login.user._id);\r\n  const loading = useTypedSelector<boolean>(\r\n    (state) => state.login.loading,\r\n  );\r\n  const success = useTypedSelector<boolean>(\r\n    (state) => state.login.success,\r\n  );\r\n  const error = useTypedSelector<string>((state) => state.login.error);\r\n\r\n  const sendLogin = (email: string, password: string, rememberMe: boolean) => {\r\n    dispatch(loginPageTC(email, password, rememberMe));\r\n  };\r\n\r\n  const setSuc = (success: boolean) => {\r\n    dispatch(setSuccess(success));\r\n  };\r\n  const closeMessage = (error: string) => {\r\n    dispatch(setError(error));\r\n  };\r\n\r\n  return <LoginForm loginLinks={loginLinks}\r\n                    sendLogin={sendLogin}\r\n                    loading={loading}\r\n                    success={success}\r\n                    userId={userId}\r\n                    setSuc={setSuc}\r\n                    error={error}\r\n                    closeMessage={closeMessage}\r\n                    redirectLink={PROFILE}\r\n  />;\r\n};\r\n\r\nexport type LoginLinkType = {\r\n  link: string;\r\n  title: string;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './LoginPage.module.scss';\r\nimport { LoginFormContainer } from './LoginFormContainer/LoginFormContainer';\r\n\r\nexport const LoginPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Login</h2>\r\n\r\n      <LoginFormContainer />\r\n    </section>\r\n  );\r\n};\r\n","import React, {FC, FormEvent} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport s from './RegistrationForm.module.scss'\r\nimport {InputText} from \"../../../../common/ui/InputText\";\r\nimport {Button} from \"../../../../common/ui/Button\";\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\n\r\n\r\ntype PropsType = {\r\n    loginLink: LoginLinkType;\r\n};\r\n\r\nexport const RegistrationForm: FC<PropsType> = ({loginLink: { link, title }}) => {\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log('submit');\r\n    };\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={submitHandler}>\r\n            <InputText type=\"email\" placeholder=\"Email\" />\r\n            <InputText type=\"password\" placeholder=\"Password\" />\r\n            <InputText type=\"password\" placeholder=\"Repeat password\"/>\r\n\r\n            <Button type=\"submit\" >Sing Up</Button>\r\n\r\n            <Link to={link} className={s.link}>\r\n                {title}\r\n            </Link>\r\n        </form>\r\n    );\r\n};","import React, { FC } from 'react';\r\n\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle,\r\n} from '../../../../utils/textTransform';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport {RegistrationForm} from \"./RegistrationForm\";\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\n\r\n\r\nexport const RegistrationFormContainer: FC = () => {\r\n  const { LOGIN } = PATH;\r\n\r\n  const loginLink: LoginLinkType = {\r\n    link: LOGIN,\r\n    title: capitalizeFirstLetter(transformLinkToTitle(LOGIN)),\r\n  };\r\n\r\n  return <RegistrationForm loginLink={loginLink} />;\r\n};\r\n","import React, {FC} from 'react';\r\n\r\nimport s from './RegistrationPage.module.scss';\r\nimport {RegistrationFormContainer} from \"./RegistrationForm/RegistrationFormContainer\";\r\n\r\n\r\n\r\n\r\n\r\nexport const RegistrationPage: FC = () => {\r\n\r\n    return (\r\n        <section className={s.page}>\r\n            <h2>Registration</h2>\r\n\r\n            <RegistrationFormContainer/>\r\n\r\n        </section>\r\n    );\r\n};\r\n","import React, { FC, FormEvent, useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport s from './RecoveryPassForm.module.scss';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { Preloader } from '../../../../common/ui/Preloader';\r\nimport { ErrorMessage } from '../../../../common/ui/ErrorMessage';\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\n\r\ntype PropsType = {\r\n  loginLink: LoginLinkType;\r\n  sendEmail: (email: string) => void;\r\n  closeMessage: (error: string) => void;\r\n  setSuccess: (success: boolean) => void;\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string;\r\n  redirectLink: string;\r\n};\r\n\r\nexport const RecoveryPassForm: FC<PropsType> = ({\r\n  loginLink: { link, title },\r\n  sendEmail,\r\n  closeMessage,\r\n  setSuccess,\r\n  loading,\r\n  success,\r\n  error,\r\n  redirectLink,\r\n}) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setEmail('');\r\n      setSuccess(false);\r\n    }\r\n  }, [success, setSuccess]);\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (email.trim()) {\r\n      sendEmail(email);\r\n    }\r\n  };\r\n\r\n  const closeMessageHandler = () => {\r\n    closeMessage('');\r\n  };\r\n\r\n  if (success) {\r\n    return <Redirect to={redirectLink} />;\r\n  }\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={submitHandler}>\r\n      <div className={s.messageWrapper}>\r\n        {loading && <Preloader text=\"Sending...\" />}\r\n\r\n        {!error && (\r\n          <ErrorMessage clickHandler={closeMessageHandler}>\r\n            {error}\r\n          </ErrorMessage>\r\n        )}\r\n      </div>\r\n\r\n      <InputText\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        onChangeText={setEmail}\r\n        value={email}\r\n        disabled={loading}\r\n      />\r\n\r\n      <Button type=\"submit\" disabled={loading}>\r\n        Submit\r\n      </Button>\r\n\r\n      <Link to={link} className={s.link}>\r\n        {title}\r\n      </Link>\r\n    </form>\r\n  );\r\n};\r\n","import { ThunkType } from '../../../main/bll/store';\r\nimport { CardsPackAPIType, packsAPI } from '../dal/PacksApi';\r\n\r\nexport enum packsActionType {\r\n  SET_LOADING = 'CARDS/PACKS/SET_LOADING',\r\n  SET_ERROR_PACKS = 'CARDS/PACKS/SET_ERROR_PACKS',\r\n  SET_PACKS = 'CARDS/PACKS/SET_PACKS',\r\n  ADD_PACK = 'CARDS/PACKS/ADD_PACK',\r\n  UPDATE_PACKS = 'CARDS/PACKS/UPDATE_PACKS',\r\n  DELETE_PACK = 'CARDS/PACKS/DELETE_PACK',\r\n}\r\n\r\nconst initialState: StateType = {\r\n  cardPacks: [],\r\n  loading: false,\r\n  error: '',\r\n  cardPacksTotalCount: 0,\r\n  maxCardsCount: 0,\r\n  minCardsCount: 0,\r\n  page: 1,\r\n  pageCount: 100,\r\n};\r\n\r\nexport const packsReducer = (\r\n  state = initialState,\r\n  action: ActionsType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case packsActionType.SET_LOADING:\r\n      return { ...state, error: '', loading: action.payload.loading };\r\n    case packsActionType.SET_ERROR_PACKS:\r\n      return {\r\n        ...state, loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case packsActionType.SET_PACKS:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nexport const setLoading = (loading: boolean) => ({\r\n  type: packsActionType.SET_LOADING,\r\n  payload: {\r\n    loading,\r\n  },\r\n} as const);\r\nexport const setCardsPacks = (payload: CardsPackAPIType) => ({ type: packsActionType.SET_PACKS, payload } as const);\r\nexport const addCardsPack = (newCardsPack: CardPacksType) => ({\r\n  type: packsActionType.ADD_PACK,\r\n  newCardsPack,\r\n} as const);\r\nexport const setErrorPacks = (error: string) =>\r\n  ({\r\n    type: packsActionType.SET_ERROR_PACKS,\r\n    payload: {\r\n      error,\r\n    },\r\n  } as const);\r\nexport const updatedCardsPack = (updatedCardsPack: CardPacksType) => ({\r\n  type: packsActionType.UPDATE_PACKS, updatedCardsPack} as const);\r\nexport const deletedCardsPack = (deletedCardsPack: CardPacksType) => ({\r\n  type: packsActionType.DELETE_PACK, deletedCardsPack} as const);\r\n\r\n/** Thunks */\r\nexport const getCardsPacksTC = (userId: string, pageCount: number, page: number): ThunkType<ActionsType> =>\r\n  async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      // dispatch(setErrorPacks(''));\r\n      const data = await packsAPI.getPacks(userId, pageCount, page);\r\n      dispatch(setCardsPacks(data));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\nexport const addCardsPackTC = (name: string, privat: boolean, userId: string, pageCount: number, page: number): ThunkType<ActionsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      let data = await packsAPI.addPack(name, privat);\r\n      await dispatch(getCardsPacksTC(userId, pageCount, page));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\nexport const updatedCardsPackTC = (changedPackName: string, cardsPackId: string, userId: string, pageCount: number, page: number): ThunkType<ActionsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      let data = await packsAPI.updatedPacks(changedPackName, cardsPackId);\r\n      await dispatch(getCardsPacksTC(userId, pageCount, page));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\nexport const deletedCardsPackTC = (cardsPackId: string, userId: string, pageCount: number, page: number): ThunkType<ActionsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      let data = await packsAPI.deletePack(cardsPackId);\r\n      await dispatch(getCardsPacksTC(userId, pageCount, page));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\n\r\n/** Types */\r\nexport type StateType = {\r\n  cardPacks: CardPacksType[];\r\n  cardPacksTotalCount: number // количество колод\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number // выбранная страница\r\n  pageCount: number // количество элементов на странице\r\n  loading: boolean;\r\n  error: string;\r\n};\r\n\r\ntype ActionsType = ReturnType<typeof setLoading>\r\n  | ReturnType<typeof setCardsPacks>\r\n  | ReturnType<typeof addCardsPack>\r\n  | ReturnType<typeof setErrorPacks>\r\n  | ReturnType<typeof updatedCardsPack>\r\n  | ReturnType<typeof deletedCardsPack>\r\n\r\nexport type CardPacksType = {\r\n  _id: string\r\n  user_id: string\r\n  name: string\r\n  path: string // папка\r\n  cardsCount: number\r\n  grade: number // средняя оценка карточек\r\n  shots: number // количество попыток\r\n  rating: number // лайки\r\n  type: string // ещё будет \"folder\" (папка)\r\n  created: string\r\n  updated: string\r\n  __v: number\r\n  private?: boolean\r\n}","import { API } from '../../../main/dal/api';\r\nimport { message } from './messageTemplate';\r\n\r\nexport type RequestDataType = {\r\n  email: string;\r\n  from?: string;\r\n  message?: string;\r\n};\r\n\r\ntype ResponseDataType = {\r\n  info: string;\r\n  success: boolean;\r\n  answer: boolean;\r\n  html: boolean;\r\n};\r\n\r\nexport const recoveryPassApi = {\r\n  sendEmail({ email }: RequestDataType): Promise<ResponseDataType> {\r\n    return API.post<ResponseDataType>(`auth/forgot`, {\r\n      email,\r\n      from: 'Andrei Shved  <svensk.tut.by@gmail.com>',\r\n      message,\r\n    }).then((res) => res.data);\r\n  },\r\n};\r\n","export const message = `<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n  <head>\r\n    <title>HTML email template</title>\r\n    <meta name=\"viewport\" content=\"width = 375, initial-scale = -1\">\r\n  </head>\r\n\r\n  <body style=\"background-color: #ffffff; font-size: 16px;\">\r\n    <center>\r\n      <table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"height: 100%; width: 600px; font-size: 18px;\">\r\n          <!-- BEGIN EMAIL -->\r\n          <tr>\r\n            <td align=\"center\" bgcolor=\"#ffffff\" style=\"padding:30px\">\r\n               <p style=\"text-align:left\">Hello,<br><br> We received a request to reset the password for your account for this email address. To initiate the password reset process for your account, click the link below.\r\n              </p>\r\n              <p>\r\n                <a target=\"_blank\" style=\"text-decoration:none; background-color: #17a2b8; border: #17a2b8 1px solid; color: #fff; padding:10px 10px; display:block;\" href=\"https://svensktutby.github.io/cards/#/set-pass/$token$\">\r\n                  <strong>Reset Password</strong></a>\r\n              </p>\r\n              <p style=\"text-align:left\">This link can only be used once. If you need to reset your password again, please visit <a href=\"https://svensktutby.github.io/cards/\">our site</a> and request another reset.<br><br>If you did not make this request, you can simply ignore this email.</p>\r\n              <p style=\"text-align:left\">\r\n              Sincerely,<br>The Card website Team\r\n              </p>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </center>\r\n  </body>\r\n</html>`;\r\n","import { ThunkType } from '../../../main/bll/store';\r\nimport {\r\n  recoveryPassActions,\r\n  RecoveryPassActionsType,\r\n} from './recoveryPassActions';\r\nimport { recoveryPassApi } from '../dal/recoveryPassApi';\r\n\r\nconst { setLoading, setSuccess, setError } = recoveryPassActions;\r\n\r\nexport const sendEmailAsync = (\r\n  email: string,\r\n): ThunkType<RecoveryPassActionsType> => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const { info, success } = await recoveryPassApi.sendEmail({ email });\r\n\r\n    if (success) {\r\n      dispatch(setSuccess(success));\r\n      console.log(info);\r\n    }\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : e.message + ', more details in the console';\r\n    console.log('Error ', error);\r\n\r\n    dispatch(setError(error));\r\n  }\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle,\r\n} from '../../../../utils/textTransform';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { RecoveryPassForm } from './RecoveryPassForm';\r\nimport { sendEmailAsync } from '../../bll/recoveryPassThunk';\r\nimport { recoveryPassActions } from '../../bll/recoveryPassActions';\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\n\r\nexport const RecoveryPassFormContainer: FC = () => {\r\n  const { LOGIN, SET_PASS } = PATH;\r\n\r\n  const loginLink: LoginLinkType = {\r\n    link: LOGIN,\r\n    title: capitalizeFirstLetter(transformLinkToTitle(LOGIN)),\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const loading = useTypedSelector<boolean>(\r\n    (state) => state.recoveryPass.loading,\r\n  );\r\n  const success = useTypedSelector<boolean>(\r\n    (state) => state.recoveryPass.success,\r\n  );\r\n  const error = useTypedSelector<string>((state) => state.recoveryPass.error);\r\n\r\n  const sendEmail = (email: string) => {\r\n    dispatch(sendEmailAsync(email));\r\n  };\r\n\r\n  const closeMessage = (error: string) => {\r\n    dispatch(recoveryPassActions.setError(error));\r\n  };\r\n\r\n  const setSuccess = (success: boolean) => {\r\n    dispatch(recoveryPassActions.setSuccess(success));\r\n  };\r\n\r\n  return (\r\n    <RecoveryPassForm\r\n      loginLink={loginLink}\r\n      sendEmail={sendEmail}\r\n      setSuccess={setSuccess}\r\n      closeMessage={closeMessage}\r\n      loading={loading}\r\n      success={success}\r\n      error={error}\r\n      redirectLink={SET_PASS}\r\n    />\r\n  );\r\n};","import React, { FC } from 'react';\r\n\r\nimport s from './RecoveryPassPage.module.scss';\r\nimport { RecoveryPassFormContainer } from './RecoveryPassForm/RecoveryPassFormContainer';\r\n\r\nexport const RecoveryPassPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Recovery Password</h2>\r\n\r\n      <RecoveryPassFormContainer />\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './SetPassPage.module.scss';\r\n\r\nexport const SetPassPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Set New Password</h2>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport s from './Error404Page.module.scss';\r\n\r\nexport const Error404Page: FC = () => {\r\n  return (\r\n    <div className={s.page}>\r\n      <div className={s.main}>\r\n        <h1 className={s.title}>404 - Page not&nbsp;found</h1>\r\n        <p className={s.text}>\r\n          —<span>Uh oh.</span> <span>¯\\_(ツ)_/¯</span>—\r\n        </p>\r\n      </div>\r\n      <footer className={s.footer}>\r\n        <p className={s.footerText}>\r\n          Take me back to:&nbsp;\r\n          <Link className={s.link} to=\"/\">\r\n            home page\r\n          </Link>\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport s from '../../../recoveryPass/ui/RecoveryPassForm/RecoveryPassForm.module.scss';\r\nimport { Preloader } from '../../../../common/ui/Preloader';\r\nimport { ErrorMessage } from '../../../../common/ui/ErrorMessage';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { UserType } from '../../../login/bll/loginReducer';\r\n\r\ntype PropsType = {\r\n  loading: boolean;\r\n  sendLogOut: () => void;\r\n  changeAuth: (name: string, avatar: string) => void;\r\n  error: string;\r\n  closeMessage: (error: string) => void;\r\n  redirectLink: string;\r\n  userId: string;\r\n  user: UserType;\r\n};\r\n\r\nexport const ProfileForm: FC<PropsType> = ({\r\n                                             loading,\r\n                                             sendLogOut,\r\n                                             error,\r\n                                             closeMessage,\r\n                                             redirectLink,\r\n                                             userId,\r\n                                             user,\r\n                                             changeAuth,\r\n                                           }) => {\r\n  let [editModeName, setEditModeName] = useState(false);\r\n  let [editModeAvatar, setEditModeAvatar] = useState(false);\r\n  let [name, setName] = useState(user.name);\r\n  let [avatar, setAvatar] = useState(user.avatar);\r\n\r\n  const closeMessageHandler = () => {\r\n    closeMessage('');\r\n  };\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    sendLogOut();\r\n  };\r\n\r\n  // if (userId === '') {\r\n  //   return <Redirect to={redirectLink} />;\r\n  // }\r\n\r\n  const activateEditMode = (value: string) => () => {\r\n    if (value === 'name') {\r\n      setEditModeName(true);\r\n    } else {\r\n      setEditModeAvatar(true);\r\n    }\r\n  };\r\n\r\n  const deactivateEditMode = () => () => {\r\n    setEditModeName(false);\r\n    setEditModeAvatar(false);\r\n    changeAuth(name, avatar !== undefined ? avatar : '');\r\n  };\r\n  const onNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const onAvatarChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setAvatar(e.currentTarget.value);\r\n  };\r\n\r\n  return <form className={s.form} onSubmit={submitHandler}>\r\n    <div className={s.messageWrapper}>\r\n      <img src={user.avatar} alt={''} />\r\n      <div>\r\n        {\r\n          !editModeAvatar ?\r\n            <div>\r\n              {'avatar: '}\r\n              <span className={s.spanAvatar} onDoubleClick={activateEditMode('avatar')}>\r\n           {user.avatar}\r\n            </span>\r\n            </div> : <div>\r\n              <InputText autoFocus={true}\r\n                         onChange={onAvatarChange}\r\n                         onBlur={deactivateEditMode()}\r\n                         value={avatar}\r\n              />\r\n            </div>\r\n        }\r\n        {\r\n          !editModeName ?\r\n            <div>\r\n              {'name: '}\r\n              <span onDoubleClick={activateEditMode('name')}>\r\n                        {user.name || ''}\r\n                    </span>\r\n            </div> : <div>\r\n              <InputText autoFocus={true}\r\n                         onChange={onNameChange}\r\n                         onBlur={deactivateEditMode()}\r\n                         value={name}\r\n              />\r\n            </div>\r\n        }\r\n      </div>\r\n\r\n      {loading && <Preloader text='Sending...' />}\r\n\r\n      {error && (\r\n        <ErrorMessage clickHandler={closeMessageHandler}>\r\n          {error}\r\n        </ErrorMessage>\r\n      )}\r\n    </div>\r\n\r\n    <Button type='submit' disabled={loading}>LogOut</Button>\r\n  </form>;\r\n};\r\n","import React, { FC } from 'react';\r\nimport { ProfileForm } from './ProfileForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { changeAuthTC, logoutTC, setError } from '../../../login/bll/loginReducer';\r\n\r\nexport const ProfileFormContainer: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { LOGIN } = PATH;\r\n  const loading = useTypedSelector<boolean>(\r\n    (state) => state.login.loading,\r\n  );\r\n\r\n  const changeAuth = (name: string, avatar: string) => {\r\n    dispatch(changeAuthTC(name, avatar));\r\n  };\r\n  const sendLogOut = () => {\r\n    dispatch(logoutTC());\r\n  };\r\n\r\n  const userId = useTypedSelector<string>((state) => state.login.user._id);\r\n  const user = useTypedSelector<any>((state) => state.login.user);\r\n  const error = useTypedSelector<string>((state) => state.login.error);\r\n  const closeMessage = (error: string) => {\r\n    dispatch(setError(error));\r\n  };\r\n\r\n  return <ProfileForm\r\n    loading={loading}\r\n    sendLogOut={sendLogOut}\r\n    changeAuth={changeAuth}\r\n    error={error}\r\n    closeMessage={closeMessage}\r\n    redirectLink={LOGIN}\r\n    userId={userId}\r\n    user={user}\r\n  />;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './ProfilePage.module.scss';\r\nimport { ProfileFormContainer } from './ProfileFormContainer/ProfileFormContainer';\r\n\r\nexport const ProfilePage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Profile</h2>\r\n\r\n      <ProfileFormContainer/>\r\n    </section>\r\n  );\r\n};\r\n","import { API } from '../../../main/dal/api';\r\nimport { CardPacksType } from '../bll/PacksReducer';\r\n\r\n\r\nexport const packsAPI = {\r\n  getPacks(user_id: string, pageCount: number, page: number) {\r\n    return API.get<CardsPackAPIType>(`cards/pack`, { params: {  user_id, pageCount, page } })\r\n      .then(response => response.data);\r\n  },\r\n  addPack(name: string, privat: boolean) {\r\n    return API.post(`cards/pack`, { cardsPack: { name, private: privat} })\r\n      .then(response => response.data);\r\n  },\r\n  updatedPacks(name: string, _id: string) {\r\n    return API.put(`cards/pack`, { cardsPack: { name, _id } })\r\n      .then(response => response.data);\r\n  },\r\n  deletePack(id: string) {\r\n    return API.delete(`cards/pack`, { params: {id } })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\nexport type CardsPackAPIType = {\r\n    cardPacks: CardPacksType[]\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}","import { ThunkType } from '../../../main/bll/store';\r\n\r\nexport enum ActionType {\r\n  SET_LOADING = 'CARDS/LOGIN/SET_LOADING',\r\n}\r\n\r\nconst initialState: StateType = {};\r\n\r\nexport const registrationReducer = (\r\n  state = initialState,\r\n  action: ActionsType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case ActionType.SET_LOADING:\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nconst setLoading = () => ({ type: ActionType.SET_LOADING } as const);\r\n\r\n/** Thunks */\r\nexport const loginTC = (): ThunkType<ActionsType> => async (dispatch) => {};\r\n\r\n/** Types */\r\ntype StateType = {};\r\n\r\ntype ActionsType = ReturnType<typeof setLoading>;\r\n","import React, { ChangeEvent } from 'react';\r\nimport s from './Paginator.module.scss';\r\n\r\nexport const Pagination = ({\r\n  totalPages,\r\n  page,\r\n  handleChangePage,\r\n  pageCount,\r\n  setPageCount\r\n}: PaginatorType) => {\r\n  let pattern = null;\r\n\r\n  switch (true) {\r\n    case totalPages < 7:\r\n      pattern = [...new Array(totalPages)].map((_, i) => i + 1);\r\n      break;\r\n    case page < 4:\r\n      pattern = [1, 2, 3, 4, 5, '...', totalPages];\r\n      break;\r\n    case page > totalPages - 4:\r\n      pattern = [1, '...', totalPages - 4, totalPages - 3,\r\n                totalPages - 2, totalPages - 1, totalPages];\r\n      break;\r\n    default:\r\n      pattern = [1, '...', page - 1, page, page + 1, '...', totalPages];\r\n  }\r\n\r\n  function changeNumber(n: number) {\r\n    if (n > 0 && n <= totalPages) {\r\n      handleChangePage(n);\r\n    }\r\n  }\r\n\r\n  const changeWidth = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (!(+e.currentTarget.value < 0)\r\n        && +e.currentTarget.value !== 0\r\n        && +e.currentTarget.value <= 25)\r\n    {\r\n      const newPageCount = parseInt(e.currentTarget.value\r\n        .replace(/\\+|\\-/ig, ''), 10);\r\n      changeNumber(Math.floor(pageCount * page / newPageCount))\r\n      setPageCount(newPageCount);\r\n    }\r\n  };\r\n  return (\r\n    <div className={s.paginatorBlock}>\r\n      <div className={s.paginator}>\r\n        <button disabled={page <= 1}\r\n                onClick={() => changeNumber(page - 1)}\r\n        >\r\n          {'<'}\r\n        </button>\r\n        {pattern.map((label, index) => (\r\n          <button key={index}\r\n                  className={page === label ? s.active : ''}\r\n                  onClick={() => changeNumber(+label)}\r\n          >\r\n            {label}\r\n          </button>\r\n        ))}\r\n        <button disabled={page >= totalPages}\r\n                onClick={() => changeNumber(page + 1)}>\r\n          {'>'}\r\n        </button>\r\n      </div>\r\n      <div className={s.paginatorItems}>\r\n        <span>Items per Page: </span>\r\n        <input\r\n          className={s.inputPage}\r\n          type='number'\r\n          onChange={changeWidth}\r\n          value={pageCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype PaginatorType = {\r\n  totalPages: number\r\n  pageCount: number\r\n  page: number\r\n  handleChangePage: (n: number) => void\r\n  setPageCount: (n: number) => void\r\n}\r\n","import React, { FC } from 'react';\r\nimport s from '../../../pages/packs/ui/PacksContainer/Packs.module.scss';\r\n\r\ntype PropsType = {\r\n  deactivateEditMode: () => void\r\n}\r\nexport const  Modal: FC<PropsType> = ({deactivateEditMode, children}) => {\r\n\r\n  return <div onClick={ deactivateEditMode} className={s.packsModal}>\r\n    <form onClick={(e) =>\r\n      e.stopPropagation()} className={s.form}>\r\n    {children}\r\n    </form>\r\n  </div>\r\n}","import React, { ChangeEvent, FC } from 'react';\r\nimport { InputCheckbox } from '../ui/InputCheckbox';\r\nimport s from './Search.module.scss';\r\nimport { InputText } from '../ui/InputText';\r\n\r\ntype PropsType = {\r\n  loading: boolean\r\n  handleSearch: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\nexport const Search: FC<PropsType> = ({\r\n  loading,\r\n  handleSearch,\r\n  children\r\n}) => {\r\n\r\n  return (\r\n    <div>\r\n      <InputText className={s.search}\r\n             type='text'\r\n             name='search'\r\n             onChange={handleSearch}\r\n             disabled={loading}\r\n             placeholder={'Search pack'}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, useEffect, useState } from 'react';\r\n\r\nimport s from './Packs.module.scss';\r\nimport { CardPacksType, getCardsPacksTC } from '../../bll/PacksReducer';\r\nimport { Preloader } from '../../../../common/ui/Preloader';\r\nimport { ErrorMessage } from '../../../../common/ui/ErrorMessage';\r\nimport { Link } from 'react-router-dom';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { InputCheckbox } from '../../../../common/ui/InputCheckbox';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Pagination } from '../../../../common/ui/Paginator/Paginator';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { Modal } from '../../../../common/ui/Modals/Modal';\r\nimport { Search } from '../../../../common/Search/Search';\r\n\r\ntype PropsType = {\r\n  deletedCardsPack: (cardId: string) => void;\r\n  updatedCardsPack: (changedPackName: string, changePackNameId: string) => void;\r\n  addCardsPack: (name: string, privat: boolean) => void;\r\n  closeMessage: (error: string) => void;\r\n  cardPacks: CardPacksType[];\r\n  loading: boolean;\r\n  error: string;\r\n  userId: string;\r\n  cardPacksTotalCount: number;\r\n  page: number;\r\n  setPage: (page: number) => void;\r\n  pageCount: number;\r\n  setPageCount: (pageCount: number) => void;\r\n};\r\n\r\nexport const Packs: FC<PropsType> = ({\r\n  deletedCardsPack,\r\n  updatedCardsPack,\r\n  addCardsPack,\r\n  cardPacks,\r\n  loading,\r\n  error,\r\n  closeMessage,\r\n  userId: id,\r\n  cardPacksTotalCount,\r\n  page,\r\n  setPage,\r\n  pageCount,\r\n  setPageCount,\r\n}) => {\r\n  const { CARDS, TRAIN } = PATH;\r\n\r\n  const [modalAdd, setModalAdd] = useState<boolean>(false);\r\n  const [modalDelete, setModalDelete] = useState<boolean>(false);\r\n  const [modalChange, setModalChange] = useState<boolean>(false);\r\n  const [newPackName, setNewPackName] = useState<string>('');\r\n  const [changePackName, setChangePackName] = useState<string>('');\r\n  const [privatPack, setPrivatPack] = useState<boolean>(false);\r\n  const [myPacks, setMyPacks] = useState<boolean>(false);\r\n  const userId = myPacks ? id : '';\r\n  const [PackNameId, setPackNameId] = useState<string>('');\r\n  const [timeId, setTimeId] = useState<NodeJS.Timeout>();\r\n  const [n, setN] = useState<string>('');\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    timeId && clearTimeout(timeId);\r\n    setTimeId(setTimeout(() =>\r\n      dispatch(getCardsPacksTC(userId,\r\n        cardPacksTotalCount ? cardPacksTotalCount + 5 : 2000000, page)), 400));\r\n  }, [dispatch]);\r\n\r\n  const addCardsPackHandler = () => {\r\n    setModalAdd(true);\r\n  };\r\n  const onPackNameAdd = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPackName(e.currentTarget.value);\r\n  };\r\n  const addCardsPackSubmit = (\r\n    newPackName: string, privat: boolean) => {\r\n    if (newPackName.trim()) {\r\n      addCardsPack(newPackName, privat);\r\n      setModalAdd(false);\r\n      setNewPackName('');\r\n      setPrivatPack(false);\r\n    }\r\n  };\r\n  const updateCardsPackHandler = (cardsPackId: string, cardsPackName: string) => {\r\n    setChangePackName(cardsPackName);\r\n    setPackNameId(cardsPackId);\r\n    setModalChange(true);\r\n  };\r\n  const onPackNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setChangePackName(e.currentTarget.value);\r\n  };\r\n  const changeCardsPackSubmit = (changedPackName: string, PackNameId: string) => {\r\n    if (changedPackName.trim()) {\r\n      updatedCardsPack(changedPackName, PackNameId);\r\n      setModalChange(false);\r\n      setChangePackName('');\r\n    }\r\n  };\r\n  const deletedCardsPackHandler = (cardsPackId: string) => {\r\n    setPackNameId(cardsPackId);\r\n    setModalDelete(true);\r\n  };\r\n  const deletedCardsPackSubmit = () => {\r\n    deletedCardsPack(PackNameId);\r\n    setModalDelete(false);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setModalAdd(false);\r\n    setModalChange(false);\r\n    setModalDelete(false);\r\n  };\r\n  const closeMessageHandler = () => {\r\n    closeMessage('');\r\n  };\r\n\r\n  const handleChangePage = (page: number) => {\r\n    setPage(page);\r\n  };\r\n  const handleMyPacks = () => {\r\n    myPacks ? setMyPacks(false) : setMyPacks(true);\r\n    setPage(1);\r\n  };\r\n  const handleSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setN(e.currentTarget.value);\r\n  };\r\n  const searchCardsPacks = myPacks\r\n    ? cardPacks.filter(p => p.user_id === id).filter(p => {\r\n    return p.name.includes(n)})\r\n    : cardPacks.filter(p => {\r\n    return p.name.includes(n);\r\n  });\r\n  const totalPages = Math.ceil(searchCardsPacks.length / pageCount);\r\n  return <div>\r\n    <div className={s.messageWrapper}>\r\n      {loading && <Preloader text='Sending...' />}\r\n      {error && (\r\n        <ErrorMessage clickHandler={closeMessageHandler}>\r\n          {error}\r\n        </ErrorMessage>\r\n      )}\r\n    </div>\r\n    {modalAdd &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <InputText placeholder={'Name pack'}\r\n                 onChange={onPackNameAdd}\r\n                 value={newPackName}\r\n      />\r\n      <InputCheckbox type={'checkbox'}\r\n                     checked={privatPack}\r\n                     onChangeChecked={setPrivatPack}\r\n      >\r\n        Private\r\n      </InputCheckbox>\r\n      <Button\r\n        onClick={() => addCardsPackSubmit(newPackName, privatPack)}>Submit</Button>\r\n    </Modal>}\r\n    {modalDelete &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <Button onClick={deletedCardsPackSubmit}>Yes</Button>\r\n      <Button onClick={deactivateEditMode}>No</Button>\r\n    </Modal>}\r\n    {modalChange &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <InputText placeholder={'Name pack'}\r\n                 onChange={onPackNameChange}\r\n                 value={changePackName}\r\n      />\r\n      <Button disabled={loading}\r\n              onClick={() => changeCardsPackSubmit(changePackName, PackNameId)}>\r\n        Submit\r\n      </Button>\r\n    </Modal>}\r\n    <div>\r\n      <InputCheckbox\r\n        type={'checkbox'}\r\n        checked={myPacks}\r\n        onChangeChecked={handleMyPacks}\r\n        disabled={loading}>\r\n        My packs\r\n      </InputCheckbox>\r\n    </div>\r\n    <Search loading={loading} handleSearch={handleSearch}>\r\n      <div className={s.hGridContainer}>\r\n        <div>Name</div>\r\n        <div>CardsCount</div>\r\n        <div>Updated</div>\r\n        <div>Url</div>\r\n        <div>\r\n          <Button disabled={loading} onClick={addCardsPackHandler}>add</Button>\r\n        </div>\r\n        {searchCardsPacks.length === 0 && !loading\r\n          ? 'Ничего нету'\r\n          : searchCardsPacks.slice((page - 1) * pageCount, page * pageCount)\r\n            .map((p) => {\r\n              const data = new Date(p.updated).toUTCString().substring(0, 22);\r\n              return <React.Fragment key={p._id}>\r\n                <div>{p.name}</div>\r\n                <div>{p.cardsCount}</div>\r\n                <div>{data}</div>\r\n                <div />\r\n                <div>\r\n                  <Button disabled={loading || id != p.user_id}\r\n                          onClick={() => deletedCardsPackHandler(p._id)}>\r\n                    del\r\n                  </Button>\r\n                  <Button disabled={loading || id != p.user_id}\r\n                          onClick={() => updateCardsPackHandler(p._id, p.name)}>\r\n                    update\r\n                  </Button>\r\n                  <Link to={!loading ? CARDS + '/' + p._id : '#'}\r\n                        className={s.link}>cards</Link>\r\n                  {p.cardsCount > 0\r\n                    ? <Link to={!loading ? TRAIN + '/' + p._id : '#'}\r\n                            className={s.link}>train</Link>\r\n                    : 'train'\r\n                  } </div>\r\n              </React.Fragment>;\r\n            })}\r\n      </div>\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          handleChangePage={handleChangePage}\r\n          page={page}\r\n          setPageCount={setPageCount}\r\n          pageCount={pageCount}\r\n        />\r\n    </Search>\r\n  </div>;\r\n};","import React, { FC, useState } from 'react';\r\nimport { Packs } from './Packs';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  addCardsPackTC,\r\n  CardPacksType,\r\n  deletedCardsPackTC,\r\n  setErrorPacks,\r\n  updatedCardsPackTC,\r\n} from '../../bll/PacksReducer';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const PacksContainer: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { LOGIN } = PATH;\r\n\r\n  const error = useTypedSelector<string>((state) => state.packs.error);\r\n  const cardPacks = useTypedSelector<CardPacksType[]>((state) => state.packs.cardPacks);\r\n  const loading = useTypedSelector<boolean>((state) => state.packs.loading);\r\n  const cardPacksTotalCount = useTypedSelector<number>((state) => state.packs.cardPacksTotalCount);\r\n  const userId = useTypedSelector<string>((state) => state.login.user._id);\r\n  const [page, setPage] = useState<number>(1);\r\n  const [pageCount, setPageCount] = useState<number>(4);\r\n\r\n  if (userId === '') {\r\n    return <Redirect to={LOGIN} />;\r\n  }\r\n\r\n  const deletedCardsPack = (cardsPackId: string) => {\r\n    dispatch(deletedCardsPackTC(cardsPackId, \"\", cardPacksTotalCount, 1));\r\n  };\r\n  const updatedCardsPack = (changedPackName: string, cardsPackId: string) => {\r\n    dispatch(updatedCardsPackTC(changedPackName, cardsPackId, '', cardPacksTotalCount, 1));\r\n  };\r\n  const addCardsPack = (name: string, privat: boolean) => {\r\n    dispatch(addCardsPackTC(name, privat, '', cardPacksTotalCount, 1));\r\n  };\r\n  const closeMessage = (error: string) => {\r\n    dispatch(setErrorPacks(error));\r\n  };\r\n\r\n  return <Packs\r\n    userId={userId}\r\n    deletedCardsPack={deletedCardsPack}\r\n    updatedCardsPack={updatedCardsPack}\r\n    addCardsPack={addCardsPack}\r\n    cardPacks={cardPacks}\r\n    loading={loading}\r\n    closeMessage={closeMessage}\r\n    error={error}\r\n    cardPacksTotalCount={cardPacksTotalCount}\r\n    page={page}\r\n    setPage={setPage}\r\n    pageCount={pageCount}\r\n    setPageCount={setPageCount}\r\n  />;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Packs.module.scss';\r\nimport { PacksContainer } from './PacksContainer/PacksContainer';\r\n\r\nexport const PacksPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Card packs</h2>\r\n\r\n      <PacksContainer />\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport { CardsType } from '../../../cards/dal/CardsApi';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { Preloader } from '../../../../common/ui/Preloader';\r\nimport {\r\n  getCardsTC,\r\n  setErrorCards,\r\n  updateGradeCardTC,\r\n} from '../../../cards/bll/CardsReducer';\r\nimport s from './TrainForm.module.scss';\r\nimport { ErrorMessage } from '../../../../common/ui/ErrorMessage';\r\n\r\n\r\ninterface ParamType {\r\n  id: string\r\n}\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: CardsType[]) => {\r\n  const sum = cards.reduce((acc, card) =>\r\n    acc + (6 - card.grade) * (6 - card.grade), 0);\r\n  const rand = Math.random() * sum;\r\n  const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n      const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n      return { sum: newSum, id: newSum < rand ? i : acc.id };\r\n    }\r\n    , { sum: 0, id: -1 });\r\n  console.log('test: ', sum, rand, res);\r\n  return cards[res.id + 1];\r\n};\r\n\r\nexport const TrainForm = () => {\r\n\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n  const [first, setFirst] = useState<boolean>(true);\r\n  const [btn, setBtn] = useState<number>(-1);\r\n  // const [first, setFirst] = useState<boolean>(0);\r\n  const { cards } = useTypedSelector((state) => state.cards);\r\n  const error = useTypedSelector<string>((state) => state.cards.error);\r\n\r\n  const [card, setCard] = useState<CardsType>({\r\n    _id: 'fake',\r\n    cardsPack_id: '',\r\n    user_id: '',\r\n\r\n    answer: 'answer fake',\r\n    question: 'question fake',\r\n    grade: 0,\r\n    shots: 0,\r\n\r\n    type: '',\r\n    rating: 0,\r\n    __v: 0,\r\n    created: '',\r\n    updated: '',\r\n  });\r\n\r\n  const loading = useTypedSelector<boolean>((state) => state.cards.loading);\r\n\r\n  const { cardsPack_id } = useParams<{ cardsPack_id: string }>();\r\n  const dispatch: Function = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log('LearnContainer useEffect');\r\n\r\n    if (first) {\r\n      dispatch(getCardsTC(cardsPack_id));\r\n      setFirst(false);\r\n    }\r\n\r\n    console.log('cards', cards);\r\n    if (cards.length > 0) setCard(getCard(cards));\r\n\r\n    return () => {\r\n      console.log('LearnContainer useEffect off');\r\n    };\r\n  }, [dispatch, cardsPack_id, cards, first]);\r\n\r\n\r\n  const onN = (i: number) => {\r\n    console.log(i);\r\n    setBtn(i);\r\n  };\r\n\r\n\r\n  const onNext = () => {\r\n    setIsChecked(false);\r\n\r\n    if (cards.length > 0) {\r\n      dispatch(updateGradeCardTC(card.cardsPack_id, card._id, btn + 1));\r\n      setCard(getCard(cards));\r\n      setBtn(-1);\r\n    } else {\r\n\r\n    }\r\n  };\r\n  const closeMessageHandler = () => {\r\n    dispatch(setErrorCards(''));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.form}>\r\n        {loading && <Preloader text='Sending...' />}\r\n        {error && (\r\n          <ErrorMessage clickHandler={closeMessageHandler}>\r\n            {error}\r\n          </ErrorMessage>\r\n        )}\r\n      </div>\r\n\r\n      <div className={s.trainBlock}>\r\n        <div>{card.question}</div>\r\n        <div>\r\n          <Button onClick={() => setIsChecked(true)}>check</Button>\r\n        </div>\r\n\r\n        {isChecked && (\r\n          <>\r\n            <div>{card.answer}</div>\r\n\r\n            <div className={s.grade}>\r\n              {grades.map((g, i) => (\r\n                <Button className={btn === i ? s.active : ''} key={'grade-' + i}\r\n                        onClick={() => {\r\n                          onN(i);\r\n                        }}>{g}</Button>\r\n              ))}\r\n            </div>\r\n\r\n            <div><Button onClick={onNext}>next</Button></div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './TrainPage.module.scss';\r\nimport { TrainForm } from './TrainFormContainer/TrainForm';\r\n\r\nexport const TrainPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Train</h2>\r\n\r\n      <TrainForm />\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Range, createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { RangeProps } from 'rc-slider/lib/Range';\n\ntype DoubleRangePropsType = {\n  onChangeRange?: (value: [number, number]) => void\n  value?: [number, number]\n  min: number\n  max: number\n  step: number\n} & RangeProps\n\nconst RangeWithTooltip = createSliderWithTooltip(Range);\n\nexport const DoubleRange: React.FC<DoubleRangePropsType> = (\n  {\n    onChangeRange, value,\n    min, max, step,draggableTrack = true,...restProps\n  }\n) => {\n\n  return (\n    <>\n      <RangeWithTooltip onChange={([val1, val2]) => {\n        onChangeRange && onChangeRange([val1, val2])\n      }}\n                        value={value}\n                        min={min}\n                        max={max}\n                        step={step}\n                        draggableTrack={draggableTrack}\n                        {...restProps}\n      />\n    </>\n  );\n}","import React, { FC } from 'react';\r\n\r\nimport s from './InfoMessage.module.scss';\r\nimport { Preloader } from '../Preloader';\r\nimport { ErrorMessage } from '../ErrorMessage';\r\nimport { ActionsType } from '../../../pages/cards/bll/CardsReducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ntype PropsType = {\r\n  error: string;\r\n  loading: boolean;\r\n  action: ActionsType;\r\n};\r\n\r\nexport const InfoMessage: FC<PropsType> = ({ error, loading, action }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const closeMessage = () => {\r\n    dispatch(action);\r\n  };\r\n  return (\r\n    <div className={s.messageWrapper}>\r\n      {loading && <Preloader text='Sending...' />}\r\n      {!error && (\r\n        <ErrorMessage clickHandler={closeMessage}>\r\n          {error}\r\n        </ErrorMessage>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, useState } from 'react';\r\nimport s from './Cards.module.scss';\r\nimport { CardsType } from '../../dal/CardsApi';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { Pagination } from '../../../../common/ui/Paginator/Paginator';\r\nimport { Modal } from '../../../../common/ui/Modals/Modal';\r\nimport { DoubleRange } from '../../../../common/ui/DoubleRange/DoubleRange';\r\nimport { InfoMessage } from '../../../../common/ui/InfoMessage/InfoMessage';\r\nimport { setErrorCards } from '../../bll/CardsReducer';\r\n\r\ntype PropsType = {\r\n  addCard: (cardsPack_id: string, question: string, answer: string) => void;\r\n  updatedCard: (_id: string, question: string, answer: string) => void;\r\n  deleteCard: (CardId: string) => void;\r\n  loading: boolean;\r\n  error: string;\r\n  cardsPack_id: string;\r\n  cards: CardsType[];\r\n  page: number;\r\n  setPage: (page: number) => void;\r\n  pageCount: number;\r\n  setPageCount: (page: number) => void;\r\n  userId: string;\r\n};\r\n\r\nexport const Cards: FC<PropsType> = ({\r\n  loading,\r\n  error,\r\n  cards,\r\n  addCard,\r\n  updatedCard,\r\n  cardsPack_id,\r\n  deleteCard,\r\n  page,\r\n  setPage,\r\n  pageCount,\r\n  setPageCount,\r\n  userId,\r\n}) => {\r\n  const [modalAdd, setModalAdd] = useState<boolean>(false);\r\n  const [modalDelete, setModalDelete] = useState<boolean>(false);\r\n  const [cardQuestion, setCardQuestion] = useState<string>('');\r\n  const [cardAnswer, setCardAnswer] = useState<string>('');\r\n  const [changeCard, setChangeCard] = useState<string>('');\r\n  const [cardNameId, setCardNameId] = useState<string>('');\r\n  const [value1, setValue1] = useState(0);\r\n  const [value2, setValue2] = useState(5);\r\n\r\n  const addCardHandler = () => {\r\n    setModalAdd(true);\r\n  };\r\n  const onCardQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setCardQuestion(e.currentTarget.value);\r\n  };\r\n  const onCardAnswerAdd = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setCardAnswer(e.currentTarget.value);\r\n  };\r\n  const addCardSubmit = () => {\r\n    if (cardQuestion.trim()) {\r\n      addCard(cardsPack_id, cardQuestion, cardAnswer);\r\n      setModalAdd(false);\r\n      setCardQuestion('');\r\n      setCardAnswer('');\r\n    }\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setModalAdd(false);\r\n    setModalDelete(false);\r\n    setChangeCard('');\r\n    setCardQuestion('');\r\n    setCardAnswer('');\r\n  };\r\n  const deletedCardHandler = (cardId: string) => {\r\n    setCardNameId(cardId);\r\n    setModalDelete(true);\r\n  };\r\n  const deletedCardsPackSubmit = () => {\r\n    deleteCard(cardNameId);\r\n    setModalDelete(false);\r\n  };\r\n  const updateCardHandler = (\r\n    id: string,cardQuestion: string, cardAnswer: string\r\n  ) => {\r\n    setChangeCard(id);\r\n    setCardQuestion(cardQuestion);\r\n    setCardAnswer(cardAnswer);\r\n  };\r\n  const changeCardPackSubmit = () => {\r\n    if (cardQuestion.trim()) {\r\n      updatedCard(changeCard, cardQuestion, cardAnswer);\r\n      setChangeCard('');\r\n      setCardQuestion('');\r\n      setCardAnswer('');\r\n    }\r\n  };\r\n  const handleChangePage = (page: number) => {\r\n    setPage(page);\r\n  };\r\n  const onChangeRange = (value: number[]) => {\r\n    setValue1(value[0]);\r\n    setValue2(value[1]);\r\n  };\r\n  const searchCardsGrade = cards.filter(p => (\r\n      p.grade >= value1 && p.grade <= value2\r\n    )\r\n  );\r\n\r\n  const totalPages = Math.ceil(searchCardsGrade.length / pageCount);\r\n  return <div>\r\n    <InfoMessage\r\n      loading={loading}\r\n      error={error}\r\n      action={setErrorCards('')}\r\n    />\r\n    <div>\r\n      <DoubleRange\r\n        onChangeRange={onChangeRange}\r\n        value={[value1, value2]}\r\n        min={0}\r\n        max={5}\r\n        step={0.1}\r\n      />\r\n    </div>\r\n    {modalAdd &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <InputText\r\n        placeholder={'Question'}\r\n        onChange={onCardQuestion}\r\n        value={cardQuestion}\r\n      />\r\n      <InputText placeholder={'Answer'}\r\n                 onChange={onCardAnswerAdd}\r\n                 value={cardAnswer}\r\n      />\r\n\r\n      <Button disabled={loading}\r\n              onClick={addCardSubmit}>Submit</Button>\r\n    </Modal>}\r\n\r\n    {modalDelete &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <Button onClick={deletedCardsPackSubmit}>Yes</Button>\r\n      <Button onClick={deactivateEditMode}>No</Button>\r\n    </Modal>}\r\n\r\n    {changeCard &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n\r\n      <InputText placeholder={'Question card'}\r\n                 onChange={onCardQuestion}\r\n                 value={cardQuestion}\r\n      />\r\n      <InputText placeholder={'Answer card'}\r\n                 onChange={onCardAnswerAdd}\r\n                 value={cardAnswer}\r\n      />\r\n      <Button disabled={loading}\r\n              onClick={changeCardPackSubmit}>Submit</Button>\r\n    </Modal>}\r\n\r\n    <div className={s.hGridContainer}>\r\n      <div>Question</div>\r\n      <div>Answer</div>\r\n      <div>Grade</div>\r\n      <div>Updated</div>\r\n      <div>Url</div>\r\n      <div>\r\n        <Button\r\n          disabled={loading || userId != cards[0]?.user_id}\r\n          onClick={addCardHandler}\r\n        >add\r\n        </Button>\r\n      </div>\r\n      {searchCardsGrade.length === 0 && !loading\r\n        ? 'Ничего нету'\r\n        : searchCardsGrade.slice((page - 1) * pageCount, page * pageCount)\r\n          .map((c) => {\r\n\r\n        const data = new Date(c.updated).toUTCString().substring(0, 22);\r\n        const onUpdateCardClick = () =>\r\n          updateCardHandler(c._id, c.question, c.answer);\r\n\r\n        return <React.Fragment key={c._id}>\r\n          <div>{c.question}</div>\r\n          <div>{c.answer}</div>\r\n          <div>{c.grade}</div>\r\n          <div>{data}</div>\r\n          <div />\r\n          <div>\r\n            <Button disabled={loading || userId != c.user_id}\r\n                    onClick={() => deletedCardHandler(c._id)}>\r\n              del</Button>\r\n            <Button disabled={loading || userId != c.user_id}\r\n                    onClick={onUpdateCardClick}>\r\n              update</Button>\r\n          </div>\r\n        </React.Fragment>;\r\n      })}\r\n    </div>\r\n    <Pagination\r\n      totalPages={totalPages}\r\n      handleChangePage={handleChangePage}\r\n      page={page}\r\n      setPageCount={setPageCount}\r\n      pageCount={pageCount}\r\n    />\r\n  </div>;\r\n};\r\n","import { RootStateType } from '../../../main/bll/store';\r\n\r\nexport const cardsSelectors = {\r\n  error: ((state: RootStateType) => state.cards.error),\r\n  cards: ((state: RootStateType) => state.cards.cards),\r\n  loading: ((state: RootStateType) => state.cards.loading),\r\n  cardsTotalCount: ((state: RootStateType) => state.cards.cardsTotalCount),\r\n  userId: ((state: RootStateType) => state.login.user._id)\r\n};","import React, { FC, useEffect, useState } from 'react';\r\nimport { Cards } from './Cards';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport {\r\n  addCardTC,\r\n  deleteCardTC,\r\n  getCardsTC,\r\n  updateCardTC,\r\n} from '../../bll/CardsReducer';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { cardsSelectors } from '../../bll/selectors';\r\n\r\nexport const CardsContainer: FC = () => {\r\n  const error = useTypedSelector(cardsSelectors.error);\r\n  const cards = useTypedSelector(cardsSelectors.cards);\r\n  const cardsTotalCount = useTypedSelector(cardsSelectors.cardsTotalCount);\r\n  const loading = useTypedSelector(cardsSelectors.loading);\r\n  const userId = useTypedSelector(cardsSelectors.userId);\r\n\r\n  const pageCountInitialState = cards.length < 4 && cards.length > 0\r\n                                ? cards.length\r\n                                : 4;\r\n  const [pageCount, setPageCount] = useState<number>(pageCountInitialState);\r\n  const [page, setPage] = useState<number>(1);\r\n\r\n  const { cardsPack_id } = useParams<{ cardsPack_id: string }>();\r\n  const { LOGIN } = PATH;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (cards.length < 4 && cards.length > 0)\r\n      setPageCount(cards.length);\r\n  }, [cards]);\r\n  useEffect(() => {\r\n    if (cardsPack_id) {\r\n      dispatch(getCardsTC(cardsPack_id,\r\n        cardsTotalCount > 0\r\n          ? cardsTotalCount + 5\r\n          : 2000000,\r\n          page\r\n      ));\r\n    }\r\n  }, [dispatch]);\r\n  const addCard = (cardsPack_id: string, question: string, answer: string) => {\r\n    dispatch(addCardTC(\r\n      cardsPack_id,\r\n      question,\r\n      answer,\r\n      cardsTotalCount + 1,\r\n      page\r\n    ));\r\n  };\r\n  const updatedCard = (_id: string, question: string, answer: string) => {\r\n    dispatch(updateCardTC(\r\n      _id,\r\n      question,\r\n      answer,\r\n      cardsPack_id,\r\n      pageCount,\r\n      page\r\n    ));\r\n  };\r\n  const deleteCard = (cardId: string) => {\r\n    dispatch(deleteCardTC(\r\n      cardId,\r\n      cardsPack_id,\r\n      cardsTotalCount,\r\n      page\r\n    ));\r\n  };\r\n\r\n  return <Cards\r\n    loading={loading}\r\n    cards={cards}\r\n    error={error}\r\n    cardsPack_id={cardsPack_id}\r\n    addCard={addCard}\r\n    updatedCard={updatedCard}\r\n    deleteCard={deleteCard}\r\n    page={page}\r\n    setPage={setPage}\r\n    pageCount={pageCount}\r\n    setPageCount={setPageCount}\r\n    userId={userId}\r\n  />;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Cards.module.scss';\r\nimport { CardsContainer } from './CardsContainer/CardsContainer';\r\n\r\nexport const CardsPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Cards</h2>\r\n\r\n      <CardsContainer />\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Test.module.scss';\r\nimport { randomId } from '../../../utils/randomId';\r\nimport { ExamplesType } from './TestContainer';\r\n\r\ntype PropsType = {\r\n  examples: ExamplesType;\r\n};\r\n\r\nexport const Test: FC<PropsType> = ({ examples }) => {\r\n  return (\r\n    <table className={s.table}>\r\n      <thead>\r\n        <tr>\r\n          <th>Title</th>\r\n          <th>Example</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {examples.map((item) => {\r\n          const [title, [Example, props]] = item;\r\n\r\n          return (\r\n            <tr key={randomId()}>\r\n              <td>{title}</td>\r\n              <td>\r\n                <Example {...props} />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { FC, ElementType } from 'react';\r\n\r\nimport { unCamelCase } from '../../../utils/textTransform';\r\nimport { Test } from './Test';\r\nimport { Preloader } from '../../../common/ui/Preloader';\r\nimport { ErrorMessage } from '../../../common/ui/ErrorMessage';\r\nimport { LinkNative } from '../../../common/ui/LinkNative';\r\nimport { Button } from '../../../common/ui/Button';\r\nimport { InputText } from '../../../common/ui/InputText';\r\nimport { InputCheckbox } from '../../../common/ui/InputCheckbox';\r\nimport { InputRadio } from '../../../common/ui/InputRadio';\r\nimport { Select } from '../../../common/ui/Select';\r\n\r\nconst exampleLibrary: ExampleLibraryType = {\r\n  preloader: [Preloader, { text: 'Loading' }],\r\n  errorMessage: [\r\n    ErrorMessage,\r\n    { children: 'Error message', clickHandler: () => {} },\r\n  ],\r\n  link: [LinkNative, { href: '/', children: 'Hover me' }],\r\n  button: [Button, { children: 'Click me' }],\r\n  buttonError: [Button, { children: 'Error', error: true }],\r\n  inputText: [InputText, { placeholder: 'Write here' }],\r\n  inputEmail: [InputText, { type: 'email', placeholder: 'Email' }],\r\n  inputPassword: [InputText, { type: 'password', placeholder: 'Password' }],\r\n  inputTextError: [InputText, { error: 'an error', placeholder: 'Write here' }],\r\n  inputCheckbox: [InputCheckbox, { children: 'Check me' }],\r\n  inputRadio: [\r\n    InputRadio,\r\n    {\r\n      options: ['React', 'Redux', 'Typescript'],\r\n      name: 'skills',\r\n      value: 'React',\r\n    },\r\n  ],\r\n  select: [\r\n    Select,\r\n    { options: ['React', 'Redux', 'Typescript'], value: 'Redux' },\r\n  ],\r\n};\r\n\r\nconst examples: ExamplesType = Object.entries(\r\n  exampleLibrary,\r\n).map(([title, example]) => [unCamelCase(title), example]);\r\n\r\nexport const TestContainer: FC = () => {\r\n  return <Test examples={examples} />;\r\n};\r\n\r\ntype ExampleType = [ElementType, Record<string, unknown>];\r\ntype ExampleLibraryType = Record<string, ExampleType>;\r\nexport type ExamplesType = [string, ExampleType][];\r\n","import React, { AnchorHTMLAttributes, DetailedHTMLProps, FC } from 'react';\r\n\r\nimport s from './LinkNative.module.scss';\r\n\r\ntype DefaultAnchorPropsType = DetailedHTMLProps<\r\n  AnchorHTMLAttributes<HTMLAnchorElement>,\r\n  HTMLAnchorElement\r\n>;\r\n\r\ntype PropsType = DefaultAnchorPropsType;\r\n\r\nexport const LinkNative: FC<PropsType> = ({\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${s.link} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <a className={finalClassName} {...restProps}>\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from 'react';\r\nimport s from './InputRadio.module.scss';\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const InputRadio: React.FC<SuperRadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  className,\r\n  onChange,\r\n  onChangeOption,\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const finalRadioClassName = `${s.radio} ${className ? className : ''}`;\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + '-' + i} className={s.radioWrapper}>\r\n          <input\r\n            type=\"radio\"\r\n            name={name}\r\n            value={o}\r\n            checked={value === o}\r\n            onChange={onChangeCallback}\r\n            className={finalRadioClassName}\r\n          />\r\n          <span className={s.label}>{o}</span>\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <>{mappedOptions}</>;\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\nimport s from './Select.module.scss';\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\nexport type SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Select: React.FC<SuperSelectPropsType> = ({\r\n  options,\r\n  className,\r\n  onChange,\r\n  onChangeOption,\r\n\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <option key={o + '-' + i} value={o}>\r\n          {o}\r\n        </option>\r\n      ))\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const finalSelectClassName = `${s.select} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <select\r\n      onChange={onChangeCallback}\r\n      className={finalSelectClassName}\r\n      {...restProps}\r\n    >\r\n      {mappedOptions}\r\n    </select>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './TestPage.module.scss';\r\nimport { TestContainer } from './TestContainer';\r\n\r\nexport const TestPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Common components:</h2>\r\n\r\n      <TestContainer />\r\n    </section>\r\n  );\r\n};\r\n","import { useTypedSelector } from '../../../hooks/useTypedSelector';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { ProfilePage } from '../../../pages/profile/ui/ProfilePage';\r\nimport { PacksPage } from '../../../pages/packs/ui/PacksPage';\r\nimport { TrainPage } from '../../../pages/learn/ui/TrainPage';\r\nimport { CardsPage } from '../../../pages/cards/ui/CardsPage';\r\nimport { TestPage } from '../../../pages/test/ui/TestPage';\r\nimport React from 'react';\r\nimport { PATH } from './Routes';\r\n\r\nexport const NotAuthWithRedirect = () => {\r\n  const userId = useTypedSelector<string>(state => state.login.user._id);\r\n  if (!userId)\r\n    return <Redirect to={PATH.LOGIN} />;\r\n  return <>\r\n    <Route path={PATH.PROFILE} render={() => <ProfilePage />} />\r\n    <Route path={PATH.PACKS} render={() => <PacksPage />} />\r\n    <Route path={PATH.TRAIN + '/:cardsPack_id'}\r\n           render={() => <TrainPage />} />\r\n    <Route path={PATH.CARDS + '/:cardsPack_id'}\r\n           render={() => <CardsPage />} />\r\n    <Route path={PATH.TEST} render={() => <TestPage />} />\r\n  </>;\r\n};","import React, { FC } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginPage } from '../../../pages/login/ui/LoginPage';\r\nimport { RegistrationPage } from '../../../pages/registration/ui/RegistrationPage';\r\nimport { RecoveryPassPage } from '../../../pages/recoveryPass/ui/RecoveryPassPage';\r\nimport { SetPassPage } from '../../../pages/setPass/ui/SetPassPage';\r\nimport { Error404Page } from '../../../pages/error404/ui/Error404Page';\r\nimport { NotAuthWithRedirect } from './NotAuthWithRedirect';\r\n\r\nexport const PATH = {\r\n  LOGIN: '/login',\r\n  REGISTRATION: '/registration',\r\n  RECOVERY_PASS: '/recovery-pass',\r\n  SET_PASS: '/set-pass',\r\n  PROFILE: '/profile',\r\n  PACKS: '/packs',\r\n  TRAIN: '/train',\r\n  CARDS: '/cards',\r\n  TEST: '/test',\r\n  ERROR_404: '/error404',\r\n};\r\n\r\nexport const Routes: FC = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path='/' exact render={() => <Redirect to={PATH.PROFILE} />} />\r\n        <Route path={PATH.LOGIN} render={() => <LoginPage />} />\r\n        <Route path={PATH.REGISTRATION} render={() => <RegistrationPage />} />\r\n        <Route path={PATH.RECOVERY_PASS} render={() => <RecoveryPassPage />} />\r\n        <Route path={PATH.SET_PASS} render={() => <SetPassPage />} />\r\n        <Route path={PATH.ERROR_404} render={() => <Error404Page />} />\r\n        <NotAuthWithRedirect/>\r\n        <Redirect from='*' to={PATH.ERROR_404} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './Nav.module.scss';\r\nimport { randomId } from '../../../../../utils/randomId';\r\nimport { NavLinkType } from './NavContainer';\r\n\r\ntype PropsType = {\r\n  navLinks: Array<NavLinkType>;\r\n};\r\n\r\nexport const Nav: FC<PropsType> = ({ navLinks }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const closeMenuHandler = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <nav className={s.nav}>\r\n      <input\r\n        checked={open}\r\n        className={s.navControl}\r\n        type=\"checkbox\"\r\n        id=\"menu-cb\"\r\n        onChange={closeMenuHandler}\r\n      />\r\n\r\n      <div className={s.navContent}>\r\n        <ul className={s.navItems} onClick={closeMenuHandler}>\r\n          {navLinks.map(({ link, title }) => (\r\n            <li key={randomId()} className={s.navItem}>\r\n              <NavLink\r\n                className={s.navItemLink}\r\n                exact\r\n                to={link}\r\n                activeClassName={s.navItemLinkActive}\r\n              >\r\n                {title}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <label className={s.navBtn} htmlFor=\"menu-cb\" />\r\n    </nav>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { PATH } from '../../Routes';\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle,\r\n} from '../../../../../utils/textTransform';\r\nimport { Nav } from './Nav';\r\n\r\nexport const NavContainer: FC = () => {\r\n  const navLinks: Array<NavLinkType> = Object.values(PATH).filter(link => link !== PATH.CARDS && link !== PATH.TRAIN)\r\n    .map((navLink) => ({\r\n    link: navLink,\r\n    title: capitalizeFirstLetter(transformLinkToTitle(navLink)),\r\n  }));\r\n  const navLinksWithoutError404: Array<NavLinkType> = navLinks.slice(\r\n    0,\r\n    navLinks.length - 1,\r\n  );\r\n\r\n  return <Nav navLinks={navLinksWithoutError404} />;\r\n};\r\n\r\nexport type NavLinkType = {\r\n  link: string;\r\n  title: string;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Header.module.scss';\r\nimport { NavContainer } from './Nav/NavContainer';\r\n\r\nexport const Header: FC = () => {\r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <div className={s.container}>\r\n        <NavContainer />\r\n      </div>\r\n    </header>\r\n  );\r\n};","import React, { FC, useEffect } from 'react';\r\n\r\nimport s from './Main.module.scss';\r\nimport { Routes } from '../Routes';\r\nimport { useDispatch } from 'react-redux';\r\nimport { isAuthTC } from '../../../../pages/login/bll/loginReducer';\r\n\r\nexport const Main: FC = () => {\r\n\r\n  return (\r\n    <main className={s.main}>\r\n      <div className={s.container}>\r\n        <Routes />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport s from './App.module.scss';\r\nimport { Header } from './Header';\r\nimport { Main } from './Main';\r\nimport { isAuthTC } from '../../../pages/login/bll/loginReducer';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { PATH } from './Routes';\r\n\r\nexport const App: FC = () => {\r\n  const isInitial = useTypedSelector<boolean>(state => state.login.isInitial);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    !isInitial && dispatch(isAuthTC());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.app}>\r\n      <Header />\r\n\r\n      <Main />\r\n    </div>\r\n  );\r\n};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ThunkType } from '../../../main/bll/store';\r\n\r\nexport enum ActionType {\r\n  SET_LOADING = 'CARDS/LOGIN/SET_LOADING',\r\n}\r\n\r\nconst initialState: StateType = {};\r\n\r\nexport const setPassReducer = (\r\n  state = initialState,\r\n  action: ActionsType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case ActionType.SET_LOADING:\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nconst setLoading = () => ({ type: ActionType.SET_LOADING } as const);\r\n\r\n/** Thunks */\r\nexport const loginTC = (): ThunkType<ActionsType> => async (dispatch) => {};\r\n\r\n/** Types */\r\ntype StateType = {};\r\n\r\ntype ActionsType = ReturnType<typeof setLoading>;\r\n","export type RecoveryPassStateType = {\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string;\r\n};\r\n\r\nexport const recoveryPassInitState: RecoveryPassStateType = {\r\n  loading: false,\r\n  success: false,\r\n  error: '',\r\n};\r\n","import { ThunkType } from '../../../main/bll/store';\r\n\r\nexport enum ActionType {\r\n  SET_LOADING = 'CARDS/LOGIN/SET_LOADING',\r\n}\r\n\r\nconst initialState: StateType = {};\r\n\r\nexport const profileReducer = (\r\n  state = initialState,\r\n  action: ActionsType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case ActionType.SET_LOADING:\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nconst setLoading = () => ({ type: ActionType.SET_LOADING } as const);\r\n\r\n/** Thunks */\r\nexport const loginTC = (): ThunkType<ActionsType> => async (dispatch) => {};\r\n\r\n/** Types */\r\ntype StateType = {};\r\n\r\ntype ActionsType = ReturnType<typeof setLoading>;","import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  compose,\r\n  Middleware,\r\n  Action,\r\n} from 'redux';\r\nimport thunk, { ThunkAction, ThunkMiddleware } from 'redux-thunk';\r\n\r\nimport { DEV } from '../../config';\r\nimport { loginReducer as login } from '../../pages/login/bll/loginReducer';\r\nimport { registrationReducer as register } from '../../pages/registration/bll/registrationReducer';\r\nimport { recoveryPassReducer as recoveryPass } from '../../pages/recoveryPass/bll/recoveryPassReducer';\r\nimport { setPassReducer as setPass } from '../../pages/setPass/bll/setPassReducer';\r\nimport { profileReducer as profile } from '../../pages/profile/bll/profileReducer';\r\nimport { packsReducer as packs } from '../../pages/packs/bll/PacksReducer';\r\nimport { cardsReducer as cards } from '../../pages/cards/bll/CardsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  login,\r\n  register,\r\n  recoveryPass,\r\n  setPass,\r\n  profile,\r\n  packs,\r\n  cards\r\n});\r\n\r\n// @ts-ignore next line\r\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers = DEV && devtools ? devtools : compose;\r\n\r\nconst middleware: Array<Middleware> = [thunk as ThunkMiddleware<RootStateType>];\r\n\r\nexport const enhancedStore = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nexport const store = createStore(rootReducer, enhancedStore);\r\n\r\n/** Types */\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport type InferActionsType<T> = T extends Record<string,\r\n    (...args: never[]) => infer U>\r\n  ? U\r\n  : never;\r\n\r\nexport type ThunkType<A extends Action = Action,\r\n  R = Promise<void>,\r\n  S = RootStateType> = ThunkAction<R, S, unknown, A>;\r\n\r\nif (DEV) {\r\n  // @ts-ignore next line\r\n  window.store = store;\r\n}\r\n","import {\r\n  RecoveryPassActionsType,\r\n  RecoveryPassActionType,\r\n} from './recoveryPassActions';\r\nimport {\r\n  recoveryPassInitState,\r\n  RecoveryPassStateType,\r\n} from './recoveryPassState';\r\n\r\nexport const recoveryPassReducer = (\r\n  state = recoveryPassInitState,\r\n  action: RecoveryPassActionsType,\r\n): RecoveryPassStateType => {\r\n  switch (action.type) {\r\n    case RecoveryPassActionType.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload.loading,\r\n        success: false,\r\n        error: '',\r\n      };\r\n\r\n    case RecoveryPassActionType.SET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: action.payload.success,\r\n        error: '',\r\n      };\r\n\r\n    case RecoveryPassActionType.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport { App } from './main/ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './main/bll/store';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}