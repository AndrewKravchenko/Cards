{"version":3,"sources":["main/ui/App/Header/Nav/Nav.module.scss","pages/error404/ui/Error404Page.module.scss","common/ui/InputText/InputText.module.scss","common/ui/Button/Button.module.scss","common/ui/Paginator/Paginator.module.scss","pages/packs/ui/Packs/Packs.module.scss","pages/login/ui/LoginFormContainer/LoginForm.module.scss","common/ui/InputCheckbox/InputCheckbox.module.scss","pages/profile/ui/ProfileFormContainer/ProfileForm.module.scss","pages/learn/ui/Train/Train.module.scss","common/ui/InputRadio/InputRadio.module.scss","main/ui/App/Header/Header.module.scss","common/ui/Preloader/Preloader.module.scss","pages/recoveryPass/ui/RecoveryPassForm/RecoveryPassForm.module.scss","pages/setPass/ui/setPassForm/SetPassForm.module.scss","common/ui/Modals/Modal.module.scss","pages/cards/ui/CardsContainer/Cards.module.scss","pages/registration/ui/RegistrationForm/RegistrationForm.module.scss","main/ui/App/Main/Main.module.scss","pages/login/ui/LoginPage.module.scss","common/ui/ErrorMessage/ErrorMessage.module.scss","common/ui/InfoErrorMessage/InfoErrorMessage.module.scss","pages/recoveryPass/ui/RecoveryPassPage.module.scss","pages/setPass/ui/SetPassPage.module.scss","pages/profile/ui/ProfilePage.module.scss","pages/packs/ui/Packs.module.scss","common/Search/Search.module.scss","pages/learn/ui/TrainPage.module.scss","pages/cards/ui/Cards.module.scss","pages/test/ui/TestPage.module.scss","pages/test/ui/Test.module.scss","common/ui/LinkNative/LinkNative.module.scss","common/ui/Select/Select.module.scss","pages/registration/ui/RegistrationPage.module.scss","pages/login/bll/authReducer.ts","common/ui/SvgIcon/SvgIcon.tsx","common/ui/InputText/InputText.tsx","common/ui/Button/Button.tsx","common/ui/InputCheckbox/InputCheckbox.tsx","utils/randomId.ts","hooks/ValidationFormAndrew.tsx","common/ui/ErrorMessage/ErrorMessage.tsx","common/ui/Preloader/Preloader.tsx","common/ui/InfoErrorMessage/InfoErrorMessage.tsx","config.ts","main/dal/api.ts","pages/login/dal/loginApi.ts","pages/profile/dal/profileApi.ts","pages/registration/dal/RegistrationApi.ts","pages/setPass/dal/setPassApi.ts","pages/recoveryPass/bll/recoveryPassActions.ts","pages/login/ui/LoginFormContainer/LoginForm.tsx","utils/textTransform.ts","pages/login/bll/selectLogin.ts","pages/login/ui/LoginFormContainer/LoginFormContainer.tsx","pages/login/ui/LoginPage.tsx","pages/packs/bll/PacksReducer.ts","pages/recoveryPass/ui/RecoveryPassForm/RecoveryPassForm.tsx","pages/recoveryPass/dal/recoveryPassApi.ts","pages/recoveryPass/dal/messageTemplate.ts","pages/recoveryPass/bll/recoveryPassThunk.ts","pages/recoveryPass/bll/selectRecoveryPass.ts","pages/recoveryPass/ui/RecoveryPassForm/RecoveryPassFormContainer.tsx","pages/recoveryPass/ui/RecoveryPassPage.tsx","pages/setPass/ui/setPassForm/SetPassForm.tsx","pages/setPass/ui/setPassForm/SetPassFormContainer.tsx","pages/setPass/ui/SetPassPage.tsx","pages/error404/ui/Error404Page.tsx","hooks/useTypedSelector.ts","common/ui/InputFile/InputFile.tsx","pages/profile/ui/ProfileFormContainer/ProfileForm.tsx","pages/profile/ui/ProfileFormContainer/ProfileFormContainer.tsx","pages/profile/ui/ProfilePage.tsx","pages/packs/dal/PacksApi.ts","pages/cards/bll/CardsReducer.ts","common/ui/Paginator/Paginator.tsx","common/ui/Modals/Modal.tsx","common/Search/Search.tsx","pages/packs/ui/Packs/Packs.tsx","pages/packs/bll/selectPacks.ts","pages/packs/ui/Packs/PacksContainer.tsx","pages/packs/ui/PacksPage.tsx","pages/cards/dal/CardsApi.ts","pages/learn/ui/Train/Train.tsx","pages/learn/ui/TrainPage.tsx","common/ui/DoubleRange/DoubleRange.tsx","pages/cards/ui/CardsContainer/Cards.tsx","pages/cards/bll/selectCards.ts","pages/cards/ui/CardsContainer/CardsContainer.tsx","pages/cards/ui/CardsPage.tsx","pages/test/ui/Test.tsx","pages/test/ui/TestContainer.tsx","common/ui/LinkNative/LinkNative.tsx","common/ui/InputRadio/InputRadio.tsx","common/ui/Select/Select.tsx","pages/test/ui/TestPage.tsx","main/ui/App/NotAuthWithRedirect.tsx","pages/registration/ui/RegistrationForm/RegistrationForm.tsx","pages/registration/ui/RegistrationForm/RegistrationFormContainer.tsx","pages/registration/ui/RegistrationPage.tsx","main/ui/App/Routes.tsx","main/ui/App/Header/Nav/Nav.tsx","main/ui/App/Header/Nav/NavContainer.tsx","main/ui/App/Header/Header.tsx","main/ui/App/Main/Main.tsx","main/ui/App/App.tsx","reportWebVitals.ts","pages/recoveryPass/bll/recoveryPassState.ts","main/bll/store.ts","pages/recoveryPass/bll/recoveryPassReducer.ts","index.tsx"],"names":["module","exports","loginActionType","SvgIcon","type","viewBox","height","width","xmlns","d","aria-hidden","InputText","onChange","onChangeText","onKeyPress","onEnter","error","className","errorClassName","text","restProps","finalErrorClassName","s","errorMessage","finalInputClassName","input","inputWrapper","label","e","currentTarget","value","key","Button","large","small","finalClassName","btn","default","InputCheckbox","onChangeChecked","labelClassName","children","finalLabelClassName","finalCheckboxClassName","checkbox","checkboxWrapper","checked","randomId","Math","floor","random","toString","useInput","initialValue","validations","useState","setValue","isDirty","setDirty","valid","inputError","setInputError","inputValid","setInputValid","useEffect","validation","length","test","String","toLowerCase","minLength","useValidation","target","onBlur","ErrorMessage","clickHandler","message","onClick","Preloader","preloader","loader","InfoErrorMessage","loading","action","dispatch","useDispatch","messageWrapper","DEV","process","API","axios","create","baseURL","withCredentials","FileAPI","authAPI","email","password","rememberMe","post","then","response","data","logOutAPI","delete","isAuthAPI","changeAuthAPI","name","avatar","put","changeAuthImageAPI","fileData","createAuthAPI","setNewPassAPI","resetPasswordToken","RecoveryPassActionType","user","_id","publicCardPacksCount","created","Date","updated","isAdmin","verified","initialState","success","isInitial","setLoading","SET_LOADING","payload","setSuccess","SET_SUCCESS","setUser","SET_USER","setErrorLogin","SET_ERROR","changeUser","CHANGE_USER","changeAuthTC","a","updatedUser","LoginForm","loginLinks","sendLogin","userId","closeMessage","redirectLink","setRememberMe","isEmail","isPassword","to","closeMessageHandler","obj","disabledSubmitBtn","form","onSubmit","preventDefault","trim","placeholder","disabled","linksForm","map","link","title","capitalizeFirstLetter","str","charAt","toUpperCase","slice","transformLinkToTitle","replace","selectLogin","state","login","LoginFormContainer","RECOVERY_PASS","PATH","REGISTRATION","PROFILE","useSelector","loginPageTC","LoginPage","page","packsActionType","recoveryPassActions","RecoveryPassForm","loginLink","sendEmail","setEmail","console","log","recoveryPassApi","from","res","setError","selectRecoveryPass","recoveryPass","RecoveryPassFormContainer","LOGIN","SET_PASS","info","sendEmailAsync","RecoveryPassPage","SetPassForm","setNewPassAuth","repeatPassword","repeatPass","SetPassFormContainer","token","useParams","setNewPassTC","SetPassPage","Error404Page","main","footer","footerText","useTypedSelector","FileInput","inRef","useRef","fileURL","setFileURL","setFileData","changeAuthImageTC","accept","ref","style","display","reader","FileReader","formData","FormData","newFile","files","window","URL","createObjectURL","append","readAsDataURL","current","click","ProfileForm","sendLogOut","changeAuth","editModeName","setEditModeName","editModeAvatar","setEditModeAvatar","setName","setAvatar","activateEditMode","deactivateEditMode","undefined","img","src","alt","autoFocus","onDoubleClick","ProfileFormContainer","ProfilePage","packsAPI","user_id","pageCount","get","params","privat","cardsPack","private","id","cardsActionType","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","setErrorPacks","SET_ERROR_PACKS","getCardsPacksTC","SET_PACKS","Pagination","totalPages","handleChangePage","setPageCount","pattern","Array","_","i","changeNumber","n","paginatorBlock","paginator","index","active","paginatorItems","inputPage","newPageCount","parseInt","Modal","packsModal","stopPropagation","Search","handleSearch","search","Packs","deletedCardsPack","updatedCardsPack","addCardsPack","setPage","CARDS","TRAIN","modalAdd","setModalAdd","modalDelete","setModalDelete","modalChange","setModalChange","newPackName","setNewPackName","changePackName","setChangePackName","privatPack","setPrivatPack","myPacks","setMyPacks","PackNameId","setPackNameId","letter","setLetter","searchCardsPacks","filter","p","includes","ceil","addCardsPackSubmit","changedPackName","changeCardsPackSubmit","gridHeaderTable","hGridContainer","toUTCString","substring","Fragment","cardsCount","cardsPackId","cardsPackName","selectPacks","packs","PacksContainer","deletedCardsPackTC","updatedCardsPackTC","addCardsPackTC","PacksPage","cardsApi","cardsPack_id","question","answer","card","grade","card_id","cardId","cards","cardsTotalCount","maxGrade","minGrade","packUserId","setLoadingCards","SET_LOADING_CARDS","setCards","SET_CARDS","setErrorCards","SET_ERROR_CARDS","getCardsTC","grades","getCard","sum","reduce","acc","rand","newSum","Train","isChecked","setIsChecked","first","setFirst","estimate","setEstimate","shots","rating","__v","setCard","trainBlock","g","setEstimateHandler","updateGradeCardTC","TrainPage","RangeWithTooltip","createSliderWithTooltip","Range","DoubleRange","onChangeRange","min","max","step","draggableTrack","val1","val2","Cards","addCard","updatedCard","deleteCard","cardQuestion","setCardQuestion","cardAnswer","setCardAnswer","changeCard","setChangeCard","cardNameId","setCardNameId","value1","setValue1","value2","setValue2","onCardQuestion","onCardAnswerAdd","searchCardsGrade","c","updateCardHandler","selectCards","CardsContainer","pageCountInitialState","addCardTC","updateCardTC","deleteCardTC","CardsPage","Test","examples","table","item","Example","props","exampleLibrary","href","button","buttonError","inputText","inputEmail","inputPassword","inputTextError","inputCheckbox","inputRadio","options","onChangeOption","onChangeCallback","finalRadioClassName","radio","mappedOptions","o","radioWrapper","select","finalSelectClassName","Object","entries","example","word","idx","TestContainer","TestPage","NotAuthWithRedirect","path","render","PACKS","TEST","ERROR_404","RegistrationForm","createAuth","RegistrationFormContainer","CreateAuthTC","RegistrationPage","Routes","exact","Nav","navLinks","open","setOpen","closeMenuHandler","nav","navControl","navContent","navItems","navItem","navItemLink","activeClassName","navItemLinkActive","navBtn","htmlFor","NavContainer","values","navLink","navLinksWithoutError404","Header","header","container","Main","App","IS_INITIAL","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","recoveryPassInitState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","enhancedStore","applyMiddleware","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e337965c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__VE29K\",\"navControl\":\"Nav_navControl__q9neT\",\"navContent\":\"Nav_navContent__3Czvi\",\"navItems\":\"Nav_navItems__37FoA\",\"navItem\":\"Nav_navItem__nAPWr\",\"navItemLink\":\"Nav_navItemLink__2Vf4X\",\"linkRotate\":\"Nav_linkRotate__3TONa\",\"navItemLinkActive\":\"Nav_navItemLinkActive__1-Yl7\",\"navBtn\":\"Nav_navBtn__hd2I5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Error404Page_page__3pOuS\",\"title\":\"Error404Page_title__DmawO\",\"text\":\"Error404Page_text__18c0F\",\"footer\":\"Error404Page_footer__1Cf4V\",\"footerText\":\"Error404Page_footerText__1oXY9\",\"link\":\"Error404Page_link__3Kzqd LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"InputText_inputWrapper__2htqf\",\"errorMessage\":\"InputText_errorMessage__3yIyw\",\"label\":\"InputText_label__22uGC\",\"text\":\"InputText_text__1OAjg\",\"input\":\"InputText_input__23_di\",\"error\":\"InputText_error__21ezK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__dgCCX\",\"large\":\"Button_large__2WdYn\",\"small\":\"Button_small__2gjkf\",\"default\":\"Button_default__1fIO7\",\"error\":\"Button_error__3Np7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3j5OD\",\"active\":\"Paginator_active__2WK2K\",\"paginatorItems\":\"Paginator_paginatorItems__SPC1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Packs_link__2RJe1 LinkNative_link__hGO0Z\",\"gridHeaderTable\":\"Packs_gridHeaderTable__2FOCe gridTable_gridContainerTable__13Oh_ gridTable_gridHeaderTable__1b4mP\",\"hGridContainer\":\"Packs_hGridContainer__3Qmo- gridTable_gridContainerTable__13Oh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1gpGZ form_form__a6yyo\",\"linksForm\":\"LoginForm_linksForm__3WehA\",\"link\":\"LoginForm_link__2QSbo LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxWrapper\":\"InputCheckbox_checkboxWrapper__2wAqz\",\"checkbox\":\"InputCheckbox_checkbox__3gPmy\",\"label\":\"InputCheckbox_label__2oNoo\",\"info\":\"InputCheckbox_info__1monh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__woxv5 form_form__a6yyo\",\"img\":\"ProfileForm_img__3UOJt\",\"avatar\":\"ProfileForm_avatar__2sNRA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trainBlock\":\"Train_trainBlock__3UPDp\",\"grade\":\"Train_grade__1tskH\",\"active\":\"Train_active__1mjl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioWrapper\":\"InputRadio_radioWrapper__VLFsv\",\"radio\":\"InputRadio_radio__zFt8P\",\"label\":\"InputRadio_label__3COpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3h183\",\"container\":\"Header_container__2uUPK container_container__PX4-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3FUM8\",\"loader\":\"Preloader_loader__28BcO\",\"load\":\"Preloader_load__3odh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RecoveryPassForm_form__2fk97 form_form__a6yyo\",\"link\":\"RecoveryPassForm_link__3t279 LinkNative_link__hGO0Z\",\"spanAvatar\":\"RecoveryPassForm_spanAvatar__ejPYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetPassForm_form__3-fg5 form_form__a6yyo\",\"link\":\"SetPassForm_link__2_tL6 LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsModal\":\"Modal_packsModal__247W5\",\"form\":\"Modal_form__rEWWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridHeaderTable\":\"Cards_gridHeaderTable__Id14I gridTable_gridContainerTable__13Oh_ gridTable_gridHeaderTable__1b4mP\",\"hGridContainer\":\"Cards_hGridContainer__3z2Z_ gridTable_gridContainerTable__13Oh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegistrationForm_form__3ynJP form_form__a6yyo\",\"link\":\"RegistrationForm_link__3EmAX LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__ib6B-\",\"container\":\"Main_container__1V-h- container_container__PX4-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"LoginPage_page__2921G page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"ErrorMessage_message__15zE2\",\"shake\":\"ErrorMessage_shake__1Izju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"InfoErrorMessage_messageWrapper__22jPm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"RecoveryPassPage_page__7i91j page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"SetPassPage_page__4r-_B page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ProfilePage_page__2SAW9 page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Packs_page__3qwbU page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__1ixmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"TrainPage_page__3aywU page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Cards_page__2JSyE page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"TestPage_page__uEre9 page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Test_table__1U9P9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3wUUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"RegistrationPage_page__kZj2O page_page__31uF2\"};","import { ThunkType } from '../../../main/bll/store';\r\nimport { authAPI } from '../dal/loginApi';\r\nimport {\r\n  changeAuthAPI, changeAuthImageAPI,\r\n  isAuthAPI,\r\n  logOutAPI,\r\n} from '../../profile/dal/profileApi';\r\nimport { createAuthAPI } from '../../registration/dal/RegistrationApi';\r\nimport { setNewPassAPI } from '../../setPass/dal/setPassApi';\r\nimport { FileAPI } from '../../../main/dal/api';\r\n\r\nexport enum loginActionType {\r\n  SET_LOADING = 'AUTH/LOGIN/SET_LOADING',\r\n  SET_USER = 'AUTH/LOGIN/SET_USER',\r\n  SET_ERROR = 'AUTH/LOGIN/SET_ERROR',\r\n  SET_SUCCESS = 'AUTH/LOGIN/SET_SUCCESS',\r\n  CHANGE_USER = 'AUTH/LOGIN/CHANGE_USER',\r\n  IS_INITIAL = 'AUTH/LOGIN/IS_INITIAL'\r\n}\r\n\r\nconst user = {\r\n  _id: '',\r\n  email: '',\r\n  name: '',\r\n  publicCardPacksCount: 0, // количество колод\r\n\r\n  created: new Date(),\r\n  updated: new Date(),\r\n  isAdmin: false,\r\n  verified: false, // подтвердил ли почту\r\n  rememberMe: false,\r\n};\r\n\r\nconst initialState: StateType = {\r\n  user,\r\n  loading: false,\r\n  success: false,\r\n  error: '',\r\n  isInitial: false,\r\n};\r\n\r\nexport const authReducer = (\r\n  state = initialState,\r\n  action: ActionsLoginType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case loginActionType.SET_USER:\r\n      return { ...state, user: action.payload.user };\r\n    case loginActionType.CHANGE_USER:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          name: action.payload.name,\r\n          avatar: action.payload.avatar\r\n        },\r\n      };\r\n    case loginActionType.IS_INITIAL:\r\n    case loginActionType.SET_LOADING:\r\n    case loginActionType.SET_ERROR:\r\n    case loginActionType.SET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: '',\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nexport const setLoading = (loading: boolean) => ({\r\n  type: loginActionType.SET_LOADING,\r\n  payload: {\r\n    loading,\r\n  },\r\n} as const);\r\nexport const setSuccess = (success: boolean) => ({\r\n    type: loginActionType.SET_SUCCESS,\r\n    payload: {\r\n      success,\r\n    },\r\n} as const);\r\nexport const setIsInitial = (isInitial: boolean) => ({\r\n    type: loginActionType.IS_INITIAL,\r\n    payload: {\r\n      isInitial,\r\n    },\r\n} as const);\r\nexport const setUser = (user: UserType) => ({\r\n  type: loginActionType.SET_USER,\r\n  payload: {\r\n    user\r\n  }\r\n} as const);\r\nexport const setErrorLogin = (error: string) => ({\r\n    type: loginActionType.SET_ERROR,\r\n    payload: {\r\n      error,\r\n    },\r\n} as const);\r\nexport const changeUser = (name: string, avatar: string) => ({\r\n  type: loginActionType.CHANGE_USER,\r\n  payload: {\r\n    name,\r\n    avatar,\r\n  }\r\n} as const);\r\n\r\n/** Thunks */\r\nexport const loginPageTC = (\r\n  email: string, password: string, rememberMe: boolean\r\n): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    dispatch(setErrorLogin(''));\r\n    const data = await authAPI.login(\r\n      { email, password, rememberMe }\r\n    );\r\n    dispatch(setUser(data));\r\n    dispatch(setSuccess(true));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setErrorLogin(error));\r\n  }\r\n};\r\nexport const CreateAuthTC = (\r\n  email: string, password: string\r\n): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      dispatch(setErrorLogin(''));\r\n      const data = await createAuthAPI.createAuth(\r\n        { email, password }\r\n      );\r\n      dispatch(setUser(data));\r\n      dispatch(setSuccess(true));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorLogin(error));\r\n    }\r\n  };\r\nexport const logoutTC = (): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    await logOutAPI.logOut();\r\n    dispatch(setUser(user));\r\n    dispatch(setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setErrorLogin(error));\r\n  }\r\n};\r\nexport const isAuthTC = (): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    dispatch(setErrorLogin(''));\r\n    const data = await isAuthAPI.isAuth();\r\n    await isAuthAPI.isAuth();\r\n    dispatch(setUser(data));\r\n    dispatch(setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setErrorLogin(error));\r\n  } finally {\r\n    dispatch(setIsInitial(true));\r\n  }\r\n};\r\nexport const changeAuthTC = (\r\n  name: string,\r\n  avatar: string\r\n): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await changeAuthAPI.changeAuth({ name, avatar });\r\n    dispatch(setLoading(false));\r\n    dispatch(changeUser(\r\n      data.updatedUser.name,\r\n      data.updatedUser.avatar ? data.updatedUser.avatar : ''\r\n    ));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setErrorLogin(error));\r\n  }\r\n};\r\nexport const changeAuthImageTC = (\r\n  fileData: FormData,\r\n  name: string,\r\n  avatar: string\r\n): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      debugger\r\n      dispatch(setLoading(true));\r\n      await changeAuthImageAPI.changeAuthImage({ fileData } );\r\n      dispatch(changeAuthTC(name, avatar ))\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorLogin(error));\r\n    }\r\n  };\r\n\r\nexport const setNewPassTC = (\r\n  password: string,\r\n  resetPasswordToken: string\r\n): ThunkType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await setNewPassAPI.setNewPass({ password, resetPasswordToken });\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorLogin(error));\r\n    }\r\n  };\r\n\r\n/** Types */\r\nexport type StateType = {\r\n  user: UserType;\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string;\r\n  isInitial: boolean;\r\n};\r\n\r\nexport type ActionsLoginType = ReturnType<typeof setLoading>\r\n  | ReturnType<typeof setUser>\r\n  | ReturnType<typeof setErrorLogin>\r\n  | ReturnType<typeof setSuccess>\r\n  | ReturnType<typeof changeUser>\r\n  | ReturnType<typeof setIsInitial>;\r\n\r\nexport type UserType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n\r\n  created: Date;\r\n  updated: Date;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n\r\n  error?: string;\r\n}\r\n","import React, { FC } from 'react';\r\n\r\ntype SvgIconType = {\r\n  type: 'text' | 'email' | 'password';\r\n};\r\n\r\nexport const SvgIcon: FC<SvgIconType> = ({ type }) => {\r\n  switch (type) {\r\n    case 'text':\r\n      return (\r\n        <svg\r\n          viewBox=\"0 0 484 484\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"m401.648438 18.234375c-24.394532-24.351563-63.898438-24.351563-88.292969 0l-22.101563 22.222656-235.269531 235.144531-.5.503907c-.121094.121093-.121094.25-.25.25-.25.375-.625.746093-.871094 1.121093 0 .125-.128906.125-.128906.25-.25.375-.371094.625-.625 1-.121094.125-.121094.246094-.246094.375-.125.375-.25.625-.378906 1 0 .121094-.121094.121094-.121094.25l-52.199219 156.96875c-1.53125 4.46875-.367187 9.417969 2.996094 12.734376 2.363282 2.332031 5.550782 3.636718 8.867188 3.625 1.355468-.023438 2.699218-.234376 3.996094-.625l156.847656-52.324219c.121094 0 .121094 0 .25-.121094.394531-.117187.773437-.285156 1.121094-.503906.097656-.011719.183593-.054688.253906-.121094.371094-.25.871094-.503906 1.246094-.753906.371093-.246094.75-.621094 1.125-.871094.125-.128906.246093-.128906.246093-.25.128907-.125.378907-.246094.503907-.5l257.371093-257.371094c24.351563-24.394531 24.351563-63.898437 0-88.289062zm-232.273438 353.148437-86.914062-86.910156 217.535156-217.535156 86.914062 86.910156zm-99.15625-63.808593 75.929688 75.925781-114.015626 37.960938zm347.664062-184.820313-13.238281 13.363282-86.917969-86.917969 13.367188-13.359375c14.621094-14.609375 38.320312-14.609375 52.945312 0l33.964844 33.964844c14.511719 14.6875 14.457032 38.332031-.121094 52.949218zm0 0\" />\r\n        </svg>\r\n      );\r\n\r\n    case 'email':\r\n      return (\r\n        <svg\r\n          viewBox=\"0 0 512 512\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M467 61H45C20.218 61 0 81.196 0 106v300c0 24.72 20.128 45 45 45h422c24.72 0 45-20.128 45-45V106c0-24.72-20.128-45-45-45zm-6.214 30L256.954 294.833 51.359 91h409.427zM30 399.788V112.069l144.479 143.24L30 399.788zM51.213 421l144.57-144.57 50.657 50.222c5.864 5.814 15.327 5.795 21.167-.046L317 277.213 460.787 421H51.213zM482 399.787L338.213 256 482 112.212v287.575z\" />\r\n        </svg>\r\n      );\r\n\r\n    case 'password':\r\n      return (\r\n        <svg\r\n          viewBox=\"0 0 24 24\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"m18.75 24h-13.5c-1.24 0-2.25-1.009-2.25-2.25v-10.5c0-1.241 1.01-2.25 2.25-2.25h13.5c1.24 0 2.25 1.009 2.25 2.25v10.5c0 1.241-1.01 2.25-2.25 2.25zm-13.5-13.5c-.413 0-.75.336-.75.75v10.5c0 .414.337.75.75.75h13.5c.413 0 .75-.336.75-.75v-10.5c0-.414-.337-.75-.75-.75z\" />\r\n          <path d=\"m17.25 10.5c-.414 0-.75-.336-.75-.75v-3.75c0-2.481-2.019-4.5-4.5-4.5s-4.5 2.019-4.5 4.5v3.75c0 .414-.336.75-.75.75s-.75-.336-.75-.75v-3.75c0-3.309 2.691-6 6-6s6 2.691 6 6v3.75c0 .414-.336.75-.75.75z\" />\r\n          <path d=\"m12 17c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zm0-2.5c-.275 0-.5.224-.5.5s.225.5.5.5.5-.224.5-.5-.225-.5-.5-.5z\" />\r\n          <path d=\"m12 20c-.414 0-.75-.336-.75-.75v-2.75c0-.414.336-.75.75-.75s.75.336.75.75v2.75c0 .414-.336.75-.75.75z\" />\r\n        </svg>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <svg\r\n          height=\"48\"\r\n          width=\"48\"\r\n          viewBox=\"0 0 512 512\"\r\n          aria-hidden=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M132.893 310.534l-30.082 10.911L91.9 291.364l30.081-10.911z\" />\r\n          <path d=\"M271.552 301.072l-77.856-46.72-41.616 15.152 10.944 30.064 27.28-9.92 82.144 49.28 97.6-65.072L480 315.088V480H32V347.2l40.8-14.848-10.928-30.048L0 324.8V512h512V292.912l-146.048-54.768z\" />\r\n          <path d=\"M0 0v278.848l66.576-24.224-10.928-30.064L32 233.152V32h448v168.912l-114.048-42.768-94.4 62.928-77.856-46.72-47.84 17.392 10.944 30.064 33.504-12.16 82.144 49.28 97.6-65.072L512 247.088V0z\" />\r\n          <path d=\"M96.656 243.686L85.721 213.63l30.07-10.94 10.935 30.055z\" />\r\n        </svg>\r\n      );\r\n  }\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n  FC,\r\n} from 'react';\r\n\r\nimport s from './InputText.module.scss';\r\nimport { SvgIcon } from '../SvgIcon';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n  type?: 'text' | 'email' | 'password';\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  errorClassName?: string;\r\n  text?: string;\r\n};\r\n\r\nexport const InputText: FC<PropsType> = ({\r\n  type = 'text',\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  errorClassName,\r\n  text,\r\n\r\n  ...restProps\r\n}) => {\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    e.key === 'Enter' && onEnter && onEnter();\r\n  };\r\n\r\n  const finalErrorClassName = `${s.errorMessage} ${\r\n    errorClassName ? errorClassName : ''\r\n  }`;\r\n  const finalInputClassName = `${s.input} ${error ? s.error : ''} ${\r\n    className ? className : ''\r\n  }`;\r\n\r\n  return (\r\n    <div className={s.inputWrapper}>\r\n      {error && <span className={finalErrorClassName}>{error}</span>}\r\n\r\n      <label className={s.label}>\r\n        <span className={s.text}>{text || `Enter your ${type}`}</span>\r\n\r\n        <input\r\n          type={type}\r\n          onChange={onChangeHandler}\r\n          onKeyPress={onKeyPressHandler}\r\n          className={finalInputClassName}\r\n          {...restProps}\r\n        />\r\n\r\n        <SvgIcon type={type} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps, FC } from 'react';\r\n\r\nimport s from './Button.module.scss';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype PropsType = DefaultButtonPropsType & {\r\n  error?: boolean;\r\n  large?: boolean;\r\n  small?: boolean;\r\n};\r\n\r\nexport const Button: FC<PropsType> = ({\r\n  error,\r\n  large,\r\n  small,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${s.btn} ${large ? s.large : ''} ${\r\n    small ? s.small : ''\r\n  } ${error ? s.error : s.default} ${className ? className : ''}`;\r\n\r\n  return <button className={finalClassName} {...restProps} />;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  FC,\r\n} from 'react';\r\n\r\nimport s from './InputCheckbox.module.scss';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  labelClassName?: string;\r\n};\r\n\r\nexport const InputCheckbox: FC<PropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  labelClassName,\r\n  children,\r\n\r\n  ...restProps\r\n}) => {\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalLabelClassName = `${s.label} ${\r\n    labelClassName ? labelClassName : ''\r\n  }`;\r\n  const finalCheckboxClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <label className={s.checkboxWrapper}>\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={onChangeHandler}\r\n        className={finalCheckboxClassName}\r\n        {...restProps}\r\n      />\r\n\r\n      <span className={finalLabelClassName}>{children}</span>\r\n    </label>\r\n  );\r\n};\r\n","export const randomId = (): string =>\r\n  Math.floor(Math.random() * 1e9).toString(16);\r\n","import { ChangeEvent } from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\ntype ValidationsType = {\r\n  isEmail?: boolean\r\n  minLength?: number\r\n  isPassword?: boolean\r\n  repeatPass?: boolean\r\n}\r\n\r\nconst useValidation = (value: string, validations: ValidationsType) => {\r\n  const [inputError, setInputError] = useState('');\r\n  const [inputValid, setInputValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    for (const validation in validations) {\r\n      switch (validation) {\r\n        case 'isEmail':\r\n          const reForMail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n          if (value.length === 0) {\r\n            setInputError('Email is required');\r\n          } else {\r\n            reForMail.test(String(value).toLowerCase())\r\n              ? setInputError('')\r\n              : setInputError('Email address is invalid');\r\n          }\r\n          break;\r\n        case 'isPassword':\r\n          if (!value.length) {\r\n            setInputError('Password is required');\r\n          } else {\r\n            const minLength = validations.minLength\r\n              ? validations.minLength\r\n              : 8;\r\n            value.length < minLength\r\n              ? setInputError('Password must be 8 or more characters')\r\n              : setInputError('');\r\n          }\r\n          break;\r\n        case 'repeatPass':\r\n          if (!value.length) {\r\n            setInputError('Password is required');\r\n          } else if (inputError !== 'Passwords must be same') {\r\n            setInputError('');\r\n          }\r\n      }\r\n    }\r\n  }, [value, validations]);\r\n\r\n  useEffect(() => {\r\n    if (inputError) {\r\n      setInputValid(false);\r\n    } else {\r\n      setInputValid(true);\r\n    }\r\n  }, [inputError]);\r\n\r\n  return {\r\n    setInputError,\r\n    inputError,\r\n    inputValid,\r\n  };\r\n};\r\nexport type HookInputType = ReturnType<typeof useInput>\r\nexport const useInput = (initialValue: string, validations: ValidationsType) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [isDirty, setDirty] = useState(false); //выход из инпута\r\n  const valid = useValidation(value, validations);\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const onBlur = () => {\r\n    setDirty(true);\r\n  };\r\n\r\n  return {\r\n    setDirty,\r\n    setValue,\r\n    value,\r\n    onChange,\r\n    onBlur,\r\n    isDirty,\r\n    ...valid,\r\n  };\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './ErrorMessage.module.scss';\r\nimport { Button } from '../Button';\r\n\r\ntype PropsType = {\r\n  clickHandler?: () => void;\r\n};\r\n\r\nexport const ErrorMessage: FC<PropsType> = ({\r\n  children,\r\n  clickHandler\r\n}) => {\r\n\r\n  return (\r\n    <div className={s.message}>\r\n      <p>{children}</p>\r\n      {clickHandler && (\r\n        <Button small error onClick={clickHandler}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Preloader.module.scss';\r\n\r\ntype PropsType = {\r\n  text?: string;\r\n};\r\n\r\nexport const Preloader: FC<PropsType> = ({ text }) => {\r\n  return (\r\n    <div className={s.preloader}>\r\n      <div className={s.loader}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport s from './InfoErrorMessage.module.scss';\r\nimport { Preloader } from '../Preloader';\r\nimport { ErrorMessage } from '../ErrorMessage';\r\nimport { ActionsCardsType } from '../../../pages/cards/bll/CardsReducer';\r\nimport { ActionsPacksType } from '../../../pages/packs/bll/PacksReducer';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ActionsLoginType } from '../../../pages/login/bll/authReducer';\r\nimport { RecoveryPassActionsType } from '../../../pages/recoveryPass/bll/recoveryPassActions';\r\n\r\ntype PropsType = {\r\n  error: string;\r\n  loading: boolean;\r\n  action: ActionsCardsType\r\n          | ActionsPacksType\r\n          | ActionsLoginType\r\n          | RecoveryPassActionsType;\r\n};\r\n\r\nexport const InfoErrorMessage: FC<PropsType> = ({\r\n  error,\r\n  loading,\r\n  action\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const closeMessage = () => {\r\n    dispatch(action);\r\n  };\r\n  return (\r\n    <div className={s.messageWrapper}>\r\n      {loading && <Preloader text='Sending...' />}\r\n      {error && (\r\n        <ErrorMessage clickHandler={closeMessage}>\r\n          {error}\r\n        </ErrorMessage>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const DEV = process.env.NODE_ENV !== 'production';\r\n","import axios from 'axios';\r\n\r\nimport { DEV } from '../../config';\r\n\r\nexport const baseURL = DEV\r\n  ? 'http://localhost:7542/2.0/'\r\n  : 'https://neko-back.herokuapp.com/2.0/';\r\n\r\n\r\nexport const API = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n});\r\nexport const FileAPI = axios.create({\r\n  baseURL: \"https://dry-forest-56016.herokuapp.com\",\r\n});\r\n","import { API } from '../../../main/dal/api';\r\n\r\nexport const authAPI = {\r\n  login({ email, password, rememberMe }: RequestLoginDataType) {\r\n    return API.post<ResponseUserDataType>(`auth/login`, { email, password, rememberMe })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\ntype RequestLoginDataType = {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n};\r\n\r\nexport type ResponseUserDataType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n\r\n  created: Date;\r\n  updated: Date;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n\r\n  error?: string;\r\n};\r\n","import { API, FileAPI } from '../../../main/dal/api';\r\nimport { ResponseUserDataType } from '../../login/dal/loginApi';\r\n\r\nexport const logOutAPI = {\r\n  logOut() {\r\n    return API.delete(`auth/me`)\r\n      .then(response => response.data);\r\n  },\r\n};\r\nexport const isAuthAPI = {\r\n  isAuth() {\r\n    return API.post<ResponseUserDataType>(`auth/me`)\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\ntype ResponseChangeAuth = { updatedUser: ResponseUserDataType };\r\nexport const changeAuthAPI = {\r\n  changeAuth({ name, avatar }: RequestChangeUserDataType) {\r\n    return API.put<ResponseChangeAuth>(`auth/me`, { name, avatar })\r\n      .then(response => response.data);\r\n  },\r\n};\r\nexport const changeAuthImageAPI = {\r\n  changeAuthImage({ fileData }: RequestChangeAuthImageDataType) {\r\n    return FileAPI.post(`file`, fileData)\r\n      .then(response => response.data);\r\n  }\r\n};\r\n\r\ntype RequestChangeUserDataType = {\r\n  name: string;\r\n  avatar: string;\r\n};\r\ntype RequestChangeAuthImageDataType = {\r\n  fileData: FormData;\r\n};\r\n","import { API } from '../../../main/dal/api';\r\n\r\nexport const createAuthAPI = {\r\n  createAuth({ email, password }: RequestLoginDataType) {\r\n    return API.post(`auth/register`, { email, password, })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\ntype RequestLoginDataType = {\r\n  email: string;\r\n  password: string;\r\n};\r\n","import { API } from '../../../main/dal/api';\r\n\r\nexport const setNewPassAPI = {\r\n  setNewPass({ password, resetPasswordToken }: RequestNewPassDataType) {\r\n    return API.post(`auth/set-new-password`, { password, resetPasswordToken })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\ntype RequestNewPassDataType = {\r\n  password: string;\r\n  resetPasswordToken: string;\r\n};\r\n","import { InferActionsType } from '../../../main/bll/store';\r\n\r\nexport enum RecoveryPassActionType {\r\n  SET_LOADING = 'CARDS/RECOVERY_PASS/SET_LOADING',\r\n  SET_SUCCESS = 'CARDS/RECOVERY_PASS/SET_SUCCESS',\r\n  SET_ERROR = 'CARDS/RECOVERY_PASS/SET_ERROR',\r\n}\r\n\r\nexport const recoveryPassActions = {\r\n  setLoading: (loading: boolean) =>\r\n    ({\r\n      type: RecoveryPassActionType.SET_LOADING,\r\n      payload: {\r\n        loading,\r\n      },\r\n    } as const),\r\n  setSuccess: (success: boolean) =>\r\n    ({\r\n      type: RecoveryPassActionType.SET_SUCCESS,\r\n      payload: {\r\n        success,\r\n      },\r\n    } as const),\r\n  setError: (error: string) =>\r\n    ({\r\n      type: RecoveryPassActionType.SET_ERROR,\r\n      payload: {\r\n        error,\r\n      },\r\n    } as const),\r\n};\r\n\r\nexport type RecoveryPassActionsType = InferActionsType<\r\n  typeof recoveryPassActions\r\n>;\r\n","import React, { FC, FormEvent, useState } from 'react';\r\n\r\nimport s from './LoginForm.module.scss';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { LoginLinkType } from './LoginFormContainer';\r\nimport { InputCheckbox } from '../../../../common/ui/InputCheckbox';\r\nimport { randomId } from '../../../../utils/randomId';\r\nimport {\r\n  HookInputType,\r\n  useInput,\r\n} from '../../../../hooks/ValidationFormAndrew';\r\nimport { ErrorMessage } from '../../../../common/ui/ErrorMessage';\r\nimport { InfoErrorMessage } from '../../../../common/ui/InfoErrorMessage/InfoErrorMessage';\r\nimport { setErrorLogin } from '../../bll/authReducer';\r\n\r\ntype PropsType = {\r\n  loginLinks: LoginLinkType[];\r\n  sendLogin: (email: string, password: string, rememberMe: boolean) => void;\r\n  closeMessage: (error: string) => void;\r\n  loading: boolean;\r\n  error: string;\r\n  redirectLink: string;\r\n  userId: string;\r\n};\r\n\r\nexport const LoginForm: FC<PropsType> = ({\r\n  loginLinks,\r\n  sendLogin,\r\n  loading,\r\n  error,\r\n  userId,\r\n  closeMessage,\r\n  redirectLink\r\n}) => {\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const email = useInput('', { isEmail: true });\r\n  const password = useInput('', {\r\n    minLength: 8,\r\n    isPassword: true\r\n  });\r\n\r\n  if (userId) {\r\n    return <Redirect to={redirectLink} />;\r\n  }\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (email.value.trim() && password.value.trim()) {\r\n      sendLogin(email.value, password.value, rememberMe);\r\n    }\r\n  };\r\n\r\n  const closeMessageHandler = (obj?: HookInputType) => () => {\r\n    closeMessage('');\r\n    if (obj) {\r\n      obj.setDirty(false);\r\n    }\r\n  };\r\n\r\n  const disabledSubmitBtn = !email.inputValid\r\n                            || !password.inputValid\r\n                            || loading;\r\n\r\n  return <form className={s.form} onSubmit={submitHandler}>\r\n    <InfoErrorMessage\r\n      loading={loading}\r\n      error={error}\r\n      action={setErrorLogin('')}\r\n    />\r\n    {email.isDirty && email.inputError && (\r\n      <ErrorMessage clickHandler={closeMessageHandler(email)}>\r\n        {email.inputError}\r\n      </ErrorMessage>\r\n    )}\r\n\r\n    <InputText placeholder={'Login'}\r\n               type={'email'}\r\n               onChange={e => email.onChange(e)}\r\n               onBlur={email.onBlur}\r\n               value={email.value}\r\n               disabled={loading}\r\n    />\r\n\r\n    {password.isDirty && password.inputError && (\r\n      <ErrorMessage clickHandler={closeMessageHandler(password)}>\r\n        {password.inputError}\r\n      </ErrorMessage>\r\n    )}\r\n    <InputText placeholder={'Password'}\r\n               type={'password'}\r\n               onChange={e => password.onChange(e)}\r\n               onBlur={password.onBlur}\r\n               value={password.value}\r\n               disabled={loading}\r\n    />\r\n    <InputCheckbox type={'checkbox'}\r\n                   checked={rememberMe}\r\n                   onChangeChecked={setRememberMe}\r\n    > Remember me\r\n    </InputCheckbox>\r\n\r\n    <Button type='submit'\r\n            disabled={disabledSubmitBtn}>\r\n      Submit\r\n    </Button>\r\n\r\n    <div className={s.linksForm}>\r\n      {loginLinks.map(({ link, title }) => (\r\n        <Link key={randomId()} to={link} className={s.link}>\r\n          {title}\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  </form>;\r\n};\r\n","export const unCamelCase = (str: string): string =>\r\n  `${str.replace(/([A-Z])/g, (word, idx) =>\r\n    idx === 0 ? word.toUpperCase() : ` ${word.toLowerCase()}`,\r\n  )}`;\r\n\r\nexport const capitalizeFirstLetter = (str: string): string =>\r\n  `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\r\n\r\nexport const concatString = (str: string, char: string = ''): string =>\r\n  str.replace(/\\s/g, char);\r\n\r\nexport const transformLinkToTitle = (str: string): string =>\r\n  str.slice(1, str.length).replace(/-/g, ' ');\r\n","import { RootStateType } from '../../../main/bll/store';\r\n\r\nexport const selectLogin = ((state: RootStateType) => state.login);\r\n","import React, { FC } from 'react';\r\nimport { LoginForm } from './LoginForm';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle,\r\n} from '../../../../utils/textTransform';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginPageTC, setErrorLogin } from '../../bll/authReducer';\r\nimport { selectLogin } from '../../bll/selectLogin';\r\n\r\nexport const LoginFormContainer: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { RECOVERY_PASS, REGISTRATION, PROFILE } = PATH;\r\n\r\n  const loginLinks: LoginLinkType[] = [\r\n    {\r\n      link: RECOVERY_PASS,\r\n      title: capitalizeFirstLetter(transformLinkToTitle(' Forgot password?')),\r\n    },\r\n    {\r\n      link: REGISTRATION,\r\n      title: capitalizeFirstLetter(transformLinkToTitle(' Registration')),\r\n    },\r\n  ];\r\n  const {\r\n    error,\r\n    loading,\r\n    user\r\n  } = useSelector(selectLogin)\r\n  const userId = user._id;\r\n  const sendLogin = (email: string, password: string, rememberMe: boolean) => {\r\n    dispatch(loginPageTC(email, password, rememberMe));\r\n  };\r\n  const closeMessage = (error: string) => {\r\n    dispatch(setErrorLogin(error));\r\n  };\r\n\r\n  return <LoginForm loginLinks={loginLinks}\r\n                    sendLogin={sendLogin}\r\n                    loading={loading}\r\n                    userId={userId}\r\n                    error={error}\r\n                    closeMessage={closeMessage}\r\n                    redirectLink={PROFILE}\r\n  />;\r\n};\r\n\r\nexport type LoginLinkType = {\r\n  link: string;\r\n  title: string;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './LoginPage.module.scss';\r\nimport { LoginFormContainer } from './LoginFormContainer/LoginFormContainer';\r\n\r\nexport const LoginPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Login</h2>\r\n\r\n      <LoginFormContainer />\r\n    </section>\r\n  );\r\n};\r\n","import { ThunkType } from '../../../main/bll/store';\r\nimport { CardsPackResponseType, packsAPI } from '../dal/PacksApi';\r\n\r\nexport enum packsActionType {\r\n  SET_LOADING = 'CARDS/PACKS/SET_LOADING',\r\n  SET_ERROR_PACKS = 'CARDS/PACKS/SET_ERROR_PACKS',\r\n  SET_PACKS = 'CARDS/PACKS/SET_PACKS',\r\n}\r\n\r\nconst initialState: StateType = {\r\n  cardPacks: [],\r\n  loading: false,\r\n  error: '',\r\n  cardPacksTotalCount: 0,\r\n  maxCardsCount: 0,\r\n  minCardsCount: 0,\r\n  page: 1,\r\n  pageCount: 100,\r\n};\r\n\r\nexport const packsReducer = (\r\n  state = initialState,\r\n  action: ActionsPacksType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case packsActionType.SET_LOADING:\r\n      return { ...state, error: '', loading: action.payload.loading };\r\n    case packsActionType.SET_ERROR_PACKS:\r\n      return {\r\n        ...state, loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case packsActionType.SET_PACKS:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nexport const setLoading = (loading: boolean) => ({\r\n  type: packsActionType.SET_LOADING,\r\n  payload: {\r\n    loading,\r\n  },\r\n} as const);\r\nexport const setCardsPacks = (payload: CardsPackResponseType) => ({\r\n  type: packsActionType.SET_PACKS,\r\n  payload\r\n} as const);\r\nexport const setErrorPacks = (error: string) => ({\r\n  type: packsActionType.SET_ERROR_PACKS,\r\n  payload: {\r\n    error,\r\n  },\r\n} as const);\r\n\r\n/** Thunks */\r\nexport const getCardsPacksTC = (\r\n  userId: string, pageCount: number, page: number\r\n): ThunkType<ActionsPacksType> =>\r\n  async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      const data = await packsAPI.getPacks(userId, pageCount, page);\r\n      dispatch(setCardsPacks(data));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\nexport const addCardsPackTC = (\r\n  name: string, privat: boolean, userId: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsPacksType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await packsAPI.addPack(name, privat);\r\n      await dispatch(getCardsPacksTC(userId, pageCount, page));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\nexport const updatedCardsPackTC = (\r\n  changedPackName: string, cardsPackId: string, userId: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsPacksType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await packsAPI.updatedPacks(changedPackName, cardsPackId);\r\n      await dispatch(getCardsPacksTC(userId, pageCount, page));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\nexport const deletedCardsPackTC = (\r\n  cardsPackId: string, userId: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsPacksType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await packsAPI.deletePack(cardsPackId);\r\n      await dispatch(getCardsPacksTC(userId, pageCount, page));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\n\r\n/** Types */\r\nexport type StateType = {\r\n  cardPacks: CardPacksType[];\r\n  cardPacksTotalCount: number // количество колод\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number // выбранная страница\r\n  pageCount: number // количество элементов на странице\r\n  loading: boolean;\r\n  error: string;\r\n};\r\n\r\nexport type ActionsPacksType = ReturnType<typeof setLoading>\r\n  | ReturnType<typeof setCardsPacks>\r\n  | ReturnType<typeof setErrorPacks>\r\n\r\nexport type CardPacksType = {\r\n  _id: string\r\n  user_id: string\r\n  name: string\r\n  path: string // папка\r\n  cardsCount: number\r\n  grade: number // средняя оценка карточек\r\n  shots: number // количество попыток\r\n  rating: number // лайки\r\n  type: string // ещё будет \"folder\" (папка)\r\n  created: string\r\n  updated: string\r\n  __v: number\r\n  private?: boolean\r\n}\r\n","import React, { FC, FormEvent, useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport s from './RecoveryPassForm.module.scss';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\nimport { InfoErrorMessage } from '../../../../common/ui/InfoErrorMessage/InfoErrorMessage';\r\nimport { recoveryPassActions } from '../../bll/recoveryPassActions';\r\n\r\ntype PropsType = {\r\n  loginLink: LoginLinkType;\r\n  sendEmail: (email: string) => void;\r\n  closeMessage: (error: string) => void;\r\n  setSuccess: (success: boolean) => void;\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string;\r\n  redirectLink: string;\r\n};\r\n\r\nexport const RecoveryPassForm: FC<PropsType> = ({\r\n  loginLink: { link, title },\r\n  sendEmail,\r\n  setSuccess,\r\n  loading,\r\n  success,\r\n  error,\r\n  redirectLink,\r\n}) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('asdasd');\r\n    if (success) {\r\n      setEmail('');\r\n      setSuccess(false);\r\n    }\r\n  }, [success, setSuccess]);\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (email.trim()) {\r\n      sendEmail(email);\r\n    }\r\n  };\r\n\r\n  if (success) {\r\n    return <Redirect to={redirectLink} />;\r\n  }\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={submitHandler}>\r\n      <InfoErrorMessage\r\n        loading={loading}\r\n        error={error}\r\n        action={recoveryPassActions.setError('')}\r\n      />\r\n\r\n      <InputText\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        onChangeText={setEmail}\r\n        value={email}\r\n        disabled={loading}\r\n      />\r\n\r\n      <Button type=\"submit\" disabled={loading}>\r\n        Submit\r\n      </Button>\r\n\r\n      <Link to={link} className={s.link}>\r\n        {title}\r\n      </Link>\r\n    </form>\r\n  );\r\n};\r\n","import { message } from './messageTemplate';\r\nimport axios from 'axios';\r\n\r\nexport type RequestDataType = {\r\n  email: string;\r\n  from?: string;\r\n  message?: string;\r\n};\r\n\r\ntype ResponseDataType = {\r\n  info: string;\r\n  success: boolean;\r\n  answer: boolean;\r\n  html: boolean;\r\n};\r\n\r\nexport const recoveryPassApi = {\r\n  sendEmail({ email }: RequestDataType): Promise<ResponseDataType> {\r\n    return axios.post<ResponseDataType>(`https://neko-back.herokuapp.com/2.0/auth/forgot`, {\r\n      email,\r\n      from: 'Card <mozgche6@gmail.com>',\r\n      message,\r\n    }).then((res) => res.data);\r\n  },\r\n};\r\n","export const message = `<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n  <head>\r\n    <title>HTML email template</title>\r\n    <meta name=\"viewport\" content=\"width = 375, initial-scale = -1\">\r\n  </head>\r\n\r\n  <body style=\"background-color: #ffffff; font-size: 16px;\">\r\n    <center>\r\n      <table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"height: 100%; width: 600px; font-size: 18px;\">\r\n          <!-- BEGIN EMAIL -->\r\n          <tr>\r\n            <td align=\"center\" bgcolor=\"#ffffff\" style=\"padding:30px\">\r\n               <p style=\"text-align:left\">Hello,<br><br> We received a request to reset the password for your account for this email address. To initiate the password reset process for your account, click the link below.\r\n              </p>\r\n              <p>\r\n                <a target=\"_blank\" style=\"text-decoration:none; background-color: #17a2b8; border: #17a2b8 1px solid; color: #fff; padding:10px 10px; display:block;\" href=\"https://andrewkravchenko.github.io/Cards/#/set-pass/$token$\">\r\n                  <strong>Reset Password</strong></a>\r\n              </p>\r\n              <p style=\"text-align:left\">This link can only be used once. If you need to reset your password again, please visit <a href=\"https://andrewkravchenko.github.io/Cards/\">our site</a> and request another reset.<br><br>If you did not make this request, you can simply ignore this email.</p>\r\n              <p style=\"text-align:left\">\r\n              Sincerely,<br>The Card website Team\r\n              </p>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </center>\r\n  </body>\r\n</html>`\r\n","import { ThunkType } from '../../../main/bll/store';\r\nimport {\r\n  recoveryPassActions,\r\n  RecoveryPassActionsType,\r\n} from './recoveryPassActions';\r\nimport { recoveryPassApi } from '../dal/recoveryPassApi';\r\n\r\nconst { setLoading, setSuccess, setError } = recoveryPassActions;\r\n\r\nexport const sendEmailAsync = (\r\n  email: string,\r\n): ThunkType<RecoveryPassActionsType> => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const { info, success } = await recoveryPassApi.sendEmail({ email });\r\n\r\n    if (success) {\r\n      dispatch(setSuccess(success));\r\n      console.log(info);\r\n    }\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : e.message + ', more details in the console';\r\n    console.log('Error ', error);\r\n\r\n    dispatch(setError(error));\r\n  }\r\n};\r\n","import { RootStateType } from '../../../main/bll/store';\r\n\r\nexport const selectRecoveryPass = ((state: RootStateType) => state.recoveryPass);\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle,\r\n} from '../../../../utils/textTransform';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { RecoveryPassForm } from './RecoveryPassForm';\r\nimport { sendEmailAsync } from '../../bll/recoveryPassThunk';\r\nimport { recoveryPassActions } from '../../bll/recoveryPassActions';\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\nimport { selectRecoveryPass } from '../../bll/selectRecoveryPass';\r\n\r\nexport const RecoveryPassFormContainer: FC = () => {\r\n  const { LOGIN, SET_PASS } = PATH;\r\n\r\n  const loginLink: LoginLinkType = {\r\n    link: LOGIN,\r\n    title: capitalizeFirstLetter(transformLinkToTitle(LOGIN)),\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {loading, success, error} = useSelector(selectRecoveryPass)\r\n\r\n  const sendEmail = (email: string) => {\r\n    dispatch(sendEmailAsync(email));\r\n  };\r\n\r\n  const closeMessage = (error: string) => {\r\n    dispatch(recoveryPassActions.setError(error));\r\n  };\r\n\r\n  const setSuccess = (success: boolean) => {\r\n    dispatch(recoveryPassActions.setSuccess(success));\r\n  };\r\n\r\n  return (\r\n    <RecoveryPassForm\r\n      loginLink={loginLink}\r\n      sendEmail={sendEmail}\r\n      setSuccess={setSuccess}\r\n      closeMessage={closeMessage}\r\n      loading={loading}\r\n      success={success}\r\n      error={error}\r\n      redirectLink={SET_PASS}\r\n    />\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './RecoveryPassPage.module.scss';\r\nimport { RecoveryPassFormContainer } from './RecoveryPassForm/RecoveryPassFormContainer';\r\n\r\nexport const RecoveryPassPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Recovery Password</h2>\r\n\r\n      <RecoveryPassFormContainer />\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC, FormEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport s from './SetPassForm.module.scss';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\nimport {\r\n  HookInputType,\r\n  useInput,\r\n} from '../../../../hooks/ValidationFormAndrew';\r\nimport { ErrorMessage } from '../../../../common/ui/ErrorMessage';\r\n\r\ntype PropsType = {\r\n  loginLink: LoginLinkType;\r\n  setNewPassAuth: (password: string) => void;\r\n  closeMessage: (error: string) => void;\r\n  loading: boolean;\r\n};\r\n\r\nexport const SetPassForm: FC<PropsType> = ({\r\n  loginLink: { link, title },\r\n  setNewPassAuth,\r\n  closeMessage,\r\n  loading,\r\n}) => {\r\n  const password = useInput('', {\r\n    minLength: 8,\r\n    isPassword: true\r\n  });\r\n  const repeatPassword = useInput('', {\r\n    minLength: 8,\r\n    repeatPass: true,\r\n  });\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if(password.value !== repeatPassword.value){\r\n      repeatPassword.setInputError('Passwords must be same')\r\n    }\r\n    else {\r\n      repeatPassword.setInputError('')\r\n      if ( password.value.trim()) {\r\n        setNewPassAuth(password.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeMessageHandler = (obj?: HookInputType) => () => {\r\n    closeMessage('');\r\n    if (obj) {\r\n      obj.setDirty(false);\r\n      obj.setInputError('')\r\n    }\r\n  };\r\n  const disabledSubmitBtn = !password.inputValid\r\n                            || !repeatPassword.inputValid\r\n                            || loading;\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={submitHandler}>\r\n          {password.isDirty && password.inputError && (\r\n            <ErrorMessage clickHandler={closeMessageHandler(password)}>\r\n              {password.inputError}\r\n            </ErrorMessage>\r\n          )}\r\n          <InputText placeholder={'New password'}\r\n                     type={'password'}\r\n                     onChange={password.onChange}\r\n                     onBlur={password.onBlur}\r\n                     value={password.value}\r\n                     disabled={loading}\r\n          />\r\n          {repeatPassword.isDirty && repeatPassword.inputError && (\r\n            <ErrorMessage clickHandler={closeMessageHandler(repeatPassword)}>\r\n              {repeatPassword.inputError}\r\n            </ErrorMessage>\r\n          )}\r\n          <InputText placeholder={'Repeat new password'}\r\n                     type={'password'}\r\n                     onChange={repeatPassword.onChange}\r\n                     onBlur={repeatPassword.onBlur}\r\n                     value={repeatPassword.value}\r\n                     disabled={loading}\r\n          />\r\n            <Button type=\"submit\"\r\n                    disabled={disabledSubmitBtn}>\r\n              Set pass\r\n            </Button>\r\n\r\n            <Link to={link} className={s.link}>\r\n                {title}\r\n            </Link>\r\n        </form>\r\n    );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle,\r\n} from '../../../../utils/textTransform';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { SetPassForm } from './SetPassForm';\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setErrorLogin, setNewPassTC } from '../../../login/bll/authReducer';\r\nimport { selectLogin } from '../../../login/bll/selectLogin';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\n\r\nexport const SetPassFormContainer: FC = () => {\r\n  const { token } = useParams<{ token: string }>();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { LOGIN } = PATH;\r\n  const {\r\n    success,\r\n    loading,\r\n  } = useSelector(selectLogin)\r\n  const loginLink: LoginLinkType = {\r\n    link: LOGIN,\r\n    title: capitalizeFirstLetter(transformLinkToTitle(LOGIN)),\r\n  };\r\n  const setNewPassAuth = (password: string) => {\r\n    dispatch(setNewPassTC(password, token));\r\n  };\r\n  const closeMessage = (error: string) => {\r\n    dispatch(setErrorLogin(error));\r\n  };\r\n  if (success) {\r\n    return <Redirect to={'/PATH'}/>\r\n  }\r\n\r\n  return <SetPassForm\r\n    loginLink={loginLink}\r\n    setNewPassAuth={setNewPassAuth}\r\n    closeMessage={closeMessage}\r\n    loading={loading}\r\n  />;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './SetPassPage.module.scss';\r\nimport { SetPassFormContainer } from './setPassForm/SetPassFormContainer';\r\n\r\nexport const SetPassPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Set New Password</h2>\r\n      <SetPassFormContainer/>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport s from './Error404Page.module.scss';\r\n\r\nexport const Error404Page: FC = () => {\r\n  return (\r\n    <div className={s.page}>\r\n      <div className={s.main}>\r\n        <h1 className={s.title}>404 - Page not&nbsp;found</h1>\r\n        <p className={s.text}>\r\n          —<span>Uh oh.</span> <span>¯\\_(ツ)_/¯</span>—\r\n        </p>\r\n      </div>\r\n      <footer className={s.footer}>\r\n        <p className={s.footerText}>\r\n          Take me back to:&nbsp;\r\n          <Link className={s.link} to=\"/\">\r\n            home page\r\n          </Link>\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootStateType } from '../main/bll/store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector;\r\n","import React, { ChangeEvent, MouseEvent, useEffect, useRef, useState } from 'react';\r\nimport { changeAuthImageTC } from '../../../pages/login/bll/authReducer';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button } from '../Button';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\n\r\nexport const FileInput: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const name = useTypedSelector<string>((state) =>\r\n    state.login.user.name);\r\n  const inRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [fileURL, setFileURL] = useState<string>();\r\n  const [fileData, setFileData] = useState<FormData>();\r\n\r\n  useEffect(() => {\r\n    if(fileData){\r\n      dispatch(changeAuthImageTC( fileData, name, fileURL||''));\r\n    }\r\n  }, [dispatch, fileData, fileURL, name]);\r\n\r\n  const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const reader = new FileReader();\r\n    const formData = new FormData(); // for send to back\r\n    const newFile = e.target.files && e.target.files[0];\r\n\r\n    if (newFile) {\r\n      setFileURL(window.URL.createObjectURL(newFile));\r\n      formData.append('myFile', newFile, newFile.name);\r\n      setFileData(formData);\r\n      reader.readAsDataURL(newFile);\r\n    }\r\n  };\r\n\r\n  const addImg = (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    inRef && inRef.current && inRef.current.click();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        accept='.jpg, .jpeg, .png'\r\n        ref={inRef}\r\n        type={'file'}\r\n        style={{ display: 'none' }}\r\n        onChange={upload}\r\n      />\r\n      <Button\r\n        onClick={addImg}>Change image\r\n      </Button>\r\n      <hr style={{ width: '100%' }} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport s\r\n  from './ProfileForm.module.scss';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { setErrorLogin, UserType } from '../../../login/bll/authReducer';\r\nimport { InfoErrorMessage } from '../../../../common/ui/InfoErrorMessage/InfoErrorMessage';\r\nimport { FileInput } from '../../../../common/ui/InputFile';\r\n\r\ntype PropsType = {\r\n  loading: boolean;\r\n  sendLogOut: () => void;\r\n  changeAuth: (name: string, avatar: string) => void;\r\n  error: string;\r\n  user: UserType;\r\n};\r\n\r\nexport const ProfileForm: FC<PropsType> = ({\r\n                                             loading,\r\n                                             sendLogOut,\r\n                                             error,\r\n                                             user,\r\n                                             changeAuth,\r\n                                           }) => {\r\n  let [editModeName, setEditModeName] = useState(false);\r\n  let [editModeAvatar, setEditModeAvatar] = useState(false);\r\n  let [name, setName] = useState(user.name);\r\n  let [avatar, setAvatar] = useState(user.avatar);\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    sendLogOut();\r\n  };\r\n\r\n  const activateEditMode = (value: string) => () => {\r\n    if (value === 'name') {\r\n      setEditModeName(true);\r\n    } else {\r\n      setEditModeAvatar(true);\r\n    }\r\n  };\r\n\r\n  const deactivateEditMode = () => () => {\r\n    setEditModeName(false);\r\n    setEditModeAvatar(false);\r\n    changeAuth(name, avatar !== undefined ? avatar : '');\r\n  };\r\n  const onNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const onAvatarChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setAvatar(e.currentTarget.value);\r\n  };\r\n\r\n  return <form className={s.form} onSubmit={submitHandler}>\r\n    <InfoErrorMessage\r\n      loading={loading}\r\n      error={error}\r\n      action={setErrorLogin('')}\r\n    />\r\n\r\n    <div className={s.img}>\r\n      <img src={user.avatar} alt={''} />\r\n      <FileInput />\r\n    </div>\r\n\r\n      <div>\r\n        {\r\n          !editModeAvatar ?\r\n            <div className={s.avatar}>\r\n             <div>{'avatar url: '}</div>\r\n              <div onDoubleClick={activateEditMode('avatar')}>\r\n           {user.avatar}\r\n            </div>\r\n            </div> : <div>\r\n              <InputText autoFocus={true}\r\n                         onChange={onAvatarChange}\r\n                         onBlur={deactivateEditMode()}\r\n                         value={avatar}\r\n              />\r\n            </div>\r\n        }\r\n        {\r\n          !editModeName ?\r\n            <div>\r\n              {'name: '}\r\n              <span onDoubleClick={activateEditMode('name')}>\r\n                        {user.name || ''}\r\n                    </span>\r\n            </div> : <div>\r\n              <InputText autoFocus={true}\r\n                         onChange={onNameChange}\r\n                         onBlur={deactivateEditMode()}\r\n                         value={name}\r\n              />\r\n            </div>\r\n        }\r\n      </div>\r\n    <Button type='submit' disabled={loading}>LogOut</Button>\r\n  </form>\r\n};\r\n","import React, { FC } from 'react';\r\nimport { ProfileForm } from './ProfileForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeAuthTC, logoutTC } from '../../../login/bll/authReducer';\r\nimport { selectLogin } from '../../../login/bll/selectLogin';\r\n\r\nexport const ProfileFormContainer: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    error,\r\n    loading,\r\n    user\r\n  } = useSelector(selectLogin)\r\n\r\n  const changeAuth = (name: string, avatar: string) => {\r\n    dispatch(changeAuthTC(name, avatar));\r\n  };\r\n  const sendLogOut = () => {\r\n    dispatch(logoutTC());\r\n  };\r\n\r\n  return <ProfileForm\r\n    loading={loading}\r\n    sendLogOut={sendLogOut}\r\n    changeAuth={changeAuth}\r\n    error={error}\r\n    user={user}\r\n  />;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './ProfilePage.module.scss';\r\nimport { ProfileFormContainer } from './ProfileFormContainer/ProfileFormContainer';\r\n\r\nexport const ProfilePage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Profile</h2>\r\n\r\n      <ProfileFormContainer/>\r\n    </section>\r\n  );\r\n};\r\n","import { API } from '../../../main/dal/api';\r\nimport { CardPacksType } from '../bll/PacksReducer';\r\nimport { GradeCardResponseUpdateDataType } from '../../cards/dal/CardsApi';\r\n\r\nexport const packsAPI = {\r\n  getPacks(user_id: string, pageCount: number, page: number) {\r\n    return API.get<CardsPackResponseType>(`cards/pack`, { params: {  user_id, pageCount, page } })\r\n      .then(response => response.data);\r\n  },\r\n  addPack(name: string, privat: boolean) {\r\n    return API.post(`cards/pack`, { cardsPack: { name, private: privat} })\r\n      .then(response => response.data);\r\n  },\r\n  updatedPacks(name: string, _id: string) {\r\n    return API.put(`cards/pack`, { cardsPack: { name, _id } })\r\n      .then(response => response.data);\r\n  },\r\n  deletePack(id: string) {\r\n    return API.delete(`cards/pack`, { params: {id } })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\nexport type CardsPackResponseType = {\r\n    cardPacks: CardPacksType[]\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}\r\n","import { ThunkType } from '../../../main/bll/store';\r\nimport { cardsApi, CardsResponseDataType, CardsType } from '../dal/CardsApi';\r\n\r\nexport enum cardsActionType {\r\n  SET_LOADING_CARDS = 'CARDS/CARDS/SET_LOADING',\r\n  SET_ERROR_CARDS = 'CARDS/CARDS/SET_ERROR_PACKS',\r\n  SET_CARDS = 'CARDS/CARDS/SET_PACKS',\r\n}\r\n\r\nconst initialState: StateType = {\r\n  cards: [],\r\n  loading: false,\r\n  error: '',\r\n  cardsTotalCount: 0,\r\n  maxGrade: 0,\r\n  minGrade: 0,\r\n  page: 0,\r\n  pageCount: 4,\r\n  packUserId: '',\r\n};\r\n\r\nexport const cardsReducer = (\r\n  state = initialState,\r\n  action: ActionsCardsType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case cardsActionType.SET_LOADING_CARDS:\r\n      return {\r\n        ...state,\r\n        loading: action.payload.loading,\r\n      };\r\n    case cardsActionType.SET_ERROR_CARDS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case cardsActionType.SET_CARDS:\r\n      return { ...state, ...action.payload.data };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nexport const setLoadingCards = (loading: boolean) => ({\r\n  type: cardsActionType.SET_LOADING_CARDS,\r\n  payload: {\r\n    loading,\r\n  }\r\n} as const);\r\nexport const setCards = (data: CardsResponseDataType) => ({\r\n  type: cardsActionType.SET_CARDS,\r\n  payload: {\r\n    data\r\n  }\r\n} as const);\r\nexport const setErrorCards = (error: string) => ({\r\n  type: cardsActionType.SET_ERROR_CARDS,\r\n  payload: {\r\n    error,\r\n  },\r\n} as const);\r\n\r\n/** Thunks */\r\nexport const getCardsTC = (\r\n  cardsPack_id: string, pageCount?: number, page?: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      const data = await cardsApi.getCards(\r\n        { cardsPack_id, pageCount, page }\r\n      );\r\n      dispatch(setCards(data));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const addCardTC = (\r\n  cardsPack_id: string, question: string, answer: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      await cardsApi.addCard(\r\n        { cardsPack_id, question, answer }\r\n      );\r\n      await dispatch(getCardsTC(cardsPack_id, pageCount, page));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const updateCardTC = (\r\n  _id: string, question: string, answer: string,\r\n  cardsPack_id: string, pageCount: number, page: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      await cardsApi.updatedCard(\r\n        { _id, question, answer }\r\n      );\r\n      await dispatch(getCardsTC(cardsPack_id, pageCount, page));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const updateGradeCardTC = (\r\n  cardsPack_id: string, card_id: string, grade: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      await cardsApi.updatedGradeCard(\r\n        { grade, card_id }\r\n      );\r\n      await dispatch(getCardsTC(cardsPack_id));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const deleteCardTC = (\r\n  cardId: string, cardsPack_id: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      await cardsApi.deleteCard(cardId);\r\n      await dispatch(getCardsTC(cardsPack_id, pageCount, page));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\n\r\n/** Types */\r\nexport type StateType = {\r\n  cards: CardsType[];\r\n  cardsTotalCount: number\r\n  maxGrade: number\r\n  minGrade: number\r\n  page: number\r\n  pageCount: number\r\n  packUserId: string\r\n  loading: boolean;\r\n  error: string;\r\n};\r\n\r\nexport type ActionsCardsType = ReturnType<typeof setLoadingCards>\r\n  | ReturnType<typeof setCards>\r\n  | ReturnType<typeof setErrorCards>\r\n","import React, { ChangeEvent } from 'react';\r\nimport s from './Paginator.module.scss';\r\n\r\nexport const Pagination = ({\r\n  totalPages,\r\n  page,\r\n  handleChangePage,\r\n  pageCount,\r\n  setPageCount\r\n}: PaginatorType) => {\r\n  let pattern = null;\r\n\r\n  switch (true) {\r\n    case totalPages < 7:\r\n      pattern = [...new Array(totalPages)].map((_, i) => i + 1);\r\n      break;\r\n    case page < 4:\r\n      pattern = [1, 2, 3, 4, 5, '...', totalPages];\r\n      break;\r\n    case page > totalPages - 4:\r\n      pattern = [1, '...', totalPages - 4, totalPages - 3,\r\n                totalPages - 2, totalPages - 1, totalPages];\r\n      break;\r\n    default:\r\n      pattern = [1, '...', page - 1, page, page + 1, '...', totalPages];\r\n  }\r\n\r\n  function changeNumber(n: number) {\r\n    if (n > 0 && n <= totalPages) {\r\n      handleChangePage(n);\r\n    }\r\n  }\r\n\r\n  const changeWidth = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (!(+e.currentTarget.value < 0)\r\n        && +e.currentTarget.value !== 0\r\n        && +e.currentTarget.value <= 25)\r\n    {\r\n      const newPageCount = parseInt(e.currentTarget.value\r\n        .replace(/\\+|\\-/ig, ''), 10);\r\n      changeNumber(Math.floor(pageCount * page / newPageCount))\r\n      setPageCount(newPageCount);\r\n    }\r\n  };\r\n  return (\r\n    <div className={s.paginatorBlock}>\r\n      <div className={s.paginator}>\r\n        <button disabled={page <= 1}\r\n                onClick={() => changeNumber(page - 1)}\r\n        >\r\n          {'<'}\r\n        </button>\r\n        {pattern.map((label, index) => (\r\n          <button key={index}\r\n                  className={page === label ? s.active : ''}\r\n                  onClick={() => changeNumber(+label)}\r\n          >\r\n            {label}\r\n          </button>\r\n        ))}\r\n        <button disabled={page >= totalPages}\r\n                onClick={() => changeNumber(page + 1)}>\r\n          {'>'}\r\n        </button>\r\n      </div>\r\n      <div className={s.paginatorItems}>\r\n        <span>Items per Page: </span>\r\n        <input\r\n          className={s.inputPage}\r\n          type='number'\r\n          onChange={changeWidth}\r\n          value={pageCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype PaginatorType = {\r\n  totalPages: number\r\n  pageCount: number\r\n  page: number\r\n  handleChangePage: (n: number) => void\r\n  setPageCount: (n: number) => void\r\n}\r\n","import React, { FC } from 'react';\r\nimport s from './Modal.module.scss';\r\n\r\ntype PropsType = {\r\n  deactivateEditMode: () => void\r\n}\r\nexport const  Modal: FC<PropsType> = ({\r\n  deactivateEditMode,\r\n  children\r\n}) => {\r\n\r\n  return <div onClick={ deactivateEditMode} className={s.packsModal}>\r\n    <form onClick={(e) =>\r\n      e.stopPropagation()} className={s.form}>\r\n    {children}\r\n    </form>\r\n  </div>\r\n}\r\n","import React, { ChangeEvent, FC } from 'react';\r\nimport s from './Search.module.scss';\r\nimport { InputText } from '../ui/InputText';\r\n\r\ntype PropsType = {\r\n  loading: boolean\r\n  handleSearch: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\nexport const Search: FC<PropsType> = ({\r\n  loading,\r\n  handleSearch,\r\n  children\r\n}) => {\r\n\r\n  return (\r\n    <div>\r\n      <InputText className={s.search}\r\n             type='text'\r\n             name='search'\r\n             onChange={handleSearch}\r\n             disabled={loading}\r\n             placeholder={'Search pack'}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport s from './Packs.module.scss';\r\nimport {\r\n  CardPacksType,\r\n  getCardsPacksTC,\r\n  setErrorPacks,\r\n} from '../../bll/PacksReducer';\r\nimport { Link } from 'react-router-dom';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { InputCheckbox } from '../../../../common/ui/InputCheckbox';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Pagination } from '../../../../common/ui/Paginator/Paginator';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { Modal } from '../../../../common/ui/Modals/Modal';\r\nimport { Search } from '../../../../common/Search/Search';\r\nimport { InfoErrorMessage } from '../../../../common/ui/InfoErrorMessage/InfoErrorMessage';\r\n\r\ntype PropsType = {\r\n  deletedCardsPack: (cardId: string) => void;\r\n  updatedCardsPack: (changedPackName: string, changePackNameId: string) => void;\r\n  addCardsPack: (name: string, privat: boolean) => void;\r\n  cardPacks: CardPacksType[];\r\n  loading: boolean;\r\n  error: string;\r\n  userId: string;\r\n  cardPacksTotalCount: number;\r\n  page: number;\r\n  setPage: (page: number) => void;\r\n  pageCount: number;\r\n  setPageCount: (pageCount: number) => void;\r\n};\r\n\r\nexport const Packs: FC<PropsType> = ({\r\n  deletedCardsPack,\r\n  updatedCardsPack,\r\n  addCardsPack,\r\n  cardPacks,\r\n  loading,\r\n  error,\r\n  userId: id,\r\n  cardPacksTotalCount,\r\n  page,\r\n  setPage,\r\n  pageCount,\r\n  setPageCount,\r\n}) => {\r\n  const { CARDS, TRAIN } = PATH;\r\n\r\n  const [modalAdd, setModalAdd] = useState<boolean>(false);\r\n  const [modalDelete, setModalDelete] = useState<boolean>(false);\r\n  const [modalChange, setModalChange] = useState<boolean>(false);\r\n  const [newPackName, setNewPackName] = useState<string>('');\r\n  const [changePackName, setChangePackName] = useState<string>('');\r\n  const [privatPack, setPrivatPack] = useState<boolean>(false);\r\n  const [myPacks, setMyPacks] = useState<boolean>(false);\r\n  const userId = myPacks ? id : '';\r\n  const [PackNameId, setPackNameId] = useState<string>('');\r\n  const [letter, setLetter] = useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n      dispatch(getCardsPacksTC(\r\n        userId,\r\n        cardPacksTotalCount\r\n          ? cardPacksTotalCount + 5\r\n          : 2000000,\r\n        page\r\n      ));\r\n  }, [dispatch]);\r\n\r\n  const addCardsPackHandler = () => {\r\n    setModalAdd(true);\r\n  };\r\n  const onPackNameAdd = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPackName(e.currentTarget.value);\r\n  };\r\n  const addCardsPackSubmit = (\r\n    newPackName: string, privat: boolean) => {\r\n    if (newPackName.trim()) {\r\n      addCardsPack(newPackName, privat);\r\n      setModalAdd(false);\r\n      setNewPackName('');\r\n      setPrivatPack(false);\r\n      setPage(1)\r\n    }\r\n  };\r\n  const updateCardsPackHandler = (cardsPackId: string, cardsPackName: string) => {\r\n    setChangePackName(cardsPackName);\r\n    setPackNameId(cardsPackId);\r\n    setModalChange(true);\r\n  };\r\n  const onPackNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setChangePackName(e.currentTarget.value);\r\n  };\r\n  const changeCardsPackSubmit = (changedPackName: string, PackNameId: string) => {\r\n    if (changedPackName.trim()) {\r\n      updatedCardsPack(changedPackName, PackNameId);\r\n      setModalChange(false);\r\n      setChangePackName('');\r\n    }\r\n  };\r\n  const deletedCardsPackHandler = (cardsPackId: string) => {\r\n    setPackNameId(cardsPackId);\r\n    setModalDelete(true);\r\n  };\r\n  const deletedCardsPackSubmit = () => {\r\n    deletedCardsPack(PackNameId);\r\n    setModalDelete(false);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setModalAdd(false);\r\n    setModalChange(false);\r\n    setModalDelete(false);\r\n  };\r\n  const handleChangePage = (page: number) => {\r\n    setPage(page);\r\n  };\r\n  const handleMyPacks = () => {\r\n    myPacks ? setMyPacks(false) : setMyPacks(true);\r\n    setPage(1);\r\n  };\r\n  const handleSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setLetter(e.currentTarget.value);\r\n  };\r\n  const searchCardsPacks = myPacks\r\n    ? cardPacks.filter(p => p.user_id === id).filter(p => {\r\n    return p.name.includes(letter)})\r\n    : cardPacks.filter(p => {\r\n    return p.name.includes(letter);\r\n  });\r\n  const totalPages = Math.ceil(searchCardsPacks.length / pageCount);\r\n\r\n  return <div>\r\n    <InfoErrorMessage\r\n      loading={loading}\r\n      error={error}\r\n      action={setErrorPacks('')}\r\n    />\r\n    {modalAdd &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <InputText placeholder={'Name pack'}\r\n                 onChange={onPackNameAdd}\r\n                 value={newPackName}\r\n      />\r\n      <InputCheckbox type={'checkbox'}\r\n                     checked={privatPack}\r\n                     onChangeChecked={setPrivatPack}\r\n      >Private\r\n      </InputCheckbox>\r\n      <Button\r\n        onClick={() => addCardsPackSubmit(newPackName, privatPack)}>\r\n        Submit\r\n      </Button>\r\n    </Modal>}\r\n    {modalDelete &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <Button onClick={deletedCardsPackSubmit}>Yes</Button>\r\n      <Button onClick={deactivateEditMode}>No</Button>\r\n    </Modal>}\r\n    {modalChange &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <InputText placeholder={'Name pack'}\r\n                 onChange={onPackNameChange}\r\n                 value={changePackName}\r\n      />\r\n      <Button disabled={loading}\r\n              onClick={() => changeCardsPackSubmit(changePackName, PackNameId)}>\r\n        Submit\r\n      </Button>\r\n    </Modal>}\r\n    <div>\r\n      <InputCheckbox\r\n        type={'checkbox'}\r\n        checked={myPacks}\r\n        onChangeChecked={handleMyPacks}\r\n        disabled={loading}>\r\n        My packs\r\n      </InputCheckbox>\r\n    </div>\r\n\r\n    <Search loading={loading} handleSearch={handleSearch}>\r\n        <div className={s.gridHeaderTable}>\r\n        <div>Name</div>\r\n        <div>CardsCount</div>\r\n        <div>Updated</div>\r\n        <div>Url</div>\r\n        <div>\r\n          <Button disabled={loading} onClick={addCardsPackHandler}>add</Button>\r\n        </div>\r\n        </div>\r\n      <div className={s.hGridContainer}>\r\n      {searchCardsPacks.length === 0 && !loading\r\n          ? 'empty'\r\n          : searchCardsPacks.slice((page - 1) * pageCount, page * pageCount)\r\n            .map((p) => {\r\n              const data = new Date(p.updated).toUTCString().substring(0, 22);\r\n\r\n              return <React.Fragment key={p._id}>\r\n                <div>{p.name}</div>\r\n                <div>{p.cardsCount}</div>\r\n                <div>{data}</div>\r\n                <div />\r\n                <div>\r\n                  <Button disabled={loading || id != p.user_id}\r\n                          onClick={() => deletedCardsPackHandler(p._id)}>\r\n                    del</Button>\r\n                  <Button disabled={loading || id != p.user_id}\r\n                          onClick={() => updateCardsPackHandler(p._id, p.name)}>\r\n                    update</Button>\r\n                  <Link to={!loading ? CARDS + '/' + p._id : '#'}\r\n                        className={s.link}>cards</Link>\r\n                  {p.cardsCount > 0\r\n                    ? <Link to={!loading ? TRAIN + '/' + p._id : '#'}\r\n                            className={s.link}>train</Link>\r\n                    : 'train'\r\n                  } </div>\r\n              </React.Fragment>;\r\n            })}\r\n      </div>\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          handleChangePage={handleChangePage}\r\n          page={page}\r\n          setPageCount={setPageCount}\r\n          pageCount={pageCount}\r\n        />\r\n    </Search>\r\n  </div>;\r\n};\r\n","import { RootStateType } from '../../../main/bll/store';\r\n\r\nexport const selectPacks = ((state: RootStateType) => state.packs);\r\n","import React, { FC, useState } from 'react';\r\nimport { Packs } from './Packs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addCardsPackTC,\r\n  deletedCardsPackTC,\r\n  updatedCardsPackTC,\r\n} from '../../bll/PacksReducer';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport { selectPacks } from '../../bll/selectPacks';\r\n\r\nexport const PacksContainer: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    error,\r\n    cardPacks,\r\n    loading,\r\n    cardPacksTotalCount,\r\n  } = useSelector(selectPacks)\r\n  const {user: {_id: userId}} = useTypedSelector(\r\n    (state) => state.login\r\n  );\r\n  const [page, setPage] = useState<number>(1);\r\n  const [pageCount, setPageCount] = useState<number>(4);\r\n\r\n  const deletedCardsPack = (cardsPackId: string) => {\r\n    dispatch(deletedCardsPackTC(\r\n      cardsPackId, \"\", cardPacksTotalCount, page\r\n    ));\r\n  };\r\n  const updatedCardsPack = (changedPackName: string, cardsPackId: string) => {\r\n    dispatch(updatedCardsPackTC(\r\n      changedPackName, cardsPackId, '', cardPacksTotalCount, page\r\n    ));\r\n  };\r\n  const addCardsPack = (name: string, privat: boolean) => {\r\n    dispatch(addCardsPackTC(\r\n      name, privat, '', cardPacksTotalCount, page\r\n    ));\r\n  };\r\n\r\n  return <Packs\r\n    userId={userId}\r\n    deletedCardsPack={deletedCardsPack}\r\n    updatedCardsPack={updatedCardsPack}\r\n    addCardsPack={addCardsPack}\r\n    cardPacks={cardPacks}\r\n    loading={loading}\r\n    error={error}\r\n    cardPacksTotalCount={cardPacksTotalCount}\r\n    page={page}\r\n    setPage={setPage}\r\n    pageCount={pageCount}\r\n    setPageCount={setPageCount}\r\n  />;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Packs.module.scss';\r\nimport { PacksContainer } from './Packs/PacksContainer';\r\n\r\nexport const PacksPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Card packs</h2>\r\n\r\n      <PacksContainer />\r\n    </section>\r\n  );\r\n};\r\n","import { API } from '../../../main/dal/api';\r\n\r\nexport const cardsApi = {\r\n  getCards({ cardsPack_id, pageCount, page }: CardsRequestDataType) {\r\n    return API.get<CardsResponseDataType>(`cards/card`, { params: { cardsPack_id, pageCount, page  } })\r\n      .then(response => response.data);\r\n  },\r\n  addCard({ cardsPack_id, question, answer }: CardAddRequestDataType) {\r\n    return API.post(`cards/card`, { card: { cardsPack_id, question, answer } })\r\n      .then(response => response.data);\r\n  },\r\n  updatedCard({ _id, question, answer }: CardRequestUpdateDataType) {\r\n    return API.put(`cards/card`, { card: { _id, question, answer } })\r\n      .then(response => response.data);\r\n  },\r\n  updatedGradeCard({  grade, card_id  }: GradeCardRequestUpdateDataType) {\r\n    return API.put<GradeCardResponseUpdateDataType>(`cards/grade`, {  grade, card_id  })\r\n      .then(response => response.data);\r\n  },\r\n  deleteCard(cardId: string) {\r\n    return API.delete(`cards/card`, { params: { id: cardId } })\r\n      .then(response => response.data);\r\n  },\r\n};\r\nexport type GradeCardRequestUpdateDataType = {\r\n  card_id: string\r\n  grade: number\r\n}\r\nexport type GradeCardResponseUpdateDataType = {\r\n_id: string\r\ncardsPack_id: string\r\ncard_id: string\r\nuser_id: string\r\ngrade: number\r\nshots: number\r\n}\r\nexport type CardRequestUpdateDataType = {\r\n  _id: string\r\n  question?: string\r\n  answer?: string\r\n  comments?: string\r\n}\r\ntype CardsRequestDataType = {\r\n  cardAnswer?: string\r\n  cardQuestion?: string\r\n  cardsPack_id: string\r\n  min?: number\r\n  max?: number\r\n  sortCards?: number\r\n  page?: number\r\n  pageCount?: number\r\n}\r\n\r\nexport type CardsResponseDataType = {\r\n  cards: CardsType[];\r\n  cardsTotalCount: number\r\n  maxGrade: number\r\n  minGrade: number\r\n  page: number\r\n  pageCount: number\r\n  packUserId: string\r\n}\r\nexport type CardsType = {\r\n  answer: string\r\n  question: string\r\n  cardsPack_id: string\r\n  user_id: string\r\n  grade: number\r\n  shots: number\r\n  rating: number\r\n  type: string\r\n  created: string\r\n  updated: string\r\n  __v: number\r\n  _id: string\r\n}\r\nexport type CardAddRequestDataType = {\r\n  cardsPack_id: string\r\n  question: string\r\n  answer: string\r\n  grade?: 0 // 0..5, не обязателен\r\n  shots?: 0 // не обязателен\r\n  rating?: 0 // не обязателен\r\n  answerImg?: string\r\n  questionImg?: string\r\n  questionVideo?: string\r\n  answerVideo?: string\r\n  type?: string\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport { CardsType } from '../../../cards/dal/CardsApi';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport {\r\n  getCardsTC,\r\n  setErrorCards,\r\n  updateGradeCardTC,\r\n} from '../../../cards/bll/CardsReducer';\r\nimport s from './Train.module.scss';\r\nimport { InfoErrorMessage } from '../../../../common/ui/InfoErrorMessage/InfoErrorMessage';\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: CardsType[]) => {\r\n  const sum = cards.reduce((acc, card) =>\r\n    acc + (6 - card.grade) * (6 - card.grade), 0);\r\n  const rand = Math.random() * sum;\r\n  const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n      const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n      return { sum: newSum, id: newSum < rand ? i : acc.id };\r\n    }\r\n    , { sum: 0, id: -1 });\r\n  return cards[res.id + 1];\r\n};\r\n\r\nexport const Train = () => {\r\n\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n  const [first, setFirst] = useState<boolean>(true);\r\n  const [estimate, setEstimate] = useState<number>(-1);\r\n  const { cards } = useTypedSelector((state) => state.cards);\r\n  const error = useTypedSelector<string>((state) => state.cards.error);\r\n\r\n  const [card, setCard] = useState<CardsType>({\r\n    _id: 'fake',\r\n    cardsPack_id: '',\r\n    user_id: '',\r\n    answer: 'answer fake',\r\n    question: 'question fake',\r\n    grade: 0,\r\n    shots: 0,\r\n    type: '',\r\n    rating: 0,\r\n    __v: 0,\r\n    created: '',\r\n    updated: '',\r\n  });\r\n\r\n  const loading = useTypedSelector<boolean>((state) => state.cards.loading);\r\n\r\n  const { cardsPack_id } = useParams<{ cardsPack_id: string }>();\r\n  const dispatch: Function = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (first) {\r\n      dispatch(getCardsTC(cardsPack_id));\r\n      setFirst(false);\r\n    }\r\n    if (cards.length > 0) setCard(getCard(cards));\r\n    return () => {\r\n    };\r\n  }, [dispatch, cardsPack_id, cards, first]);\r\n\r\n  const setEstimateHandler = (value: number) => {\r\n    setEstimate(value);\r\n  };\r\n  const onNext = () => {\r\n    setIsChecked(false);\r\n\r\n    if (cards.length > 0) {\r\n      dispatch(updateGradeCardTC(card.cardsPack_id, card._id, estimate + 1));\r\n      setCard(getCard(cards));\r\n      setEstimate(-1);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <InfoErrorMessage\r\n        loading={loading}\r\n        error={error}\r\n        action={setErrorCards('')}\r\n      />\r\n      <div className={s.trainBlock}>\r\n        <div>{card.question}</div>\r\n        <div>\r\n          <Button onClick={() => setIsChecked(true)}>check</Button>\r\n        </div>\r\n\r\n        {isChecked && (\r\n          <>\r\n            <div>{card.answer}</div>\r\n            <div className={s.grade}>\r\n              {grades.map((g, value) => (\r\n                <Button className={estimate === value ? s.active : ''} key={'grade-' + value}\r\n                        onClick={() => {\r\n                          setEstimateHandler(value);\r\n                        }}>{g}</Button>\r\n              ))}\r\n            </div>\r\n            <div><Button onClick={onNext}>next</Button></div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './TrainPage.module.scss';\r\nimport { Train } from './Train/Train';\r\n\r\nexport const TrainPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Train</h2>\r\n\r\n      <Train />\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Range, createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { RangeProps } from 'rc-slider/lib/Range';\n\ntype DoubleRangePropsType = {\n  onChangeRange?: (value: [number, number]) => void\n  value?: [number, number]\n  min: number\n  max: number\n  step: number\n} & RangeProps\n\nconst RangeWithTooltip = createSliderWithTooltip(Range);\n\nexport const DoubleRange: React.FC<DoubleRangePropsType> = (\n  {\n    onChangeRange, value,\n    min, max, step,draggableTrack = true,...restProps\n  }\n) => {\n\n  return (\n    <>\n      <RangeWithTooltip onChange={([val1, val2]) => {\n        onChangeRange && onChangeRange([val1, val2])\n      }}\n                        value={value}\n                        min={min}\n                        max={max}\n                        step={step}\n                        draggableTrack={draggableTrack}\n                        {...restProps}\n      />\n    </>\n  );\n}","import React, { ChangeEvent, FC, useState } from 'react';\r\nimport s from './Cards.module.scss';\r\nimport { CardsType } from '../../dal/CardsApi';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { Pagination } from '../../../../common/ui/Paginator/Paginator';\r\nimport { Modal } from '../../../../common/ui/Modals/Modal';\r\nimport { DoubleRange } from '../../../../common/ui/DoubleRange/DoubleRange';\r\nimport { InfoErrorMessage } from '../../../../common/ui/InfoErrorMessage/InfoErrorMessage';\r\nimport { setErrorCards } from '../../bll/CardsReducer';\r\n\r\ntype PropsType = {\r\n  addCard: (cardsPack_id: string, question: string, answer: string) => void;\r\n  updatedCard: (_id: string, question: string, answer: string) => void;\r\n  deleteCard: (CardId: string) => void;\r\n  loading: boolean;\r\n  error: string;\r\n  cardsPack_id: string;\r\n  cards: CardsType[];\r\n  page: number;\r\n  setPage: (page: number) => void;\r\n  pageCount: number;\r\n  setPageCount: (page: number) => void;\r\n  userId: string;\r\n};\r\n\r\nexport const Cards: FC<PropsType> = ({\r\n  loading,\r\n  error,\r\n  cards,\r\n  addCard,\r\n  updatedCard,\r\n  cardsPack_id,\r\n  deleteCard,\r\n  page,\r\n  setPage,\r\n  pageCount,\r\n  setPageCount,\r\n  userId\r\n}) => {\r\n\r\n  const [modalAdd, setModalAdd] = useState<boolean>(false);\r\n  const [modalDelete, setModalDelete] = useState<boolean>(false);\r\n  const [cardQuestion, setCardQuestion] = useState<string>('');\r\n  const [cardAnswer, setCardAnswer] = useState<string>('');\r\n  const [changeCard, setChangeCard] = useState<string>('');\r\n  const [cardNameId, setCardNameId] = useState<string>('');\r\n  const [value1, setValue1] = useState(0);\r\n  const [value2, setValue2] = useState(5);\r\n  const addCardHandler = () => {\r\n    setModalAdd(true);\r\n  };\r\n  const onCardQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setCardQuestion(e.currentTarget.value);\r\n  };\r\n  const onCardAnswerAdd = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setCardAnswer(e.currentTarget.value);\r\n  };\r\n  const addCardSubmit = () => {\r\n    if (cardQuestion.trim()) {\r\n      addCard(cardsPack_id, cardQuestion, cardAnswer);\r\n      setModalAdd(false);\r\n      setCardQuestion('');\r\n      setCardAnswer('');\r\n      setPage(1)\r\n    }\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setModalAdd(false);\r\n    setModalDelete(false);\r\n    setChangeCard('');\r\n    setCardQuestion('');\r\n    setCardAnswer('');\r\n  };\r\n  const deletedCardHandler = (cardId: string) => {\r\n    setCardNameId(cardId);\r\n    setModalDelete(true);\r\n  };\r\n  const deletedCardsPackSubmit = () => {\r\n    deleteCard(cardNameId);\r\n    setModalDelete(false);\r\n  };\r\n  const updateCardHandler = (\r\n    id: string,cardQuestion: string, cardAnswer: string\r\n  ) => {\r\n    setChangeCard(id);\r\n    setCardQuestion(cardQuestion);\r\n    setCardAnswer(cardAnswer);\r\n  };\r\n  const changeCardPackSubmit = () => {\r\n    if (cardQuestion.trim()) {\r\n      updatedCard(changeCard, cardQuestion, cardAnswer);\r\n      setChangeCard('');\r\n      setCardQuestion('');\r\n      setCardAnswer('');\r\n    }\r\n  };\r\n  const handleChangePage = (page: number) => {\r\n    setPage(page);\r\n  };\r\n  const onChangeRange = (value: number[]) => {\r\n    setValue1(value[0]);\r\n    setValue2(value[1]);\r\n  };\r\n  const searchCardsGrade = cards.filter(p => (\r\n      p.grade >= value1 && p.grade <= value2\r\n    )\r\n  );\r\n  const totalPages = Math.ceil(searchCardsGrade.length / pageCount);\r\n  return <div>\r\n    <InfoErrorMessage\r\n      loading={loading}\r\n      error={error}\r\n      action={setErrorCards('')}\r\n    />\r\n    <div>\r\n      <DoubleRange\r\n        onChangeRange={onChangeRange}\r\n        value={[value1, value2]}\r\n        min={0}\r\n        max={5}\r\n        step={0.1}\r\n      />\r\n    </div>\r\n    {modalAdd &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <InputText\r\n        placeholder={'Question'}\r\n        onChange={onCardQuestion}\r\n        value={cardQuestion}\r\n      />\r\n      <InputText placeholder={'Answer'}\r\n                 onChange={onCardAnswerAdd}\r\n                 value={cardAnswer}\r\n      />\r\n      <Button disabled={loading}\r\n              onClick={addCardSubmit}>Submit</Button>\r\n    </Modal>}\r\n    {modalDelete &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <Button onClick={deletedCardsPackSubmit}>Yes</Button>\r\n      <Button onClick={deactivateEditMode}>No</Button>\r\n    </Modal>}\r\n    {changeCard &&\r\n    <Modal deactivateEditMode={deactivateEditMode}>\r\n      <InputText placeholder={'Question card'}\r\n                 onChange={onCardQuestion}\r\n                 value={cardQuestion}\r\n      />\r\n      <InputText placeholder={'Answer card'}\r\n                 onChange={onCardAnswerAdd}\r\n                 value={cardAnswer}\r\n      />\r\n      <Button disabled={loading}\r\n              onClick={changeCardPackSubmit}>Submit</Button>\r\n    </Modal>}\r\n    <div className={s.gridHeaderTable}>\r\n      <div>Question</div>\r\n      <div>Answer</div>\r\n      <div>Grade</div>\r\n      <div>Updated</div>\r\n      <div>Url</div>\r\n      <div>\r\n        <Button\r\n          disabled={loading || userId != cards[0]?.user_id}\r\n          onClick={addCardHandler}\r\n        >add\r\n        </Button>\r\n      </div>\r\n    </div>\r\n    <div className={s.hGridContainer}>\r\n    {searchCardsGrade.length === 0 && !loading\r\n        ? 'empty'\r\n        : searchCardsGrade.slice((page - 1) * pageCount, page * pageCount)\r\n          .map((c) => {\r\n        const data = new Date(c.updated).toUTCString().substring(0, 22);\r\n        const onUpdateCardClick = () =>\r\n          updateCardHandler(c._id, c.question, c.answer);\r\n\r\n        return <React.Fragment key={c._id}>\r\n          <div>{c.question}</div>\r\n          <div>{c.answer}</div>\r\n          <div>{c.grade}</div>\r\n          <div>{data}</div>\r\n          <div />\r\n          <div>\r\n            <Button disabled={loading || userId != c.user_id}\r\n                    onClick={() => deletedCardHandler(c._id)}>\r\n              del\r\n            </Button>\r\n            <Button disabled={loading || userId != c.user_id}\r\n                    onClick={onUpdateCardClick}>\r\n              update\r\n            </Button>\r\n          </div>\r\n        </React.Fragment>;\r\n      })}\r\n    </div>\r\n    <Pagination\r\n      totalPages={totalPages}\r\n      handleChangePage={handleChangePage}\r\n      page={page}\r\n      setPageCount={setPageCount}\r\n      pageCount={pageCount}\r\n    />\r\n  </div>;\r\n};\r\n","import { RootStateType } from '../../../main/bll/store';\r\n\r\nexport const selectCards = ((state: RootStateType) => state.cards);\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { Cards } from './Cards';\r\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\r\nimport {\r\n  addCardTC,\r\n  deleteCardTC,\r\n  getCardsTC,\r\n  updateCardTC,\r\n} from '../../bll/CardsReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { selectCards } from '../../bll/selectCards';\r\n\r\nexport const CardsContainer: FC = () => {\r\n  const {error, cards, cardsTotalCount, loading} = useSelector(selectCards)\r\n  const userId = useTypedSelector<string>((state) =>\r\n    state.login.user._id);\r\n\r\n  const pageCountInitialState = cards.length < 4 && cards.length > 0\r\n                                ? cards.length\r\n                                : 4;\r\n  const { cardsPack_id } = useParams<{ cardsPack_id: string }>();\r\n  const [pageCount, setPageCount] = useState<number>(pageCountInitialState);\r\n  const [page, setPage] = useState<number>(1);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (cards.length < 4 && cards.length > 0)\r\n      setPageCount(cards.length);\r\n  }, [cards]);\r\n  useEffect(() => {\r\n    if (cardsPack_id) {\r\n      dispatch(getCardsTC(cardsPack_id,\r\n        cardsTotalCount > 0\r\n          ? cardsTotalCount + 5\r\n          : 2000000,\r\n          page\r\n      ));\r\n    }\r\n  }, [dispatch]);\r\n  const addCard = (cardsPack_id: string, question: string, answer: string) => {\r\n    dispatch(addCardTC(\r\n      cardsPack_id,\r\n      question,\r\n      answer,\r\n      cardsTotalCount + 1,\r\n      page\r\n    ));\r\n  };\r\n  const updatedCard = (_id: string, question: string, answer: string) => {\r\n    dispatch(updateCardTC(\r\n      _id,\r\n      question,\r\n      answer,\r\n      cardsPack_id,\r\n      cardsTotalCount,\r\n      page\r\n    ));\r\n  };\r\n  const deleteCard = (cardId: string) => {\r\n    dispatch(deleteCardTC(\r\n      cardId,\r\n      cardsPack_id,\r\n      cardsTotalCount,\r\n      page\r\n    ));\r\n  };\r\n\r\n  return <Cards\r\n    loading={loading}\r\n    cards={cards}\r\n    error={error}\r\n    cardsPack_id={cardsPack_id}\r\n    addCard={addCard}\r\n    updatedCard={updatedCard}\r\n    deleteCard={deleteCard}\r\n    page={page}\r\n    setPage={setPage}\r\n    pageCount={pageCount}\r\n    setPageCount={setPageCount}\r\n    userId={userId}\r\n  />;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Cards.module.scss';\r\nimport { CardsContainer } from './CardsContainer/CardsContainer';\r\n\r\nexport const CardsPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Cards</h2>\r\n\r\n      <CardsContainer />\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Test.module.scss';\r\nimport { randomId } from '../../../utils/randomId';\r\nimport { ExamplesType } from './TestContainer';\r\n\r\ntype PropsType = {\r\n  examples: ExamplesType;\r\n};\r\n\r\nexport const Test: FC<PropsType> = ({ examples }) => {\r\n  return (\r\n    <table className={s.table}>\r\n      <thead>\r\n        <tr>\r\n          <th>Title</th>\r\n          <th>Example</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {examples.map((item) => {\r\n          const [title, [Example, props]] = item;\r\n\r\n          return (\r\n            <tr key={randomId()}>\r\n              <td>{title}</td>\r\n              <td>\r\n                <Example {...props} />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { FC, ElementType } from 'react';\r\n\r\nimport { unCamelCase } from '../../../utils/textTransform';\r\nimport { Test } from './Test';\r\nimport { Preloader } from '../../../common/ui/Preloader';\r\nimport { ErrorMessage } from '../../../common/ui/ErrorMessage';\r\nimport { LinkNative } from '../../../common/ui/LinkNative';\r\nimport { Button } from '../../../common/ui/Button';\r\nimport { InputText } from '../../../common/ui/InputText';\r\nimport { InputCheckbox } from '../../../common/ui/InputCheckbox';\r\nimport { InputRadio } from '../../../common/ui/InputRadio';\r\nimport { Select } from '../../../common/ui/Select';\r\n\r\nconst exampleLibrary: ExampleLibraryType = {\r\n  preloader: [Preloader, { text: 'Loading' }],\r\n  errorMessage: [\r\n    ErrorMessage,\r\n    { children: 'Error message', clickHandler: () => {} },\r\n  ],\r\n  link: [LinkNative, { href: '/', children: 'Hover me' }],\r\n  button: [Button, { children: 'Click me' }],\r\n  buttonError: [Button, { children: 'Error', error: true }],\r\n  inputText: [InputText, { placeholder: 'Write here' }],\r\n  inputEmail: [InputText, { type: 'email', placeholder: 'Email' }],\r\n  inputPassword: [InputText, { type: 'password', placeholder: 'Password' }],\r\n  inputTextError: [InputText, { error: 'an error', placeholder: 'Write here' }],\r\n  inputCheckbox: [InputCheckbox, { children: 'Check me' }],\r\n  inputRadio: [\r\n    InputRadio,\r\n    {\r\n      options: ['React', 'Redux', 'Typescript'],\r\n      name: 'skills',\r\n      value: 'React',\r\n    },\r\n  ],\r\n  select: [\r\n    Select,\r\n    { options: ['React', 'Redux', 'Typescript'], value: 'Redux' },\r\n  ],\r\n};\r\n\r\nconst examples: ExamplesType = Object.entries(\r\n  exampleLibrary,\r\n).map(([title, example]) => [unCamelCase(title), example]);\r\n\r\nexport const TestContainer: FC = () => {\r\n  return <Test examples={examples} />;\r\n};\r\n\r\ntype ExampleType = [ElementType, Record<string, unknown>];\r\ntype ExampleLibraryType = Record<string, ExampleType>;\r\nexport type ExamplesType = [string, ExampleType][];\r\n","import React, { AnchorHTMLAttributes, DetailedHTMLProps, FC } from 'react';\r\n\r\nimport s from './LinkNative.module.scss';\r\n\r\ntype DefaultAnchorPropsType = DetailedHTMLProps<\r\n  AnchorHTMLAttributes<HTMLAnchorElement>,\r\n  HTMLAnchorElement\r\n>;\r\n\r\ntype PropsType = DefaultAnchorPropsType;\r\n\r\nexport const LinkNative: FC<PropsType> = ({\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${s.link} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <a className={finalClassName} {...restProps}>\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from 'react';\r\nimport s from './InputRadio.module.scss';\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const InputRadio: React.FC<SuperRadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  className,\r\n  onChange,\r\n  onChangeOption,\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const finalRadioClassName = `${s.radio} ${className ? className : ''}`;\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + '-' + i} className={s.radioWrapper}>\r\n          <input\r\n            type=\"radio\"\r\n            name={name}\r\n            value={o}\r\n            checked={value === o}\r\n            onChange={onChangeCallback}\r\n            className={finalRadioClassName}\r\n          />\r\n          <span className={s.label}>{o}</span>\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <>{mappedOptions}</>;\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\nimport s from './Select.module.scss';\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\nexport type SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Select: React.FC<SuperSelectPropsType> = ({\r\n  options,\r\n  className,\r\n  onChange,\r\n  onChangeOption,\r\n\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <option key={o + '-' + i} value={o}>\r\n          {o}\r\n        </option>\r\n      ))\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const finalSelectClassName = `${s.select} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <select\r\n      onChange={onChangeCallback}\r\n      className={finalSelectClassName}\r\n      {...restProps}\r\n    >\r\n      {mappedOptions}\r\n    </select>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './TestPage.module.scss';\r\nimport { TestContainer } from './TestContainer';\r\n\r\nexport const TestPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Common components:</h2>\r\n\r\n      <TestContainer />\r\n    </section>\r\n  );\r\n};\r\n","import { useTypedSelector } from '../../../hooks/useTypedSelector';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { ProfilePage } from '../../../pages/profile/ui/ProfilePage';\r\nimport { PacksPage } from '../../../pages/packs/ui/PacksPage';\r\nimport { TrainPage } from '../../../pages/learn/ui/TrainPage';\r\nimport { CardsPage } from '../../../pages/cards/ui/CardsPage';\r\nimport { TestPage } from '../../../pages/test/ui/TestPage';\r\nimport React from 'react';\r\nimport { PATH } from './Routes';\r\n\r\nexport const NotAuthWithRedirect = () => {\r\n  const userId = useTypedSelector<string>(state => state.login.user._id);\r\n  if (!userId)\r\n    return <Redirect to={PATH.LOGIN} />;\r\n  return <Switch>\r\n    <Route path={PATH.PROFILE} render={() => <ProfilePage />} />\r\n    <Route path={PATH.PACKS} render={() => <PacksPage />} />\r\n    <Route path={PATH.TRAIN + '/:cardsPack_id'}\r\n           render={() => <TrainPage />} />\r\n    <Route path={PATH.CARDS + '/:cardsPack_id'}\r\n           render={() => <CardsPage />} />\r\n    <Route path={PATH.TEST} render={() => <TestPage />} />\r\n    <Redirect from='*' to={PATH.ERROR_404} />\r\n  </Switch>;\r\n};\r\n","import React, { FC, FormEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport s from './RegistrationForm.module.scss';\r\nimport { InputText } from '../../../../common/ui/InputText';\r\nimport { Button } from '../../../../common/ui/Button';\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\nimport {\r\n  HookInputType,\r\n  useInput,\r\n} from '../../../../hooks/ValidationFormAndrew';\r\nimport { ErrorMessage } from '../../../../common/ui/ErrorMessage';\r\n\r\ntype PropsType = {\r\n  loginLink: LoginLinkType;\r\n  createAuth: (email: string, password: string) => void;\r\n  closeMessage: (error: string) => void;\r\n  loading: boolean;\r\n};\r\n\r\nexport const RegistrationForm: FC<PropsType> = ({\r\n  loginLink: { link, title },\r\n  createAuth,\r\n  closeMessage,\r\n  loading,\r\n}) => {\r\n  const email = useInput('', { isEmail: true });\r\n  const password = useInput('', {\r\n    minLength: 8,\r\n    isPassword: true\r\n  });\r\n  const repeatPassword = useInput('', {\r\n    minLength: 8,\r\n    repeatPass: true,\r\n  });\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if(password.value !== repeatPassword.value){\r\n      repeatPassword.setInputError('Passwords must be same')\r\n    }\r\n    else {\r\n      repeatPassword.setInputError('')\r\n      if (email.value.trim() && password.value.trim()) {\r\n        createAuth(email.value, password.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeMessageHandler = (obj?: HookInputType) => () => {\r\n    closeMessage('');\r\n    if (obj) {\r\n      obj.setDirty(false);\r\n      obj.setInputError('')\r\n    }\r\n  };\r\n  const disabledSubmitBtn = !email.inputValid\r\n    || !password.inputValid\r\n    || !repeatPassword.inputValid\r\n    || loading;\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={submitHandler}>\r\n          {email.isDirty && email.inputError && (\r\n            <ErrorMessage clickHandler={closeMessageHandler(email)}>\r\n              {email.inputError}\r\n            </ErrorMessage>\r\n          )}\r\n\r\n          <InputText placeholder={'Email'}\r\n                     type={'email'}\r\n                     onChange={email.onChange}\r\n                     onBlur={email.onBlur}\r\n                     value={email.value}\r\n                     disabled={loading}\r\n          />\r\n\r\n          {password.isDirty && password.inputError && (\r\n            <ErrorMessage clickHandler={closeMessageHandler(password)}>\r\n              {password.inputError}\r\n            </ErrorMessage>\r\n          )}\r\n          <InputText placeholder={'Password'}\r\n                     type={'password'}\r\n                     onChange={password.onChange}\r\n                     onBlur={password.onBlur}\r\n                     value={password.value}\r\n                     disabled={loading}\r\n          />\r\n          {repeatPassword.isDirty && repeatPassword.inputError && (\r\n            <ErrorMessage clickHandler={closeMessageHandler(repeatPassword)}>\r\n              {repeatPassword.inputError}\r\n            </ErrorMessage>\r\n          )}\r\n          <InputText placeholder={'Repeat password'}\r\n                     type={'password'}\r\n                     onChange={repeatPassword.onChange}\r\n                     onBlur={repeatPassword.onBlur}\r\n                     value={repeatPassword.value}\r\n                     disabled={loading}\r\n          />\r\n            <Button type=\"submit\"\r\n                    disabled={disabledSubmitBtn}>\r\n              Sing Up\r\n            </Button>\r\n\r\n            <Link to={link} className={s.link}>\r\n                {title}\r\n            </Link>\r\n        </form>\r\n    );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle,\r\n} from '../../../../utils/textTransform';\r\nimport { PATH } from '../../../../main/ui/App/Routes';\r\nimport { RegistrationForm } from './RegistrationForm';\r\nimport { LoginLinkType } from '../../../login/ui/LoginFormContainer/LoginFormContainer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  CreateAuthTC,\r\n  setErrorLogin,\r\n} from '../../../login/bll/authReducer';\r\nimport { selectLogin } from '../../../login/bll/selectLogin';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const RegistrationFormContainer: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { LOGIN } = PATH;\r\n  const {\r\n    success,\r\n    loading,\r\n  } = useSelector(selectLogin)\r\n  const loginLink: LoginLinkType = {\r\n    link: LOGIN,\r\n    title: capitalizeFirstLetter(transformLinkToTitle(LOGIN)),\r\n  };\r\n  const createAuth = (email: string, password: string, ) => {\r\n    dispatch(CreateAuthTC(email, password));\r\n  };\r\n  const closeMessage = (error: string) => {\r\n    dispatch(setErrorLogin(error));\r\n  };\r\n  if (success) {\r\n    return <Redirect to={'/PATH'}/>\r\n  }\r\n\r\n  return <RegistrationForm\r\n    loginLink={loginLink}\r\n    createAuth={createAuth}\r\n    closeMessage={closeMessage}\r\n    loading={loading}\r\n  />;\r\n};\r\n","import React, {FC} from 'react';\r\n\r\nimport s from './RegistrationPage.module.scss';\r\nimport {RegistrationFormContainer} from \"./RegistrationForm/RegistrationFormContainer\";\r\n\r\nexport const RegistrationPage: FC = () => {\r\n\r\n    return (\r\n        <section className={s.page}>\r\n            <h2>Registration</h2>\r\n\r\n            <RegistrationFormContainer/>\r\n\r\n        </section>\r\n    );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginPage } from '../../../pages/login/ui/LoginPage';\r\nimport { RecoveryPassPage } from '../../../pages/recoveryPass/ui/RecoveryPassPage';\r\nimport { SetPassPage } from '../../../pages/setPass/ui/SetPassPage';\r\nimport { Error404Page } from '../../../pages/error404/ui/Error404Page';\r\nimport { NotAuthWithRedirect } from './NotAuthWithRedirect';\r\nimport { RegistrationPage } from '../../../pages';\r\n\r\nexport const PATH = {\r\n  LOGIN: '/login',\r\n  REGISTRATION: '/registration',\r\n  RECOVERY_PASS: '/recovery-pass',\r\n  SET_PASS: '/set-pass',\r\n  PROFILE: '/profile',\r\n  PACKS: '/packs',\r\n  TRAIN: '/train',\r\n  CARDS: '/cards',\r\n  TEST: '/test',\r\n  ERROR_404: '/error404',\r\n};\r\n\r\nexport const Routes: FC = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path='/' exact render={() => <Redirect to={PATH.PROFILE} />} />\r\n        <Route path={PATH.LOGIN} render={() => <LoginPage />} />\r\n        <Route path={PATH.REGISTRATION} render={() => <RegistrationPage />} />\r\n        <Route path={PATH.RECOVERY_PASS} render={() => <RecoveryPassPage />} />\r\n        <Route path={PATH.SET_PASS + '/:token'} render={() => <SetPassPage />} />\r\n        <Route path={PATH.ERROR_404} render={() => <Error404Page />} />\r\n        <NotAuthWithRedirect/>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './Nav.module.scss';\r\nimport { randomId } from '../../../../../utils/randomId';\r\nimport { NavLinkType } from './NavContainer';\r\n\r\ntype PropsType = {\r\n  navLinks: Array<NavLinkType>;\r\n};\r\n\r\nexport const Nav: FC<PropsType> = ({ navLinks }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const closeMenuHandler = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <nav className={s.nav}>\r\n      <input\r\n        checked={open}\r\n        className={s.navControl}\r\n        type=\"checkbox\"\r\n        id=\"menu-cb\"\r\n        onChange={closeMenuHandler}\r\n      />\r\n\r\n      <div className={s.navContent}>\r\n        <ul className={s.navItems} onClick={closeMenuHandler}>\r\n          {navLinks.map(({ link, title }) => (\r\n            <li key={randomId()} className={s.navItem}>\r\n              <NavLink\r\n                className={s.navItemLink}\r\n                exact\r\n                to={link}\r\n                activeClassName={s.navItemLinkActive}\r\n              >\r\n                {title}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <label className={s.navBtn} htmlFor=\"menu-cb\" />\r\n    </nav>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { PATH } from '../../Routes';\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle,\r\n} from '../../../../../utils/textTransform';\r\nimport { Nav } from './Nav';\r\n\r\nexport const NavContainer: FC = () => {\r\n  const navLinks: Array<NavLinkType> = Object.values(PATH).filter(link => link !== PATH.CARDS && link !== PATH.TRAIN)\r\n    .map((navLink) => ({\r\n    link: navLink,\r\n    title: capitalizeFirstLetter(transformLinkToTitle(navLink)),\r\n  }));\r\n  const navLinksWithoutError404: Array<NavLinkType> = navLinks.slice(\r\n    0,\r\n    navLinks.length - 1,\r\n  );\r\n\r\n  return <Nav navLinks={navLinksWithoutError404} />;\r\n};\r\n\r\nexport type NavLinkType = {\r\n  link: string;\r\n  title: string;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Header.module.scss';\r\nimport { NavContainer } from './Nav/NavContainer';\r\n\r\nexport const Header: FC = () => {\r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <div className={s.container}>\r\n        <NavContainer />\r\n      </div>\r\n    </header>\r\n  );\r\n};","import React, { FC } from 'react';\r\n\r\nimport s from './Main.module.scss';\r\nimport { Routes } from '../Routes';\r\n\r\nexport const Main: FC = () => {\r\n\r\n  return (\r\n    <main className={s.main}>\r\n      <div className={s.container}>\r\n        <Routes />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport s from './App.module.scss';\r\nimport { Header } from './Header';\r\nimport { Main } from './Main';\r\nimport { isAuthTC } from '../../../pages/login/bll/authReducer';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\n\r\nexport const App: FC = () => {\r\n  const isInitial = useTypedSelector<boolean>(state => state.login.isInitial);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    !isInitial && dispatch(isAuthTC());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.app}>\r\n      <Header />\r\n\r\n      {isInitial && <Main /> }\r\n    </div>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export type RecoveryPassStateType = {\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string;\r\n};\r\n\r\nexport const recoveryPassInitState: RecoveryPassStateType = {\r\n  loading: false,\r\n  success: false,\r\n  error: '',\r\n};\r\n","import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  compose,\r\n  Middleware,\r\n  Action,\r\n} from 'redux';\r\nimport thunk, { ThunkAction, ThunkMiddleware } from 'redux-thunk';\r\n\r\nimport { DEV } from '../../config';\r\nimport { authReducer as login } from '../../pages/login/bll/authReducer';\r\nimport { recoveryPassReducer as recoveryPass } from '../../pages/recoveryPass/bll/recoveryPassReducer';\r\nimport { packsReducer as packs } from '../../pages/packs/bll/PacksReducer';\r\nimport { cardsReducer as cards } from '../../pages/cards/bll/CardsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  login,\r\n  recoveryPass,\r\n  packs,\r\n  cards\r\n});\r\n\r\n// @ts-ignore next line\r\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers = DEV && devtools ? devtools : compose;\r\n\r\nconst middleware: Array<Middleware> = [thunk as ThunkMiddleware<RootStateType>];\r\n\r\nexport const enhancedStore = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nexport const store = createStore(rootReducer, enhancedStore);\r\n\r\n/** Types */\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport type InferActionsType<T> = T extends Record<string,\r\n    (...args: never[]) => infer U>\r\n  ? U\r\n  : never;\r\n\r\nexport type ThunkType<A extends Action = Action,\r\n  R = Promise<void>,\r\n  S = RootStateType> = ThunkAction<R, S, unknown, A>;\r\n\r\nif (DEV) {\r\n  // @ts-ignore next line\r\n  window.store = store;\r\n}\r\n","import {\r\n  RecoveryPassActionsType,\r\n  RecoveryPassActionType,\r\n} from './recoveryPassActions';\r\nimport {\r\n  recoveryPassInitState,\r\n  RecoveryPassStateType,\r\n} from './recoveryPassState';\r\n\r\nexport const recoveryPassReducer = (\r\n  state = recoveryPassInitState,\r\n  action: RecoveryPassActionsType,\r\n): RecoveryPassStateType => {\r\n  switch (action.type) {\r\n    case RecoveryPassActionType.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload.loading,\r\n        success: false,\r\n        error: '',\r\n      };\r\n\r\n    case RecoveryPassActionType.SET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: action.payload.success,\r\n        error: '',\r\n      };\r\n\r\n    case RecoveryPassActionType.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport { App } from './main/ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './main/bll/store';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}