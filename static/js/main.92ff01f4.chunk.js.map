{"version":3,"sources":["main/ui/App/Header/Nav/Nav.module.scss","pages/error404/ui/Error404Page.module.scss","common/ui/InputText/InputText.module.scss","common/ui/Button/Button.module.scss","common/ui/Paginator/Paginator.module.scss","pages/login/ui/LoginFormContainer/LoginForm.module.scss","common/ui/InputCheckbox/InputCheckbox.module.scss","common/ui/InputRadio/InputRadio.module.scss","pages/learn/ui/Train/Train.module.scss","pages/profile/ui/ProfileFormContainer/ProfileForm.module.scss","common/ui/Preloader/Preloader.module.scss","common/ui/Modals/Modal.module.scss","pages/setPass/ui/setPassForm/SetPassForm.module.scss","pages/recoveryPass/ui/RecoveryPassForm/RecoveryPassForm.module.scss","pages/registration/ui/RegistrationForm/RegistrationForm.module.scss","main/ui/App/Header/Header.module.scss","main/ui/App/Main/Main.module.scss","pages/login/ui/LoginPage.module.scss","common/ui/ErrorMessage/ErrorMessage.module.scss","common/ui/InfoErrorMessage/InfoErrorMessage.module.scss","pages/test/ui/TestPage.module.scss","pages/test/ui/Test.module.scss","common/ui/Select/Select.module.scss","common/ui/LinkNative/LinkNative.module.scss","pages/packs/ui/Packs.module.scss","common/ui/Search/Search.module.scss","pages/learn/ui/TrainPage.module.scss","pages/cards/ui/Cards.module.scss","pages/profile/ui/ProfilePage.module.scss","pages/setPass/ui/SetPassPage.module.scss","pages/recoveryPass/ui/RecoveryPassPage.module.scss","pages/registration/ui/RegistrationPage.module.scss","pages/login/bll/authReducer.ts","common/ui/Button/Button.tsx","utils/randomId.ts","common/ui/SvgIcon/SvgIcon.tsx","common/ui/InputText/InputText.tsx","hooks/ValidationFormAndrew.tsx","common/ui/ErrorMessage/ErrorMessage.tsx","common/ui/InputCheckbox/InputCheckbox.tsx","config.ts","main/dal/api.ts","pages/login/dal/loginApi.ts","pages/profile/dal/profileApi.ts","pages/setPass/dal/setPassApi.ts","pages/registration/dal/RegistrationApi.ts","pages/packs/bll/PacksReducer.ts","common/ui/Preloader/Preloader.tsx","common/ui/InfoErrorMessage/InfoErrorMessage.tsx","pages/login/ui/LoginFormContainer/LoginForm.tsx","utils/textTransform.ts","pages/login/bll/selectLogin.ts","pages/login/ui/LoginFormContainer/LoginFormContainer.tsx","pages/login/ui/LoginPage.tsx","hooks/useTypedSelector.ts","hooks/useInputValue.ts","pages/test/ui/Test.tsx","pages/test/ui/TestContainer.tsx","common/ui/LinkNative/LinkNative.tsx","common/ui/InputRadio/InputRadio.tsx","common/ui/Select/Select.tsx","pages/test/ui/TestPage.tsx","pages/packs/dal/PacksApi.ts","pages/cards/bll/CardsReducer.ts","common/ui/Table/ContentPacks.tsx","common/ui/Table/ContentCards.tsx","common/ui/Table/Table.tsx","common/ui/Modals/Modal.tsx","common/ui/Search/Search.tsx","common/ui/Paginator/Paginator.tsx","pages/packs/ui/Packs/Packs.tsx","pages/packs/bll/selectPacks.ts","pages/packs/ui/Packs/PacksContainer.tsx","pages/packs/ui/PacksPage.tsx","pages/cards/dal/CardsApi.ts","pages/recoveryPass/bll/recoveryPassActions.ts","pages/learn/ui/Train/Train.tsx","pages/learn/ui/TrainPage.tsx","common/ui/DoubleRange/DoubleRange.tsx","pages/cards/ui/CardsContainer/Cards.tsx","pages/cards/bll/selectCards.ts","pages/cards/ui/CardsContainer/CardsContainer.tsx","pages/cards/ui/CardsPage.tsx","common/ui/InputFile/InputFile.tsx","pages/profile/ui/ProfileFormContainer/ProfileForm.tsx","pages/profile/ui/ProfileFormContainer/ProfileFormContainer.tsx","pages/profile/ui/ProfilePage.tsx","main/ui/App/NotAuthWithRedirect.tsx","pages/setPass/ui/setPassForm/SetPassForm.tsx","pages/setPass/ui/setPassForm/SetPassFormContainer.tsx","pages/setPass/ui/SetPassPage.tsx","pages/error404/ui/Error404Page.tsx","pages/recoveryPass/ui/RecoveryPassForm/RecoveryPassForm.tsx","pages/recoveryPass/dal/recoveryPassApi.ts","pages/recoveryPass/dal/messageTemplate.ts","pages/recoveryPass/bll/recoveryPassThunk.ts","pages/recoveryPass/bll/selectRecoveryPass.ts","pages/recoveryPass/ui/RecoveryPassForm/RecoveryPassFormContainer.tsx","pages/recoveryPass/ui/RecoveryPassPage.tsx","pages/registration/ui/RegistrationForm/RegistrationForm.tsx","pages/registration/ui/RegistrationForm/RegistrationFormContainer.tsx","pages/registration/ui/RegistrationPage.tsx","main/ui/App/Routes.tsx","main/ui/App/Header/Nav/Nav.tsx","main/ui/App/Header/Nav/NavContainer.tsx","main/ui/App/Header/Header.tsx","main/ui/App/Main/Main.tsx","main/ui/App/App.tsx","reportWebVitals.ts","pages/recoveryPass/bll/recoveryPassState.ts","main/bll/store.ts","pages/recoveryPass/bll/recoveryPassReducer.ts","index.tsx"],"names":["module","exports","loginActionType","Button","error","large","small","className","restProps","finalClassName","s","btn","default","randomId","Math","floor","random","toString","SvgIcon","type","viewBox","height","width","xmlns","d","aria-hidden","InputText","onChange","onChangeText","onKeyPress","onEnter","errorClassName","text","finalErrorClassName","errorMessage","finalInputClassName","input","inputWrapper","label","e","currentTarget","value","key","useInput","initialValue","validations","useState","setValue","isDirty","setDirty","valid","inputError","setInputError","inputValid","setInputValid","useEffect","validation","length","test","String","toLowerCase","minLength","useValidation","target","onBlur","ErrorMessage","children","clickHandler","message","onClick","InputCheckbox","onChangeChecked","labelClassName","finalLabelClassName","finalCheckboxClassName","checkbox","checkboxWrapper","checked","DEV","process","API","axios","create","baseURL","withCredentials","FileAPI","authAPI","email","password","rememberMe","post","then","response","data","logOutAPI","delete","isAuthAPI","changeAuthAPI","name","avatar","put","changeAuthImageAPI","fileData","setNewPassAPI","resetPasswordToken","createAuthAPI","packsActionType","user","_id","publicCardPacksCount","created","Date","updated","isAdmin","verified","initialState","loading","success","isInitial","setLoading","SET_LOADING","payload","setSuccess","SET_SUCCESS","setUser","SET_USER","setErrorLogin","SET_ERROR","changeUser","CHANGE_USER","changeAuthTC","dispatch","a","updatedUser","Preloader","preloader","loader","InfoErrorMessage","action","useDispatch","messageWrapper","LoginForm","loginLinks","sendLogin","userId","closeMessage","redirectLink","setRememberMe","isEmail","isPassword","to","closeMessageHandler","obj","disabledSubmitBtn","form","onSubmit","preventDefault","trim","placeholder","disabled","linksForm","map","link","title","capitalizeFirstLetter","str","charAt","toUpperCase","slice","transformLinkToTitle","replace","selectLogin","state","login","LoginFormContainer","RECOVERY_PASS","PATH","REGISTRATION","PROFILE","useSelector","loginPageTC","LoginPage","page","useTypedSelector","useInputValue","initValue","event","newValue","Test","examples","table","item","Example","props","exampleLibrary","href","button","buttonError","inputText","inputEmail","inputPassword","inputTextError","inputCheckbox","inputRadio","options","onChangeOption","onChangeCallback","finalRadioClassName","radio","mappedOptions","o","i","radioWrapper","select","finalSelectClassName","Object","entries","example","word","idx","TestContainer","TestPage","packsAPI","user_id","pageCount","get","params","privat","cardsPack","private","id","cardsActionType","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","setErrorPacks","SET_ERROR_PACKS","getCardsPacksTC","SET_PACKS","ContentPacks","packs","updateCardsPackHandler","deletedCardsPackHandler","CARDS","TRAIN","el","toUTCString","substring","Fragment","cardsCount","hasOwnProperty","ContentCards","cards","deletedCardHandler","updateCardHandler","question","answer","grade","Table","header","index","Modal","deactivateEditMode","packsModal","stopPropagation","Search","handleSearch","search","Pagination","totalPages","handleChangePage","setPageCount","pattern","Array","_","changeNumber","n","paginatorBlock","paginator","active","paginatorItems","inputPage","newPageCount","parseInt","Packs","deletedCardsPack","updatedCardsPack","addCardsPack","setPage","modalAdd","setModalAdd","modalDelete","setModalDelete","modalChange","setModalChange","newPackName","setNewPackName","onPackNameAdd","changePackName","setChangePackName","onPackNameChange","privatPack","setPrivatPack","myPacks","setMyPacks","PackNameId","setPackNameId","letter","deletedCardsPackSubmit","searchCardsPacks","filter","p","includes","ceil","headersName","addCardsPackSubmit","showModalAddPack","showModalDeletePack","changedPackName","changeCardsPackSubmit","showModalChangePack","cardsPackId","cardsPackName","selectPacks","PacksContainer","deletedCardsPackTC","updatedCardsPackTC","addCardsPackTC","PacksPage","cardsApi","cardsPack_id","card","card_id","cardId","RecoveryPassActionType","cardsTotalCount","maxGrade","minGrade","packUserId","setLoadingCards","SET_LOADING_CARDS","setCards","SET_CARDS","setErrorCards","SET_ERROR_CARDS","getCardsTC","grades","getCard","sum","reduce","acc","rand","res","newSum","Train","isChecked","setIsChecked","first","setFirst","estimate","setEstimate","shots","rating","__v","setCard","useParams","trainBlock","g","setEstimateHandler","updateGradeCardTC","TrainPage","RangeWithTooltip","createSliderWithTooltip","Range","DoubleRange","onChangeRange","min","max","step","draggableTrack","val1","val2","Cards","addCard","updatedCard","deleteCard","cardQuestion","setCardQuestion","onCardQuestion","cardAnswer","setCardAnswer","onCardAnswerAdd","changeCard","setChangeCard","cardNameId","setCardNameId","value1","setValue1","value2","setValue2","addCardSubmit","changeCardPackSubmit","searchCardsGrade","showModalAddCard","showModalDeleteCard","showModalChangeCard","selectCards","CardsContainer","pageCountInitialState","addCardTC","updateCardTC","deleteCardTC","CardsPage","InputFile","inRef","useRef","fileURL","setFileURL","setFileData","changeAuthImageTC","accept","ref","style","display","reader","FileReader","formData","FormData","newFile","files","window","URL","createObjectURL","append","readAsDataURL","current","click","ProfileForm","sendLogOut","changeAuth","editModeName","setEditModeName","editModeAvatar","setEditModeAvatar","onNameChange","onAvatarChange","activateEditMode","undefined","img","src","alt","autoFocus","onDoubleClick","ProfileFormContainer","ProfilePage","NotAuthWithRedirect","path","render","PACKS","TEST","from","ERROR_404","LOGIN","SetPassForm","loginLink","setNewPassAuth","repeatPassword","repeatPass","SetPassFormContainer","token","setNewPassTC","SetPassPage","Error404Page","main","footer","footerText","recoveryPassActions","RecoveryPassForm","sendEmail","setEmail","setTimeout","alert","recoveryPassApi","setError","selectRecoveryPass","recoveryPass","RecoveryPassFormContainer","sendEmailAsync","RecoveryPassPage","RegistrationForm","createAuth","RegistrationFormContainer","CreateAuthTC","RegistrationPage","SET_PASS","Routes","exact","Nav","navLinks","open","setOpen","closeMenuHandler","nav","navControl","navContent","navItems","navItem","navItemLink","activeClassName","navItemLinkActive","navBtn","htmlFor","NavContainer","values","navLink","navLinksWithoutError404","Header","container","Main","App","IS_INITIAL","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","recoveryPassInitState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","enhancedStore","applyMiddleware","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92ff01f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__VE29K\",\"navControl\":\"Nav_navControl__q9neT\",\"navContent\":\"Nav_navContent__3Czvi\",\"navItems\":\"Nav_navItems__37FoA\",\"navItem\":\"Nav_navItem__nAPWr\",\"navItemLink\":\"Nav_navItemLink__2Vf4X\",\"linkRotate\":\"Nav_linkRotate__3TONa\",\"navItemLinkActive\":\"Nav_navItemLinkActive__1-Yl7\",\"navBtn\":\"Nav_navBtn__hd2I5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Error404Page_page__3pOuS\",\"title\":\"Error404Page_title__DmawO\",\"text\":\"Error404Page_text__18c0F\",\"footer\":\"Error404Page_footer__1Cf4V\",\"footerText\":\"Error404Page_footerText__1oXY9\",\"link\":\"Error404Page_link__3Kzqd LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"InputText_inputWrapper__2htqf\",\"errorMessage\":\"InputText_errorMessage__3yIyw\",\"label\":\"InputText_label__22uGC\",\"text\":\"InputText_text__1OAjg\",\"input\":\"InputText_input__23_di\",\"error\":\"InputText_error__21ezK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__dgCCX\",\"large\":\"Button_large__2WdYn\",\"small\":\"Button_small__2gjkf\",\"default\":\"Button_default__1fIO7\",\"error\":\"Button_error__3Np7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3j5OD\",\"active\":\"Paginator_active__2WK2K\",\"paginatorItems\":\"Paginator_paginatorItems__SPC1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1gpGZ form_form__a6yyo\",\"linksForm\":\"LoginForm_linksForm__3WehA\",\"link\":\"LoginForm_link__2QSbo LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxWrapper\":\"InputCheckbox_checkboxWrapper__2wAqz\",\"checkbox\":\"InputCheckbox_checkbox__3gPmy\",\"label\":\"InputCheckbox_label__2oNoo\",\"info\":\"InputCheckbox_info__1monh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioWrapper\":\"InputRadio_radioWrapper__VLFsv\",\"radio\":\"InputRadio_radio__zFt8P\",\"label\":\"InputRadio_label__3COpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trainBlock\":\"Train_trainBlock__3UPDp\",\"grade\":\"Train_grade__1tskH\",\"active\":\"Train_active__1mjl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__woxv5 form_form__a6yyo\",\"img\":\"ProfileForm_img__3UOJt\",\"avatar\":\"ProfileForm_avatar__2sNRA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3FUM8\",\"loader\":\"Preloader_loader__28BcO\",\"load\":\"Preloader_load__3odh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsModal\":\"Modal_packsModal__247W5\",\"form\":\"Modal_form__rEWWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetPassForm_form__3-fg5 form_form__a6yyo\",\"link\":\"SetPassForm_link__2_tL6 LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RecoveryPassForm_form__2fk97 form_form__a6yyo\",\"link\":\"RecoveryPassForm_link__3t279 LinkNative_link__hGO0Z\",\"spanAvatar\":\"RecoveryPassForm_spanAvatar__ejPYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegistrationForm_form__3ynJP form_form__a6yyo\",\"link\":\"RegistrationForm_link__3EmAX LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3h183\",\"container\":\"Header_container__2uUPK container_container__PX4-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__ib6B-\",\"container\":\"Main_container__1V-h- container_container__PX4-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"LoginPage_page__2921G page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"ErrorMessage_message__15zE2\",\"shake\":\"ErrorMessage_shake__1Izju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"InfoErrorMessage_messageWrapper__22jPm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"TestPage_page__uEre9 page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Test_table__1U9P9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3wUUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkNative_link__hGO0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Packs_page__3qwbU page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2nz3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"TrainPage_page__3aywU page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Cards_page__2JSyE page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ProfilePage_page__2SAW9 page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"SetPassPage_page__4r-_B page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"RecoveryPassPage_page__7i91j page_page__31uF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"RegistrationPage_page__kZj2O page_page__31uF2\"};","import { ThunkType } from 'src/main/bll/store';\r\nimport { authAPI } from 'src/pages/login/dal/loginApi';\r\nimport {\r\n  changeAuthAPI,\r\n  changeAuthImageAPI,\r\n  isAuthAPI,\r\n  logOutAPI,\r\n} from '../../profile/dal/profileApi';\r\nimport { setNewPassAPI } from 'src/pages/setPass/dal/setPassApi';\r\nimport { createAuthAPI } from 'src/pages/registration/dal/RegistrationApi';\r\n\r\nexport enum loginActionType {\r\n  SET_LOADING = 'AUTH/LOGIN/SET_LOADING',\r\n  SET_USER = 'AUTH/LOGIN/SET_USER',\r\n  SET_ERROR = 'AUTH/LOGIN/SET_ERROR',\r\n  SET_SUCCESS = 'AUTH/LOGIN/SET_SUCCESS',\r\n  CHANGE_USER = 'AUTH/LOGIN/CHANGE_USER',\r\n  IS_INITIAL = 'AUTH/LOGIN/IS_INITIAL'\r\n}\r\n\r\nconst user = {\r\n  _id: '',\r\n  email: '',\r\n  name: '',\r\n  publicCardPacksCount: 0, // количество колод\r\n\r\n  created: new Date(),\r\n  updated: new Date(),\r\n  isAdmin: false,\r\n  verified: false, // подтвердил ли почту\r\n  rememberMe: false,\r\n};\r\n\r\nconst initialState: StateType = {\r\n  user,\r\n  loading: false,\r\n  success: false,\r\n  error: '',\r\n  isInitial: false,\r\n};\r\n\r\nexport const authReducer = (\r\n  state = initialState,\r\n  action: ActionsLoginType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case loginActionType.SET_USER:\r\n      return { ...state, user: action.payload.user };\r\n    case loginActionType.CHANGE_USER:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          name: action.payload.name,\r\n          avatar: action.payload.avatar\r\n        },\r\n      };\r\n    case loginActionType.IS_INITIAL:\r\n    case loginActionType.SET_LOADING:\r\n    case loginActionType.SET_ERROR:\r\n    case loginActionType.SET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: '',\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nexport const setLoading = (loading: boolean) => ({\r\n  type: loginActionType.SET_LOADING,\r\n  payload: {\r\n    loading,\r\n  },\r\n} as const);\r\nexport const setSuccess = (success: boolean) => ({\r\n    type: loginActionType.SET_SUCCESS,\r\n    payload: {\r\n      success,\r\n    },\r\n} as const);\r\nexport const setIsInitial = (isInitial: boolean) => ({\r\n    type: loginActionType.IS_INITIAL,\r\n    payload: {\r\n      isInitial,\r\n    },\r\n} as const);\r\nexport const setUser = (user: UserType) => ({\r\n  type: loginActionType.SET_USER,\r\n  payload: {\r\n    user\r\n  }\r\n} as const);\r\nexport const setErrorLogin = (error: string) => ({\r\n    type: loginActionType.SET_ERROR,\r\n    payload: {\r\n      error,\r\n    },\r\n} as const);\r\nexport const changeUser = (name: string, avatar: string) => ({\r\n  type: loginActionType.CHANGE_USER,\r\n  payload: {\r\n    name,\r\n    avatar,\r\n  }\r\n} as const);\r\n\r\n/** Thunks */\r\nexport const loginPageTC = (\r\n  email: string, password: string, rememberMe: boolean\r\n): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    dispatch(setErrorLogin(''));\r\n    const data = await authAPI.login(\r\n      { email, password, rememberMe }\r\n    );\r\n    dispatch(setUser(data));\r\n    dispatch(setSuccess(true));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setErrorLogin(error));\r\n  }\r\n};\r\nexport const CreateAuthTC = (\r\n  email: string, password: string\r\n): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      dispatch(setErrorLogin(''));\r\n      const data = await createAuthAPI.createAuth(\r\n        { email, password }\r\n      );\r\n      dispatch(setUser(data));\r\n      dispatch(setSuccess(true));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorLogin(error));\r\n    }\r\n  };\r\nexport const logoutTC = (): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    await logOutAPI.logOut();\r\n    dispatch(setUser(user));\r\n    dispatch(setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setErrorLogin(error));\r\n  }\r\n};\r\nexport const isAuthTC = (): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    dispatch(setErrorLogin(''));\r\n    const data = await isAuthAPI.isAuth();\r\n    await isAuthAPI.isAuth();\r\n    dispatch(setUser(data));\r\n    dispatch(setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setErrorLogin(error));\r\n  } finally {\r\n    dispatch(setIsInitial(true));\r\n  }\r\n};\r\nexport const changeAuthTC = (\r\n  name: string,\r\n  avatar: string\r\n): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const data = await changeAuthAPI.changeAuth({ name, avatar });\r\n    dispatch(setLoading(false));\r\n    dispatch(changeUser(\r\n      data.updatedUser.name,\r\n      data.updatedUser.avatar ? data.updatedUser.avatar : ''\r\n    ));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : (e.message + ', more details in the console');\r\n    dispatch(setErrorLogin(error));\r\n  }\r\n};\r\nexport const changeAuthImageTC = (\r\n  fileData: FormData,\r\n  name: string,\r\n  avatar: string\r\n): ThunkType<ActionsLoginType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      debugger\r\n      dispatch(setLoading(true));\r\n      await changeAuthImageAPI.changeAuthImage({ fileData } );\r\n      dispatch(changeAuthTC(name, avatar ))\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorLogin(error));\r\n    }\r\n  };\r\n\r\nexport const setNewPassTC = (\r\n  password: string,\r\n  resetPasswordToken: string\r\n): ThunkType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await setNewPassAPI.setNewPass({ password, resetPasswordToken });\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorLogin(error));\r\n    }\r\n  };\r\n\r\n/** Types */\r\nexport type StateType = {\r\n  user: UserType;\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string;\r\n  isInitial: boolean;\r\n};\r\n\r\nexport type ActionsLoginType =\r\n    ReturnType<typeof setLoading>\r\n  | ReturnType<typeof setUser>\r\n  | ReturnType<typeof setErrorLogin>\r\n  | ReturnType<typeof setSuccess>\r\n  | ReturnType<typeof changeUser>\r\n  | ReturnType<typeof setIsInitial>;\r\n\r\nexport type UserType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n\r\n  created: Date;\r\n  updated: Date;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n\r\n  error?: string;\r\n}\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps, FC } from 'react';\r\n\r\nimport s from './Button.module.scss';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype PropsType = DefaultButtonPropsType & {\r\n  error?: boolean;\r\n  large?: boolean;\r\n  small?: boolean;\r\n};\r\n\r\nexport const Button: FC<PropsType> = ({\r\n  error,\r\n  large,\r\n  small,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${s.btn} ${large ? s.large : ''} ${\r\n    small ? s.small : ''\r\n  } ${error ? s.error : s.default} ${className ? className : ''}`;\r\n\r\n  return <button className={finalClassName} {...restProps} />;\r\n};\r\n","export const randomId = (): string =>\r\n  Math.floor(Math.random() * 1e9).toString(16);\r\n","import React, { FC } from 'react';\r\n\r\ntype SvgIconType = {\r\n  type: 'text' | 'email' | 'password';\r\n};\r\n\r\nexport const SvgIcon: FC<SvgIconType> = ({ type }) => {\r\n  switch (type) {\r\n    case 'text':\r\n      return (\r\n        <svg\r\n          viewBox=\"0 0 484 484\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"m401.648438 18.234375c-24.394532-24.351563-63.898438-24.351563-88.292969 0l-22.101563 22.222656-235.269531 235.144531-.5.503907c-.121094.121093-.121094.25-.25.25-.25.375-.625.746093-.871094 1.121093 0 .125-.128906.125-.128906.25-.25.375-.371094.625-.625 1-.121094.125-.121094.246094-.246094.375-.125.375-.25.625-.378906 1 0 .121094-.121094.121094-.121094.25l-52.199219 156.96875c-1.53125 4.46875-.367187 9.417969 2.996094 12.734376 2.363282 2.332031 5.550782 3.636718 8.867188 3.625 1.355468-.023438 2.699218-.234376 3.996094-.625l156.847656-52.324219c.121094 0 .121094 0 .25-.121094.394531-.117187.773437-.285156 1.121094-.503906.097656-.011719.183593-.054688.253906-.121094.371094-.25.871094-.503906 1.246094-.753906.371093-.246094.75-.621094 1.125-.871094.125-.128906.246093-.128906.246093-.25.128907-.125.378907-.246094.503907-.5l257.371093-257.371094c24.351563-24.394531 24.351563-63.898437 0-88.289062zm-232.273438 353.148437-86.914062-86.910156 217.535156-217.535156 86.914062 86.910156zm-99.15625-63.808593 75.929688 75.925781-114.015626 37.960938zm347.664062-184.820313-13.238281 13.363282-86.917969-86.917969 13.367188-13.359375c14.621094-14.609375 38.320312-14.609375 52.945312 0l33.964844 33.964844c14.511719 14.6875 14.457032 38.332031-.121094 52.949218zm0 0\" />\r\n        </svg>\r\n      );\r\n\r\n    case 'email':\r\n      return (\r\n        <svg\r\n          viewBox=\"0 0 512 512\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M467 61H45C20.218 61 0 81.196 0 106v300c0 24.72 20.128 45 45 45h422c24.72 0 45-20.128 45-45V106c0-24.72-20.128-45-45-45zm-6.214 30L256.954 294.833 51.359 91h409.427zM30 399.788V112.069l144.479 143.24L30 399.788zM51.213 421l144.57-144.57 50.657 50.222c5.864 5.814 15.327 5.795 21.167-.046L317 277.213 460.787 421H51.213zM482 399.787L338.213 256 482 112.212v287.575z\" />\r\n        </svg>\r\n      );\r\n\r\n    case 'password':\r\n      return (\r\n        <svg\r\n          viewBox=\"0 0 24 24\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"m18.75 24h-13.5c-1.24 0-2.25-1.009-2.25-2.25v-10.5c0-1.241 1.01-2.25 2.25-2.25h13.5c1.24 0 2.25 1.009 2.25 2.25v10.5c0 1.241-1.01 2.25-2.25 2.25zm-13.5-13.5c-.413 0-.75.336-.75.75v10.5c0 .414.337.75.75.75h13.5c.413 0 .75-.336.75-.75v-10.5c0-.414-.337-.75-.75-.75z\" />\r\n          <path d=\"m17.25 10.5c-.414 0-.75-.336-.75-.75v-3.75c0-2.481-2.019-4.5-4.5-4.5s-4.5 2.019-4.5 4.5v3.75c0 .414-.336.75-.75.75s-.75-.336-.75-.75v-3.75c0-3.309 2.691-6 6-6s6 2.691 6 6v3.75c0 .414-.336.75-.75.75z\" />\r\n          <path d=\"m12 17c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zm0-2.5c-.275 0-.5.224-.5.5s.225.5.5.5.5-.224.5-.5-.225-.5-.5-.5z\" />\r\n          <path d=\"m12 20c-.414 0-.75-.336-.75-.75v-2.75c0-.414.336-.75.75-.75s.75.336.75.75v2.75c0 .414-.336.75-.75.75z\" />\r\n        </svg>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <svg\r\n          height=\"48\"\r\n          width=\"48\"\r\n          viewBox=\"0 0 512 512\"\r\n          aria-hidden=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M132.893 310.534l-30.082 10.911L91.9 291.364l30.081-10.911z\" />\r\n          <path d=\"M271.552 301.072l-77.856-46.72-41.616 15.152 10.944 30.064 27.28-9.92 82.144 49.28 97.6-65.072L480 315.088V480H32V347.2l40.8-14.848-10.928-30.048L0 324.8V512h512V292.912l-146.048-54.768z\" />\r\n          <path d=\"M0 0v278.848l66.576-24.224-10.928-30.064L32 233.152V32h448v168.912l-114.048-42.768-94.4 62.928-77.856-46.72-47.84 17.392 10.944 30.064 33.504-12.16 82.144 49.28 97.6-65.072L512 247.088V0z\" />\r\n          <path d=\"M96.656 243.686L85.721 213.63l30.07-10.94 10.935 30.055z\" />\r\n        </svg>\r\n      );\r\n  }\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n  FC,\r\n} from 'react';\r\n\r\nimport s from './InputText.module.scss';\r\nimport { SvgIcon } from '../SvgIcon';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n  type?: 'text' | 'email' | 'password';\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  errorClassName?: string;\r\n  text?: string;\r\n};\r\n\r\nexport const InputText: FC<PropsType> = ({\r\n  type = 'text',\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  errorClassName,\r\n  text,\r\n\r\n  ...restProps\r\n}) => {\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    e.key === 'Enter' && onEnter && onEnter();\r\n  };\r\n\r\n  const finalErrorClassName = `${s.errorMessage} ${\r\n    errorClassName ? errorClassName : ''\r\n  }`;\r\n  const finalInputClassName = `${s.input} ${error ? s.error : ''} ${\r\n    className ? className : ''\r\n  }`;\r\n\r\n  return (\r\n    <div className={s.inputWrapper}>\r\n      {error && <span className={finalErrorClassName}>{error}</span>}\r\n\r\n      <label className={s.label}>\r\n        <span className={s.text}>{text || `Enter your ${type}`}</span>\r\n\r\n        <input\r\n          type={type}\r\n          onChange={onChangeHandler}\r\n          onKeyPress={onKeyPressHandler}\r\n          className={finalInputClassName}\r\n          {...restProps}\r\n        />\r\n\r\n        <SvgIcon type={type} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import { ChangeEvent } from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\ntype ValidationsType = {\r\n  isEmail?: boolean\r\n  minLength?: number\r\n  isPassword?: boolean\r\n  repeatPass?: boolean\r\n}\r\n\r\nconst useValidation = (value: string, validations: ValidationsType) => {\r\n  const [inputError, setInputError] = useState('');\r\n  const [inputValid, setInputValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    for (const validation in validations) {\r\n      switch (validation) {\r\n        case 'isEmail':\r\n          const reForMail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n          if (value.length === 0) {\r\n            setInputError('Email is required');\r\n          } else {\r\n            reForMail.test(String(value).toLowerCase())\r\n              ? setInputError('')\r\n              : setInputError('Email address is invalid');\r\n          }\r\n          break;\r\n        case 'isPassword':\r\n          if (!value.length) {\r\n            setInputError('Password is required');\r\n          } else {\r\n            const minLength = validations.minLength\r\n              ? validations.minLength\r\n              : 8;\r\n            value.length < minLength\r\n              ? setInputError('Password must be 8 or more characters')\r\n              : setInputError('');\r\n          }\r\n          break;\r\n        case 'repeatPass':\r\n          if (!value.length) {\r\n            setInputError('Password is required');\r\n          } else if (inputError !== 'Passwords must be same') {\r\n            setInputError('');\r\n          }\r\n      }\r\n    }\r\n  }, [value, validations, inputError]);\r\n\r\n  useEffect(() => {\r\n    if (inputError) {\r\n      setInputValid(false);\r\n    } else {\r\n      setInputValid(true);\r\n    }\r\n  }, [inputError]);\r\n\r\n  return {\r\n    setInputError,\r\n    inputError,\r\n    inputValid,\r\n  };\r\n};\r\n\r\nexport const useInput = (initialValue: string, validations: ValidationsType) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [isDirty, setDirty] = useState(false); //выход из инпута\r\n  const valid = useValidation(value, validations);\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const onBlur = () => {\r\n    setDirty(true);\r\n  };\r\n\r\n  return {\r\n    setDirty,\r\n    setValue,\r\n    value,\r\n    onChange,\r\n    onBlur,\r\n    isDirty,\r\n    ...valid,\r\n  };\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Button } from 'src/common/ui/Button';\r\n\r\nimport s from './ErrorMessage.module.scss';\r\n\r\ntype PropsType = {\r\n  clickHandler?: () => void;\r\n};\r\n\r\nexport const ErrorMessage: FC<PropsType> = ({\r\n  children,\r\n  clickHandler\r\n}) => {\r\n\r\n  return (\r\n    <div className={s.message}>\r\n      <p>{children}</p>\r\n      {clickHandler && (\r\n        <Button small error onClick={clickHandler}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  FC,\r\n} from 'react';\r\n\r\nimport s from './InputCheckbox.module.scss';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  labelClassName?: string;\r\n};\r\n\r\nexport const InputCheckbox: FC<PropsType> = ({\r\n  type,\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  labelClassName,\r\n  children,\r\n\r\n  ...restProps\r\n}) => {\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalLabelClassName = `${s.label} ${\r\n    labelClassName ? labelClassName : ''\r\n  }`;\r\n  const finalCheckboxClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <label className={s.checkboxWrapper}>\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={onChangeHandler}\r\n        className={finalCheckboxClassName}\r\n        {...restProps}\r\n      />\r\n\r\n      <span className={finalLabelClassName}>{children}</span>\r\n    </label>\r\n  );\r\n};\r\n","export const DEV = process.env.NODE_ENV !== 'production';\r\n","import axios from 'axios';\r\n\r\nimport { DEV } from 'src/config';\r\n\r\nexport const baseURL = DEV\r\n  ? 'http://localhost:7542/2.0/'\r\n  : 'https://neko-back.herokuapp.com/2.0/';\r\n\r\n\r\nexport const API = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n});\r\nexport const FileAPI = axios.create({\r\n  baseURL: \"https://dry-forest-56016.herokuapp.com\",\r\n});\r\n","import { API } from 'src/main/dal/api';\r\n\r\nexport const authAPI = {\r\n  login({ email, password, rememberMe }: RequestLoginDataType) {\r\n    return API.post<ResponseUserDataType>(\r\n      `auth/login`, { email, password, rememberMe }\r\n    )\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\ntype RequestLoginDataType = {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n};\r\n\r\nexport type ResponseUserDataType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n\r\n  created: Date;\r\n  updated: Date;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n\r\n  error?: string;\r\n};\r\n","import { API, FileAPI } from 'src/main/dal/api';\r\nimport { ResponseUserDataType } from 'src/pages/login/dal/loginApi';\r\n\r\nexport const logOutAPI = {\r\n  logOut() {\r\n    return API.delete(`auth/me`)\r\n      .then(response => response.data);\r\n  },\r\n};\r\nexport const isAuthAPI = {\r\n  isAuth() {\r\n    return API.post<ResponseUserDataType>(`auth/me`)\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\ntype ResponseChangeAuth = { updatedUser: ResponseUserDataType };\r\nexport const changeAuthAPI = {\r\n  changeAuth({ name, avatar }: RequestChangeUserDataType) {\r\n    return API.put<ResponseChangeAuth>(`auth/me`, { name, avatar })\r\n      .then(response => response.data);\r\n  },\r\n};\r\nexport const changeAuthImageAPI = {\r\n  changeAuthImage({ fileData }: RequestChangeAuthImageDataType) {\r\n    return FileAPI.post(`file`, fileData)\r\n      .then(response => response.data);\r\n  }\r\n};\r\n\r\ntype RequestChangeUserDataType = {\r\n  name: string;\r\n  avatar: string;\r\n};\r\ntype RequestChangeAuthImageDataType = {\r\n  fileData: FormData;\r\n};\r\n","import { API } from 'src/main/dal/api';\r\n\r\nexport const setNewPassAPI = {\r\n  setNewPass({ password, resetPasswordToken }: RequestNewPassDataType) {\r\n    return API.post(\r\n      `auth/set-new-password`, { password, resetPasswordToken }\r\n    )\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\ntype RequestNewPassDataType = {\r\n  password: string;\r\n  resetPasswordToken: string;\r\n};\r\n","import { API } from \"src/main/dal/api\";\r\n\r\nexport const createAuthAPI = {\r\n  createAuth({ email, password }: RequestLoginDataType) {\r\n    return API.post(`auth/register`, { email, password, })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\ntype RequestLoginDataType = {\r\n  email: string;\r\n  password: string;\r\n};\r\n","import { ThunkType } from 'src/main/bll/store';\r\nimport { CardsPackResponseType, packsAPI } from 'src/pages/packs/dal/PacksApi';\r\n\r\nexport enum packsActionType {\r\n  SET_LOADING = 'CARDS/PACKS/SET_LOADING',\r\n  SET_ERROR_PACKS = 'CARDS/PACKS/SET_ERROR_PACKS',\r\n  SET_PACKS = 'CARDS/PACKS/SET_PACKS',\r\n}\r\n\r\nconst initialState: StateType = {\r\n  cardPacks: [],\r\n  loading: false,\r\n  error: '',\r\n  cardPacksTotalCount: 0,\r\n  maxCardsCount: 0,\r\n  minCardsCount: 0,\r\n  page: 1,\r\n  pageCount: 100,\r\n};\r\n\r\nexport const packsReducer = (\r\n  state = initialState,\r\n  action: ActionsPacksType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case packsActionType.SET_LOADING:\r\n      return { ...state, error: '', loading: action.payload.loading };\r\n    case packsActionType.SET_ERROR_PACKS:\r\n      return {\r\n        ...state, loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case packsActionType.SET_PACKS:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nexport const setLoading = (loading: boolean) => ({\r\n  type: packsActionType.SET_LOADING,\r\n  payload: {\r\n    loading,\r\n  },\r\n} as const);\r\nexport const setCardsPacks = (payload: CardsPackResponseType) => ({\r\n  type: packsActionType.SET_PACKS,\r\n  payload\r\n} as const);\r\nexport const setErrorPacks = (error: string) => ({\r\n  type: packsActionType.SET_ERROR_PACKS,\r\n  payload: {\r\n    error,\r\n  },\r\n} as const);\r\n\r\n/** Thunks */\r\nexport const getCardsPacksTC = (\r\n  userId: string, pageCount: number, page: number\r\n): ThunkType<ActionsPacksType> =>\r\n  async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      const data = await packsAPI.getPacks(userId, pageCount, page);\r\n      dispatch(setCardsPacks(data));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\nexport const addCardsPackTC = (\r\n  name: string, privat: boolean, userId: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsPacksType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await packsAPI.addPack(name, privat);\r\n      await dispatch(getCardsPacksTC(userId, pageCount, page));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\nexport const updatedCardsPackTC = (\r\n  changedPackName: string, cardsPackId: string, userId: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsPacksType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await packsAPI.updatedPacks(changedPackName, cardsPackId);\r\n      await dispatch(getCardsPacksTC(userId, pageCount, page));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\nexport const deletedCardsPackTC = (\r\n  cardsPackId: string, userId: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsPacksType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      await packsAPI.deletePack(cardsPackId);\r\n      await dispatch(getCardsPacksTC(userId, pageCount, page));\r\n      dispatch(setLoading(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorPacks(error));\r\n    }\r\n  };\r\n\r\n/** Types */\r\nexport type StateType = {\r\n  cardPacks: CardPacksType[];\r\n  cardPacksTotalCount: number // количество колод\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number // выбранная страница\r\n  pageCount: number // количество элементов на странице\r\n  loading: boolean;\r\n  error: string;\r\n};\r\n\r\nexport type ActionsPacksType =\r\n    ReturnType<typeof setLoading>\r\n  | ReturnType<typeof setCardsPacks>\r\n  | ReturnType<typeof setErrorPacks>\r\n\r\nexport type CardPacksType = {\r\n  _id: string\r\n  user_id: string\r\n  name: string\r\n  path: string // папка\r\n  cardsCount: number\r\n  grade: number // средняя оценка карточек\r\n  shots: number // количество попыток\r\n  rating: number // лайки\r\n  type: string // ещё будет \"folder\" (папка)\r\n  created: string\r\n  updated: string\r\n  __v: number\r\n  private?: boolean\r\n}\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Preloader.module.scss';\r\n\r\ntype PropsType = {\r\n  text?: string;\r\n};\r\n\r\nexport const Preloader: FC<PropsType> = ({ text }) => {\r\n  return (\r\n    <div className={s.preloader}>\r\n      <div className={s.loader}>{text}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport s from './InfoErrorMessage.module.scss';\r\nimport { Preloader } from 'src/common/ui/Preloader';\r\nimport { ErrorMessage } from 'src/common/ui/ErrorMessage';\r\nimport { ActionsLoginType } from 'src/pages/login/bll/authReducer';\r\nimport { ActionsCardsType } from 'src/pages/cards/bll/CardsReducer';\r\nimport { ActionsPacksType } from 'src/pages/packs/bll/PacksReducer';\r\nimport { RecoveryPassActionsType } from 'src/pages/recoveryPass/bll/recoveryPassActions';\r\n\r\ntype PropsType = {\r\n  error: string;\r\n  loading: boolean;\r\n  action: ActionsCardsType\r\n      | ActionsPacksType\r\n      | ActionsLoginType\r\n      | RecoveryPassActionsType;\r\n};\r\n\r\nexport const InfoErrorMessage: FC<PropsType> = ({\r\n  error,\r\n  loading,\r\n  action\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const closeMessage = () => {\r\n    dispatch(action);\r\n  };\r\n  if (!error && !loading){\r\n    return null\r\n  }\r\n  return (\r\n    <div className={s.messageWrapper}>\r\n      {loading && <Preloader text='Sending...' />}\r\n      {error && (\r\n        <ErrorMessage clickHandler={closeMessage} >\r\n          {error}\r\n        </ErrorMessage>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, FormEvent, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport s from './LoginForm.module.scss';\r\nimport { Button } from 'src/common/ui/Button';\r\nimport { randomId } from 'src/utils/randomId';\r\nimport { HookInputType } from 'src/hooks/types';\r\nimport { InputText } from 'src/common/ui/InputText';\r\nimport { LoginLinkType } from './LoginFormContainer';\r\nimport { useInput } from 'src/hooks/ValidationFormAndrew';\r\nimport { ErrorMessage } from 'src/common/ui/ErrorMessage';\r\nimport { InputCheckbox } from 'src/common/ui/InputCheckbox';\r\nimport { setErrorLogin } from 'src/pages/login/bll/authReducer';\r\nimport { InfoErrorMessage } from 'src/common/ui/InfoErrorMessage';\r\n\r\n\r\ntype PropsType = {\r\n  loginLinks: LoginLinkType[];\r\n  sendLogin: (email: string, password: string, rememberMe: boolean) => void;\r\n  closeMessage: (error: string) => void;\r\n  loading: boolean;\r\n  error: string;\r\n  redirectLink: string;\r\n  userId: string;\r\n};\r\n\r\nexport const LoginForm: FC<PropsType> = ({\r\n  loginLinks,\r\n  sendLogin,\r\n  loading,\r\n  error,\r\n  userId,\r\n  closeMessage,\r\n  redirectLink\r\n}) => {\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const email = useInput('', { isEmail: true });\r\n  const password = useInput('', {\r\n    minLength: 8,\r\n    isPassword: true\r\n  });\r\n\r\n  if (userId) {\r\n    return <Redirect to={redirectLink} />;\r\n  }\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (email.value.trim() && password.value.trim()) {\r\n      sendLogin(email.value, password.value, rememberMe);\r\n    }\r\n  };\r\n\r\n  const closeMessageHandler = (obj?: HookInputType) => () => {\r\n    closeMessage('');\r\n    if (obj) {\r\n      obj.setDirty(false);\r\n    }\r\n  };\r\n\r\n  const disabledSubmitBtn = !email.inputValid\r\n      || !password.inputValid\r\n      || loading;\r\n\r\n  return <form className={s.form} onSubmit={submitHandler}>\r\n    <InfoErrorMessage\r\n      loading={loading}\r\n      error={error}\r\n      action={setErrorLogin('')}\r\n    />\r\n    {email.isDirty && email.inputError && (\r\n      <ErrorMessage clickHandler={closeMessageHandler(email)}>\r\n        {email.inputError}\r\n      </ErrorMessage>\r\n    )}\r\n    <InputText\r\n        placeholder={'Login'}\r\n        type={'email'}\r\n        onChange={e => email.onChange(e)}\r\n        onBlur={email.onBlur}\r\n        value={email.value}\r\n        disabled={loading}\r\n    />\r\n    {password.isDirty && password.inputError && (\r\n      <ErrorMessage clickHandler={closeMessageHandler(password)}>\r\n        {password.inputError}\r\n      </ErrorMessage>\r\n    )}\r\n    <InputText\r\n        placeholder={'Password'}\r\n        type={'password'}\r\n        onChange={e => password.onChange(e)}\r\n        onBlur={password.onBlur}\r\n        value={password.value}\r\n        disabled={loading}\r\n    />\r\n    <InputCheckbox\r\n        type={'checkbox'}\r\n        checked={rememberMe}\r\n        onChangeChecked={setRememberMe}\r\n    >\r\n      Remember me\r\n    </InputCheckbox>\r\n    <Button\r\n        type='submit'\r\n        disabled={disabledSubmitBtn}\r\n    >\r\n      Submit\r\n    </Button>\r\n    <div className={s.linksForm}>\r\n      {loginLinks.map(({ link, title }) => (\r\n        <Link\r\n            key={randomId()}\r\n            to={link}\r\n            className={s.link}\r\n        >\r\n          {title}\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  </form>;\r\n};\r\n","export const unCamelCase = (str: string): string =>\r\n  `${str.replace(/([A-Z])/g, (word, idx) =>\r\n    idx === 0 ? word.toUpperCase() : ` ${word.toLowerCase()}`,\r\n  )}`;\r\n\r\nexport const capitalizeFirstLetter = (str: string): string =>\r\n  `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\r\n\r\nexport const concatString = (str: string, char: string = ''): string =>\r\n  str.replace(/\\s/g, char);\r\n\r\nexport const transformLinkToTitle = (str: string): string =>\r\n  str.slice(1, str.length).replace(/-/g, ' ');\r\n","import { RootStateType } from 'src/main/bll/store';\r\n\r\nexport const selectLogin = ((state: RootStateType) => state.login);\r\n","import React, { FC } from 'react';\r\nimport { LoginForm } from './LoginForm';\r\nimport { PATH } from 'src/main/ui/App/Routes';\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle,\r\n} from 'src/utils/textTransform';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectLogin } from 'src/pages/login/bll/selectLogin';\r\nimport { loginPageTC, setErrorLogin } from 'src/pages/login/bll/authReducer';\r\n\r\nexport const LoginFormContainer: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { RECOVERY_PASS, REGISTRATION, PROFILE } = PATH;\r\n  const loginLinks: LoginLinkType[] = [\r\n    {\r\n      link: RECOVERY_PASS,\r\n      title: capitalizeFirstLetter(transformLinkToTitle(' Forgot password?')),\r\n    },\r\n    {\r\n      link: REGISTRATION,\r\n      title: capitalizeFirstLetter(transformLinkToTitle(' Registration')),\r\n    },\r\n  ];\r\n  const {\r\n    error,\r\n    loading,\r\n    user\r\n  } = useSelector(selectLogin)\r\n  const userId = user._id;\r\n\r\n  const sendLogin = (email: string, password: string, rememberMe: boolean) => {\r\n    dispatch(loginPageTC(email, password, rememberMe));\r\n  };\r\n  const closeMessage = (error: string) => {\r\n    dispatch(setErrorLogin(error));\r\n  };\r\n\r\n  return (\r\n      <LoginForm\r\n          loginLinks={loginLinks}\r\n          sendLogin={sendLogin}\r\n          loading={loading}\r\n          userId={userId}\r\n          error={error}\r\n          closeMessage={closeMessage}\r\n          redirectLink={PROFILE}\r\n      />\r\n  );\r\n};\r\n\r\nexport type LoginLinkType = {\r\n  link: string;\r\n  title: string;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './LoginPage.module.scss';\r\nimport { LoginFormContainer } from 'src/pages/login/ui/LoginFormContainer';\r\n\r\nexport const LoginPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Login</h2>\r\n\r\n      <LoginFormContainer />\r\n    </section>\r\n  );\r\n};\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootStateType } from 'src/main/bll/store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector;\r\n","import { ChangeEvent, useState } from 'react';\r\nimport { ReturnUseInputValueType } from './types';\r\n\r\nexport const useInputValue =\r\n  <T extends string | number | undefined>(initValue: T): ReturnUseInputValueType<T> => {\r\n    const [value, setValue] = useState<T>(initValue);\r\n\r\n    const onChangeHandler =\r\n      (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const newValue = typeof value === 'string'\r\n          ? event.currentTarget.value\r\n          : +event.currentTarget.value;\r\n        setValue(newValue as T);\r\n      };\r\n\r\n    return [value, setValue, onChangeHandler];\r\n  };\r\n","import React, { FC } from 'react';\r\nimport s from './Test.module.scss';\r\nimport { randomId } from 'src/utils/randomId';\r\nimport { ExamplesType } from 'src/pages/test/ui/TestContainer';\r\n\r\ntype PropsType = {\r\n  examples: ExamplesType;\r\n};\r\n\r\nexport const Test: FC<PropsType> = ({ examples }) => {\r\n  return (\r\n    <table className={s.table}>\r\n      <thead>\r\n        <tr>\r\n          <th>Title</th>\r\n          <th>Example</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {examples.map((item) => {\r\n          const [title, [Example, props]] = item;\r\n\r\n          return (\r\n            <tr key={randomId()}>\r\n              <td>{title}</td>\r\n              <td>\r\n                <Example {...props} />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { FC, ElementType } from 'react';\r\nimport { Test } from './Test';\r\nimport { Button } from 'src/common/ui/Button';\r\nimport { Select } from 'src/common/ui/Select';\r\nimport { Preloader } from 'src/common/ui/Preloader';\r\nimport { InputText } from 'src/common/ui/InputText';\r\nimport { unCamelCase } from 'src/utils/textTransform';\r\nimport { LinkNative } from 'src/common/ui/LinkNative';\r\nimport { InputRadio } from 'src/common/ui/InputRadio';\r\nimport { ErrorMessage } from 'src/common/ui/ErrorMessage';\r\nimport { InputCheckbox } from 'src/common/ui/InputCheckbox';\r\n\r\nconst exampleLibrary: ExampleLibraryType = {\r\n  preloader: [Preloader, { text: 'Loading' }],\r\n  errorMessage: [\r\n    ErrorMessage,\r\n    { children: 'Error message', clickHandler: () => {} },\r\n  ],\r\n  link: [LinkNative, { href: '/', children: 'Hover me' }],\r\n  button: [Button, { children: 'Click me' }],\r\n  buttonError: [Button, { children: 'Error', error: true }],\r\n  inputText: [InputText, { placeholder: 'Write here' }],\r\n  inputEmail: [InputText, { type: 'email', placeholder: 'Email' }],\r\n  inputPassword: [InputText, { type: 'password', placeholder: 'Password' }],\r\n  inputTextError: [InputText, { error: 'an error', placeholder: 'Write here' }],\r\n  inputCheckbox: [InputCheckbox, { children: 'Check me' }],\r\n  inputRadio: [\r\n    InputRadio,\r\n    {\r\n      options: ['React', 'Redux', 'Typescript'],\r\n      name: 'skills',\r\n      value: 'React',\r\n    },\r\n  ],\r\n  select: [\r\n    Select,\r\n    { options: ['React', 'Redux', 'Typescript'], value: 'Redux' },\r\n  ],\r\n};\r\n\r\nconst examples: ExamplesType = Object.entries( exampleLibrary)\r\n    .map(([title, example]) =>\r\n        [unCamelCase(title), example]);\r\n\r\nexport const TestContainer: FC = () => {\r\n  return <Test examples={examples} />;\r\n};\r\n\r\ntype ExampleType = [ElementType, Record<string, unknown>];\r\ntype ExampleLibraryType = Record<string, ExampleType>;\r\nexport type ExamplesType = [string, ExampleType][];\r\n","import React, { AnchorHTMLAttributes, DetailedHTMLProps, FC } from 'react';\r\n\r\nimport s from './LinkNative.module.scss';\r\n\r\ntype DefaultAnchorPropsType = DetailedHTMLProps<\r\n  AnchorHTMLAttributes<HTMLAnchorElement>,\r\n  HTMLAnchorElement\r\n>;\r\n\r\ntype PropsType = DefaultAnchorPropsType;\r\n\r\nexport const LinkNative: FC<PropsType> = ({\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const finalClassName = `${s.link} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <a className={finalClassName} {...restProps}>\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from 'react';\r\nimport s from './InputRadio.module.scss';\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const InputRadio: React.FC<SuperRadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  className,\r\n  onChange,\r\n  onChangeOption,\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const finalRadioClassName = `${s.radio} ${className ? className : ''}`;\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + '-' + i} className={s.radioWrapper}>\r\n          <input\r\n            type=\"radio\"\r\n            name={name}\r\n            value={o}\r\n            checked={value === o}\r\n            onChange={onChangeCallback}\r\n            className={finalRadioClassName}\r\n          />\r\n          <span className={s.label}>{o}</span>\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <>{mappedOptions}</>;\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\nimport s from './Select.module.scss';\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\nexport type SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const Select: React.FC<SuperSelectPropsType> = ({\r\n  options,\r\n  className,\r\n  onChange,\r\n  onChangeOption,\r\n\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <option key={o + '-' + i} value={o}>\r\n          {o}\r\n        </option>\r\n      ))\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const finalSelectClassName = `${s.select} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <select\r\n      onChange={onChangeCallback}\r\n      className={finalSelectClassName}\r\n      {...restProps}\r\n    >\r\n      {mappedOptions}\r\n    </select>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './TestPage.module.scss';\r\nimport { TestContainer } from 'src/pages/test/ui/TestContainer';\r\n\r\nexport const TestPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Common components:</h2>\r\n\r\n      <TestContainer />\r\n    </section>\r\n  );\r\n};\r\n","import { API } from 'src/main/dal/api';\r\nimport { CardPacksType } from 'src/pages/packs/bll/PacksReducer';\r\n\r\nexport const packsAPI = {\r\n  getPacks(user_id: string, pageCount: number, page: number) {\r\n    return API.get<CardsPackResponseType>(\r\n      `cards/pack`, { params: {  user_id, pageCount, page } }\r\n    )\r\n      .then(response => response.data);\r\n  },\r\n  addPack(name: string, privat: boolean) {\r\n    return API.post(\r\n      `cards/pack`, { cardsPack: { name, private: privat} }\r\n    )\r\n      .then(response => response.data);\r\n  },\r\n  updatedPacks(name: string, _id: string) {\r\n    return API.put(`cards/pack`, { cardsPack: { name, _id } })\r\n      .then(response => response.data);\r\n  },\r\n  deletePack(id: string) {\r\n    return API.delete(`cards/pack`, { params: {id } })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\nexport type CardsPackResponseType = {\r\n    cardPacks: CardPacksType[]\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}\r\n","import { ThunkType } from 'src/main/bll/store';\r\nimport {\r\n  cardsApi,\r\n  CardsResponseDataType,\r\n  CardsType\r\n} from 'src/pages/cards/dal/CardsApi';\r\n\r\nexport enum cardsActionType {\r\n  SET_LOADING_CARDS = 'CARDS/CARDS/SET_LOADING',\r\n  SET_ERROR_CARDS = 'CARDS/CARDS/SET_ERROR_PACKS',\r\n  SET_CARDS = 'CARDS/CARDS/SET_PACKS',\r\n}\r\n\r\nconst initialState: StateType = {\r\n  cards: [],\r\n  loading: false,\r\n  error: '',\r\n  cardsTotalCount: 0,\r\n  maxGrade: 0,\r\n  minGrade: 0,\r\n  page: 0,\r\n  pageCount: 4,\r\n  packUserId: '',\r\n};\r\n\r\nexport const cardsReducer = (\r\n  state = initialState,\r\n  action: ActionsCardsType,\r\n): StateType => {\r\n  switch (action.type) {\r\n    case cardsActionType.SET_LOADING_CARDS:\r\n      return {\r\n        ...state,\r\n        loading: action.payload.loading,\r\n      };\r\n    case cardsActionType.SET_ERROR_CARDS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case cardsActionType.SET_CARDS:\r\n      return { ...state, ...action.payload.data };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** Actions */\r\nexport const setLoadingCards = (loading: boolean) => ({\r\n  type: cardsActionType.SET_LOADING_CARDS,\r\n  payload: {\r\n    loading,\r\n  }\r\n} as const);\r\nexport const setCards = (data: CardsResponseDataType) => ({\r\n  type: cardsActionType.SET_CARDS,\r\n  payload: {\r\n    data\r\n  }\r\n} as const);\r\nexport const setErrorCards = (error: string) => ({\r\n  type: cardsActionType.SET_ERROR_CARDS,\r\n  payload: {\r\n    error,\r\n  },\r\n} as const);\r\n\r\n/** Thunks */\r\nexport const getCardsTC = (\r\n  cardsPack_id: string, pageCount?: number, page?: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      const data = await cardsApi.getCards(\r\n        { cardsPack_id, pageCount, page }\r\n      );\r\n      dispatch(setCards(data));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const addCardTC = (\r\n  cardsPack_id: string, question: string, answer: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      await cardsApi.addCard(\r\n        { cardsPack_id, question, answer }\r\n      );\r\n      await dispatch(getCardsTC(cardsPack_id, pageCount, page));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const updateCardTC = (\r\n  _id: string, question: string, answer: string,\r\n  cardsPack_id: string, pageCount: number, page: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      await cardsApi.updatedCard(\r\n        { _id, question, answer }\r\n      );\r\n      await dispatch(getCardsTC(cardsPack_id, pageCount, page));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const updateGradeCardTC = (\r\n  cardsPack_id: string, card_id: string, grade: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      await cardsApi.updatedGradeCard(\r\n        { grade, card_id }\r\n      );\r\n      await dispatch(getCardsTC(cardsPack_id));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\nexport const deleteCardTC = (\r\n  cardId: string, cardsPack_id: string,\r\n  pageCount: number, page: number\r\n): ThunkType<ActionsCardsType> =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingCards(true));\r\n      await cardsApi.deleteCard(cardId);\r\n      await dispatch(getCardsTC(cardsPack_id, pageCount, page));\r\n      dispatch(setLoadingCards(false));\r\n    } catch (e) {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n      dispatch(setErrorCards(error));\r\n    }\r\n  };\r\n\r\n/** Types */\r\nexport type StateType = {\r\n  cards: CardsType[];\r\n  cardsTotalCount: number\r\n  maxGrade: number\r\n  minGrade: number\r\n  page: number\r\n  pageCount: number\r\n  packUserId: string\r\n  loading: boolean;\r\n  error: string;\r\n};\r\n\r\nexport type ActionsCardsType =\r\n    ReturnType<typeof setLoadingCards>\r\n  | ReturnType<typeof setCards>\r\n  | ReturnType<typeof setErrorCards>\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Table.scss';\r\nimport {Button} from 'src/common/ui/Button';\r\nimport {CardPacksType} from 'src/pages/packs/bll/PacksReducer';\r\nimport {PATH} from 'src/main/ui/App/Routes';\r\n\r\nexport type ContentPacksProps = {\r\n  packs: Array<CardPacksType>\r\n  loading: boolean\r\n  page: number\r\n  pageCount: number\r\n  userId: string\r\n  updateCardsPackHandler?: (cardsPackId: string, cardsPackName: string) => void\r\n  deletedCardsPackHandler?: (cardsPackId: string) => void\r\n};\r\n\r\nexport const ContentPacks: React.FC<ContentPacksProps> = ({\r\n  packs,\r\n  loading,\r\n  page,\r\n  pageCount,\r\n  userId,\r\n  updateCardsPackHandler,\r\n  deletedCardsPackHandler\r\n}) => {\r\n  const { CARDS, TRAIN } = PATH;\r\n\r\n  return (\r\n      <div className=\"table-fifth-column\">\r\n        <div className={\"hGridContainer\"}>\r\n          {packs.length  === 0 && !loading\r\n          ? 'empty'\r\n          : packs.slice((page - 1) * pageCount, page * pageCount)\r\n             .map((el)=> {\r\n               const data = new Date(el.updated).toUTCString().substring(0, 22);\r\n               if (el.name) {\r\n                   const onDeletedCardsPackClick = () => {\r\n                       deletedCardsPackHandler\r\n                       && deletedCardsPackHandler(el._id);\r\n                }\r\n                const onUpdateCardsPackClick = () => {\r\n                       updateCardsPackHandler\r\n                       && updateCardsPackHandler(el._id, el.name);\r\n                }\r\n\r\n                return <React.Fragment key={el._id}>\r\n                  <div>{el.name}</div>\r\n                  <div>{el.cardsCount}</div>\r\n                  <div>{data}</div>\r\n                  <div />\r\n                  <div>\r\n                    <Button\r\n                        disabled={loading || userId !== el.user_id}\r\n                        onClick={onDeletedCardsPackClick}\r\n                    >\r\n                      del\r\n                    </Button>\r\n                    <Button\r\n                        disabled={loading || userId !== el.user_id}\r\n                        onClick={onUpdateCardsPackClick}\r\n                    >\r\n                      update\r\n                    </Button>\r\n                    <Link\r\n                        to={!loading ? CARDS + '/' + el._id : '#'}\r\n                        className={\"link\"}\r\n                    >\r\n                      cards\r\n                    </Link>\r\n\r\n                    {el.hasOwnProperty('cardsCount') && el.cardsCount > 0\r\n                        ? <Link\r\n                            to={!loading ? TRAIN + '/' + el._id : '#'}\r\n                            className={\"link\"}>\r\n                          train\r\n                          </Link>\r\n                        : 'train'\r\n                    } </div>\r\n                </React.Fragment>;\r\n               }\r\n             })}\r\n  </div>\r\n</div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Table.scss';\r\nimport {Button} from 'src/common/ui/Button';\r\nimport {CardsType} from 'src/pages/cards/dal/CardsApi';\r\n\r\nexport type ContentCardsProps = {\r\n  cards: Array<CardsType>\r\n  loading: boolean\r\n  page: number\r\n  pageCount: number\r\n  userId: string\r\n  deletedCardHandler?: (cardId: string) => void\r\n  updateCardHandler?: (_id: string, question: string, answer: string) => void\r\n};\r\n\r\nexport const ContentCards: React.FC<ContentCardsProps> = ({\r\n  cards,\r\n  loading,\r\n  page,\r\n  pageCount,\r\n  userId,\r\n  deletedCardHandler,\r\n  updateCardHandler\r\n}) => {\r\n\r\nreturn (\r\n      <div className=\"table-sixth-column\">\r\n        <div className={\"hGridContainer\"}>\r\n          {cards.length === 0 && !loading\r\n              ? 'empty'\r\n              : cards.slice((page - 1) * pageCount, page * pageCount)\r\n                  .map((el) => {\r\n                    const data = new Date(el.updated).toUTCString().substring(0, 22);\r\n                    {\r\n                      const onDeletedCardClick = () =>\r\n                          deletedCardHandler\r\n                          && deletedCardHandler(el._id);\r\n                      const onUpdateCardClick = () =>\r\n                          updateCardHandler\r\n                          && updateCardHandler(el._id, el.question, el.answer);\r\n\r\n                      return <React.Fragment key={el._id}>\r\n                        <div>{el.question}</div>\r\n                        <div>{el.answer}</div>\r\n                        <div>{el.grade}</div>\r\n                        <div>{data}</div>\r\n                        <div/>\r\n                        <div>\r\n                          <Button\r\n                              disabled={loading || userId !== el.user_id}\r\n                              onClick={onDeletedCardClick}>\r\n                            del\r\n                          </Button>\r\n                          <Button\r\n                              disabled={loading || userId !== el.user_id}\r\n                              onClick={onUpdateCardClick}>\r\n                            update\r\n                          </Button>\r\n                        </div>\r\n                      </React.Fragment>;\r\n                    }\r\n                  })}\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Table.scss';\r\nimport {CardPacksType} from 'src/pages/packs/bll/PacksReducer';\r\nimport {CardsType} from 'src/pages/cards/dal/CardsApi';\r\nimport {ContentPacks} from \"./ContentPacks\";\r\nimport {ContentCards} from \"./ContentCards\";\r\n\r\nexport type TableProps = {\r\n  header: Array<string | JSX.Element>\r\n  packs?: Array<CardPacksType>\r\n  cards?: Array<CardsType>\r\n  loading: boolean\r\n  page: number\r\n  pageCount: number\r\n  userId: string\r\n  updateCardsPackHandler?: (cardsPackId: string, cardsPackName: string) => void\r\n  deletedCardsPackHandler?: (cardsPackId: string) => void\r\n  deletedCardHandler?: (cardId: string) => void\r\n  updateCardHandler?: (_id: string, question: string, answer: string) => void\r\n};\r\n\r\nexport const Table: React.FC<TableProps> = ({\r\n  header,\r\n  cards,\r\n  packs,\r\n  loading,\r\n  page,\r\n  pageCount,\r\n  userId,\r\n  updateCardsPackHandler,\r\n  deletedCardsPackHandler,\r\n  deletedCardHandler,\r\n  updateCardHandler\r\n}) => {\r\n\r\n  return (<div className={\"table\"}>\r\n        <div className={header.length === 5\r\n            ? \"table-fifth-column\"\r\n            :\"table-sixth-column\"}\r\n        >\r\n          <div className={\"gridHeaderTable\"}>\r\n            {header.map((el, index) => {\r\n\r\n              return <React.Fragment key={index}>\r\n                <div>{el}</div>\r\n              </React.Fragment>;\r\n            })}\r\n          </div>\r\n        </div>\r\n        {\r\n          header.length === 5 &&\r\n        <ContentPacks\r\n            packs={packs? packs:[]}\r\n            loading={loading}\r\n            page={page}\r\n            pageCount={pageCount}\r\n            userId={userId}\r\n            updateCardsPackHandler={updateCardsPackHandler}\r\n            deletedCardsPackHandler={deletedCardsPackHandler}\r\n        />\r\n          }\r\n          {\r\n            header.length === 6 &&\r\n            <ContentCards\r\n                cards={cards ? cards:[]}\r\n                loading={loading}\r\n                page={page}\r\n                pageCount={pageCount}\r\n                userId={userId}\r\n                updateCardHandler={updateCardHandler}\r\n                deletedCardHandler={deletedCardHandler}\r\n            />\r\n          }\r\n      </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport s from './Modal.module.scss';\r\n\r\ntype PropsType = {\r\n  deactivateEditMode: () => void\r\n}\r\nexport const  Modal: FC<PropsType> = ({\r\n  deactivateEditMode,\r\n  children\r\n}) => {\r\n\r\n  return <div onClick={ deactivateEditMode} className={s.packsModal}>\r\n    <form onClick={(e) =>\r\n      e.stopPropagation()} className={s.form}>\r\n    {children}\r\n    </form>\r\n  </div>\r\n}\r\n","import React, { ChangeEvent, FC } from 'react';\r\nimport s from './Search.module.scss';\r\nimport {InputText} from \"src/common/ui/InputText\";\r\n\r\ntype PropsType = {\r\n  loading: boolean\r\n  handleSearch: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\nexport const Search: FC<PropsType> = ({\r\n  loading,\r\n  handleSearch,\r\n  children\r\n}) => {\r\n\r\n  return (\r\n    <div>\r\n      <InputText\r\n          className={s.search}\r\n          type='text'\r\n          name='search'\r\n          onChange={handleSearch}\r\n          disabled={loading}\r\n          placeholder={'Search pack'}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent } from 'react';\r\nimport s from './Paginator.module.scss';\r\n\r\nexport const Pagination = ({\r\n  totalPages,\r\n  page,\r\n  handleChangePage,\r\n  pageCount,\r\n  setPageCount\r\n}: PaginatorType) => {\r\n  let pattern = null;\r\n\r\n  switch (true) {\r\n    case totalPages < 7:\r\n      pattern = [...new Array(totalPages)].map((_, i) => i + 1);\r\n      break;\r\n    case page < 4:\r\n      pattern = [1, 2, 3, 4, 5, '...', totalPages];\r\n      break;\r\n    case page > totalPages - 4:\r\n      pattern = [1, '...', totalPages - 4, totalPages - 3,\r\n                totalPages - 2, totalPages - 1, totalPages];\r\n      break;\r\n    default:\r\n      pattern = [1, '...', page - 1, page, page + 1, '...', totalPages];\r\n  }\r\n\r\n  function changeNumber(n: number) {\r\n    if (n > 0 && n <= totalPages) {\r\n      handleChangePage(n);\r\n    }\r\n  }\r\n\r\n  const changeWidth = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (!(+e.currentTarget.value < 0)\r\n        && +e.currentTarget.value !== 0\r\n        && +e.currentTarget.value <= 25)\r\n    {\r\n      const newPageCount = parseInt(e.currentTarget.value\r\n        .replace(/\\+|\\-/ig, ''), 10);\r\n      changeNumber(Math.floor(pageCount * page / newPageCount))\r\n      setPageCount(newPageCount);\r\n    }\r\n  };\r\n  return (\r\n    <div className={s.paginatorBlock}>\r\n      <div className={s.paginator}>\r\n        <button\r\n            disabled={page <= 1}\r\n            onClick={() => changeNumber(page - 1)}\r\n        >\r\n          {'<'}\r\n        </button>\r\n        {pattern.map((label, index) => (\r\n          <button\r\n              key={index}\r\n              className={page === label\r\n                  ? s.active\r\n                  : ''\r\n              }\r\n              onClick={() => changeNumber(+label)}\r\n          >\r\n            {label}\r\n          </button>\r\n        ))}\r\n        <button\r\n            disabled={page >= totalPages}\r\n            onClick={() => changeNumber(page + 1)}\r\n        >\r\n          {'>'}\r\n        </button>\r\n      </div>\r\n      <div className={s.paginatorItems}>\r\n        <span>Items per Page: </span>\r\n        <input\r\n          className={s.inputPage}\r\n          type='number'\r\n          onChange={changeWidth}\r\n          value={pageCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype PaginatorType = {\r\n  totalPages: number\r\n  pageCount: number\r\n  page: number\r\n  handleChangePage: (n: number) => void\r\n  setPageCount: (n: number) => void\r\n}\r\n","import React, {FC, useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n    CardPacksType,\r\n    getCardsPacksTC,\r\n    setErrorPacks,\r\n} from 'src/pages/packs/bll/PacksReducer';\r\nimport {Table} from 'src/common/ui/Table';\r\nimport {Modal} from 'src/common/ui/Modals';\r\nimport {Button} from 'src/common/ui/Button';\r\nimport {Search} from 'src/common/ui/Search';\r\nimport {InputText} from 'src/common/ui/InputText';\r\nimport {Pagination} from 'src/common/ui/Paginator';\r\nimport {useInputValue} from 'src/hooks/useInputValue';\r\nimport {InputCheckbox} from 'src/common/ui/InputCheckbox';\r\nimport {InfoErrorMessage} from 'src/common/ui/InfoErrorMessage';\r\n\r\ntype PropsType = {\r\n    deletedCardsPack: (cardId: string) => void;\r\n    updatedCardsPack: (changedPackName: string, changePackNameId: string) => void;\r\n    addCardsPack: (name: string, privat: boolean) => void;\r\n    cardPacks: CardPacksType[];\r\n    loading: boolean;\r\n    error: string;\r\n    userId: string;\r\n    cardPacksTotalCount: number;\r\n    page: number;\r\n    setPage: (page: number) => void;\r\n    pageCount: number;\r\n    setPageCount: (pageCount: number) => void;\r\n};\r\n\r\nexport const Packs: FC<PropsType> = ({\r\n    deletedCardsPack,\r\n    updatedCardsPack,\r\n    addCardsPack,\r\n    cardPacks,\r\n    loading,\r\n    error,\r\n    userId: id,\r\n    cardPacksTotalCount,\r\n    page,\r\n    setPage,\r\n    pageCount,\r\n    setPageCount,\r\n}) => {\r\n\r\n    const [modalAdd, setModalAdd] = useState<boolean>(false);\r\n    const [modalDelete, setModalDelete] = useState<boolean>(false);\r\n    const [modalChange, setModalChange] = useState<boolean>(false);\r\n    const [\r\n        newPackName,\r\n        setNewPackName,\r\n        onPackNameAdd\r\n    ] = useInputValue<string>('');\r\n    const [\r\n        changePackName,\r\n        setChangePackName,\r\n        onPackNameChange\r\n    ] = useInputValue<string>('');\r\n    const [privatPack, setPrivatPack] = useState<boolean>(false);\r\n    const [myPacks, setMyPacks] = useState<boolean>(false);\r\n    const userId = myPacks ? id : '';\r\n    const [PackNameId, setPackNameId] = useState<string>('');\r\n    const [letter, , handleSearch] = useInputValue<string>('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsPacksTC(\r\n            userId,\r\n            cardPacksTotalCount\r\n                ? cardPacksTotalCount + 5\r\n                : 2000000,\r\n            page\r\n        ));\r\n    }, [dispatch]);\r\n\r\n    const addCardsPackHandler = () => {\r\n        setModalAdd(true);\r\n    };\r\n    const addCardsPackSubmit = (\r\n        newPackName: string, privat: boolean) => {\r\n        if (newPackName.trim()) {\r\n            addCardsPack(newPackName, privat);\r\n            setModalAdd(false);\r\n            setNewPackName('');\r\n            setPrivatPack(false);\r\n            setPage(1)\r\n        }\r\n    };\r\n    const updateCardsPackHandler = (\r\n        cardsPackId: string,\r\n        cardsPackName: string\r\n    ) => {\r\n        setChangePackName(cardsPackName);\r\n        setPackNameId(cardsPackId);\r\n        setModalChange(true);\r\n    };\r\n    const changeCardsPackSubmit = (\r\n        changedPackName: string,\r\n        PackNameId: string\r\n    ) => {\r\n        if (changedPackName.trim()) {\r\n            updatedCardsPack(changedPackName, PackNameId);\r\n            setModalChange(false);\r\n            setChangePackName('');\r\n        }\r\n    };\r\n    const deletedCardsPackHandler = (cardsPackId: string) => {\r\n        setPackNameId(cardsPackId);\r\n        setModalDelete(true);\r\n    };\r\n    const deletedCardsPackSubmit = () => {\r\n        deletedCardsPack(PackNameId);\r\n        setModalDelete(false);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setModalAdd(false);\r\n        setModalChange(false);\r\n        setModalDelete(false);\r\n    };\r\n    const handleChangePage = (page: number) => {\r\n        setPage(page);\r\n    };\r\n    const handleMyPacks = () => {\r\n        myPacks ? setMyPacks(false) : setMyPacks(true);\r\n        setPage(1);\r\n    };\r\n    const searchCardsPacks = myPacks\r\n        ? cardPacks.filter(p => p.user_id === id).filter(p => {\r\n            return p.name.includes(letter)\r\n        })\r\n        : cardPacks.filter(p => {\r\n            return p.name.includes(letter);\r\n        });\r\n    const totalPages = Math.ceil(searchCardsPacks.length / pageCount);\r\n    const buttonAddForHeader =\r\n        <Button\r\n            disabled={loading}\r\n            onClick={addCardsPackHandler}\r\n        >\r\n            add\r\n        </Button>;\r\n    const headersName = [\r\n        'Name',\r\n        'CardsCount',\r\n        'Updated',\r\n        'Url',\r\n        buttonAddForHeader\r\n    ];\r\n\r\n    const showModalChangePack = () => {\r\n        if (modalChange) {\r\n            const btnChangedCardsP = () =>\r\n                changeCardsPackSubmit(changePackName, PackNameId);\r\n\r\n            return (\r\n                <Modal deactivateEditMode={deactivateEditMode}>\r\n                    <InputText\r\n                        placeholder={'Name pack'}\r\n                        onChange={onPackNameChange}\r\n                        value={changePackName}\r\n                    />\r\n                    <Button\r\n                        disabled={loading}\r\n                        onClick={btnChangedCardsP}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Modal>\r\n            )\r\n        }\r\n    }\r\n    const showModalAddPack = () => {\r\n        if (modalAdd) {\r\n            const btnAddCardsP = () =>\r\n                addCardsPackSubmit(newPackName, privatPack);\r\n\r\n            return (\r\n                <Modal deactivateEditMode={deactivateEditMode}>\r\n                    <InputText\r\n                        placeholder={'Name pack'}\r\n                        onChange={onPackNameAdd}\r\n                        value={newPackName}\r\n                    />\r\n                    <InputCheckbox\r\n                        type={'checkbox'}\r\n                        checked={privatPack}\r\n                        onChangeChecked={setPrivatPack}\r\n                    >\r\n                        Private\r\n                    </InputCheckbox>\r\n                    <Button\r\n                        onClick={btnAddCardsP}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Modal>\r\n            )\r\n        }\r\n    };\r\n    const showModalDeletePack = () => {\r\n        if (modalDelete) {\r\n            return (\r\n                <Modal deactivateEditMode={deactivateEditMode}>\r\n                    <Button onClick={deletedCardsPackSubmit}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button onClick={deactivateEditMode}>\r\n                        No\r\n                    </Button>\r\n                </Modal>\r\n            )\r\n        }\r\n    };\r\n\r\n    return <div>\r\n        <InfoErrorMessage\r\n            loading={loading}\r\n            error={error}\r\n            action={setErrorPacks('')}\r\n        />\r\n        {showModalAddPack()}\r\n        {showModalDeletePack()}\r\n        {showModalChangePack()}\r\n        <div>\r\n            <InputCheckbox\r\n                type={'checkbox'}\r\n                checked={myPacks}\r\n                onChangeChecked={handleMyPacks}\r\n                disabled={loading}\r\n            >\r\n                My packs\r\n            </InputCheckbox>\r\n        </div>\r\n        <div className=\"table-fifth-column\">\r\n            <Search\r\n                loading={loading}\r\n                handleSearch={handleSearch}\r\n            />\r\n            <Table\r\n                header={headersName}\r\n                userId={id}\r\n                loading={loading}\r\n                pageCount={pageCount}\r\n                page={page}\r\n                packs={searchCardsPacks}\r\n                updateCardsPackHandler={updateCardsPackHandler}\r\n                deletedCardsPackHandler={deletedCardsPackHandler}\r\n            />\r\n        </div>\r\n        <Pagination\r\n            totalPages={totalPages}\r\n            handleChangePage={handleChangePage}\r\n            page={page}\r\n            setPageCount={setPageCount}\r\n            pageCount={pageCount}\r\n        />\r\n    </div>;\r\n};\r\n","import { RootStateType } from 'src/main/bll/store';\r\n\r\nexport const selectPacks = ((state: RootStateType) => state.packs);\r\n","import React, {FC, useState} from 'react';\r\nimport {Packs} from './Packs';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    addCardsPackTC,\r\n    deletedCardsPackTC,\r\n    updatedCardsPackTC,\r\n} from 'src/pages/packs/bll/PacksReducer';\r\nimport {selectPacks} from 'src/pages/packs/bll/selectPacks';\r\nimport {useTypedSelector} from 'src/hooks/useTypedSelector';\r\n\r\nexport const PacksContainer: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [page, setPage] = useState<number>(1);\r\n    const [pageCount, setPageCount] = useState<number>(4);\r\n\r\n    const {\r\n        error,\r\n        cardPacks,\r\n        loading,\r\n        cardPacksTotalCount\r\n    } = useSelector(selectPacks)\r\n    const {user: {_id: userId}} = useTypedSelector(\r\n        (state) => state.login\r\n    );\r\n\r\n    const deletedCardsPack = (cardsPackId: string) => {\r\n        dispatch(deletedCardsPackTC(\r\n            cardsPackId, \"\", cardPacksTotalCount, page\r\n        ));\r\n    };\r\n    const updatedCardsPack = (changedPackName: string, cardsPackId: string) => {\r\n        dispatch(updatedCardsPackTC(\r\n            changedPackName, cardsPackId, '', cardPacksTotalCount, page\r\n        ));\r\n    };\r\n    const addCardsPack = (name: string, privat: boolean) => {\r\n        dispatch(addCardsPackTC(\r\n            name, privat, '', cardPacksTotalCount, page\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <Packs\r\n            userId={userId}\r\n            deletedCardsPack={deletedCardsPack}\r\n            updatedCardsPack={updatedCardsPack}\r\n            addCardsPack={addCardsPack}\r\n            cardPacks={cardPacks}\r\n            loading={loading}\r\n            error={error}\r\n            cardPacksTotalCount={cardPacksTotalCount}\r\n            page={page}\r\n            setPage={setPage}\r\n            pageCount={pageCount}\r\n            setPageCount={setPageCount}\r\n        />\r\n    )\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Packs.module.scss';\r\nimport { PacksContainer } from 'src/pages/packs/ui/Packs/PacksContainer';\r\n\r\nexport const PacksPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Card packs</h2>\r\n\r\n      <PacksContainer />\r\n    </section>\r\n  );\r\n};\r\n","import {API} from \"src/main/dal/api\";\r\n\r\nexport const cardsApi = {\r\n    getCards({cardsPack_id, pageCount, page}: CardsRequestDataType) {\r\n        return API.get<CardsResponseDataType>(\r\n            `cards/card`, {params: {cardsPack_id, pageCount, page}})\r\n            .then(response => response.data);\r\n    },\r\n    addCard({cardsPack_id, question, answer}: CardAddRequestDataType) {\r\n        return API.post(\r\n            `cards/card`, {card: {cardsPack_id, question, answer}})\r\n            .then(response => response.data);\r\n    },\r\n    updatedCard({_id, question, answer}: CardRequestUpdateDataType) {\r\n        return API.put(`cards/card`, {card: {_id, question, answer}})\r\n            .then(response => response.data);\r\n    },\r\n    updatedGradeCard({grade, card_id}: GradeCardRequestUpdateDataType) {\r\n        return API.put<GradeCardResponseUpdateDataType>(\r\n            `cards/grade`, {grade, card_id})\r\n            .then(response => response.data);\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return API.delete(`cards/card`, {params: {id: cardId}})\r\n            .then(response => response.data);\r\n    },\r\n};\r\nexport type GradeCardRequestUpdateDataType = {\r\n    card_id: string\r\n    grade: number\r\n}\r\nexport type GradeCardResponseUpdateDataType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}\r\nexport type CardRequestUpdateDataType = {\r\n    _id: string\r\n    question?: string\r\n    answer?: string\r\n    comments?: string\r\n}\r\ntype CardsRequestDataType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: number\r\n    page?: number\r\n    pageCount?: number\r\n}\r\n\r\nexport type CardsResponseDataType = {\r\n    cards: CardsType[];\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type CardsType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\nexport type CardAddRequestDataType = {\r\n    cardsPack_id: string\r\n    question: string\r\n    answer: string\r\n    grade?: 0 // 0..5, не обязателен\r\n    shots?: 0 // не обязателен\r\n    rating?: 0 // не обязателен\r\n    answerImg?: string\r\n    questionImg?: string\r\n    questionVideo?: string\r\n    answerVideo?: string\r\n    type?: string\r\n}\r\n","import { InferActionsType } from \"src/main/bll/store\";\r\n\r\nexport enum RecoveryPassActionType {\r\n  SET_LOADING = 'CARDS/RECOVERY_PASS/SET_LOADING',\r\n  SET_SUCCESS = 'CARDS/RECOVERY_PASS/SET_SUCCESS',\r\n  SET_ERROR = 'CARDS/RECOVERY_PASS/SET_ERROR',\r\n}\r\n\r\nexport const recoveryPassActions = {\r\n  setLoading: (loading: boolean) =>\r\n    ({\r\n      type: RecoveryPassActionType.SET_LOADING,\r\n      payload: {\r\n        loading,\r\n      },\r\n    } as const),\r\n  setSuccess: (success: boolean) =>\r\n    ({\r\n      type: RecoveryPassActionType.SET_SUCCESS,\r\n      payload: {\r\n        success,\r\n      },\r\n    } as const),\r\n  setError: (error: string) =>\r\n    ({\r\n      type: RecoveryPassActionType.SET_ERROR,\r\n      payload: {\r\n        error,\r\n      },\r\n    } as const),\r\n};\r\n\r\nexport type RecoveryPassActionsType = InferActionsType<\r\n  typeof recoveryPassActions\r\n>;\r\n","import React, { useEffect, useState } from 'react';\r\nimport s from './Train.module.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CardsType } from 'src/pages/cards/dal/CardsApi';\r\nimport {\r\n  getCardsTC,\r\n  setErrorCards,\r\n  updateGradeCardTC,\r\n} from 'src/pages/cards/bll/CardsReducer';\r\nimport { Button } from 'src/common/ui/Button';\r\nimport { useTypedSelector } from 'src/hooks/useTypedSelector';\r\nimport { InfoErrorMessage } from 'src/common/ui/InfoErrorMessage';\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: CardsType[]) => {\r\n  const sum = cards.reduce((acc, card) =>\r\n    acc + (6 - card.grade) * (6 - card.grade), 0);\r\n  const rand = Math.random() * sum;\r\n  const res = cards.reduce(\r\n    (acc: { sum: number, id: number }, card, i) => {\r\n      const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n      return { sum: newSum, id: newSum < rand ? i : acc.id };\r\n    }\r\n    , { sum: 0, id: -1 });\r\n  return cards[res.id + 1];\r\n};\r\n\r\nexport const Train = () => {\r\n\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n  const [first, setFirst] = useState<boolean>(true);\r\n  const [estimate, setEstimate] = useState<number>(-1);\r\n  const { cards } = useTypedSelector(state => state.cards);\r\n  const error = useTypedSelector<string>(state=> state.cards.error);\r\n\r\n  const [card, setCard] = useState<CardsType>({\r\n    _id: 'fake',\r\n    cardsPack_id: '',\r\n    user_id: '',\r\n    answer: 'answer fake',\r\n    question: 'question fake',\r\n    grade: 0,\r\n    shots: 0,\r\n    type: '',\r\n    rating: 0,\r\n    __v: 0,\r\n    created: '',\r\n    updated: '',\r\n  });\r\n\r\n  const loading = useTypedSelector<boolean>(state => state.cards.loading);\r\n  const { cardsPack_id } = useParams<{ cardsPack_id: string }>();\r\n  const dispatch: Function = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (first) {\r\n      dispatch(getCardsTC(cardsPack_id));\r\n      setFirst(false);\r\n    }\r\n    if (cards.length > 0) setCard(getCard(cards));\r\n    return () => {\r\n    };\r\n  }, [dispatch, cardsPack_id, cards, first]);\r\n\r\n  const setEstimateHandler = (value: number) => {\r\n    setEstimate(value);\r\n  };\r\n  const onNext = () => {\r\n    setIsChecked(false);\r\n\r\n    if (cards.length > 0) {\r\n      dispatch(updateGradeCardTC(\r\n        card.cardsPack_id,\r\n        card._id,\r\n        estimate + 1)\r\n      );\r\n      setCard(getCard(cards));\r\n      setEstimate(-1);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <InfoErrorMessage\r\n        loading={loading}\r\n        error={error}\r\n        action={setErrorCards('')}\r\n      />\r\n      <div className={s.trainBlock}>\r\n        <div>{card.question}</div>\r\n        <div>\r\n          <Button onClick={() => setIsChecked(true)}>\r\n            check\r\n          </Button>\r\n        </div>\r\n\r\n        {isChecked && (\r\n          <>\r\n            <div>{card.answer}</div>\r\n            <div className={s.grade}>\r\n              {grades.map((g, value) => (\r\n                <Button\r\n                  className={estimate === value ? s.active : ''}\r\n                  key={'grade-' + value}\r\n                  onClick={() => {setEstimateHandler(value)}}>\r\n                  {g}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <Button onClick={onNext}>next</Button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Train } from './Train/Train';\r\n\r\nimport s from './TrainPage.module.scss';\r\n\r\nexport const TrainPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Train</h2>\r\n\r\n      <Train />\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Range, createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { RangeProps } from 'rc-slider/lib/Range';\n\ntype DoubleRangePropsType = {\n  onChangeRange?: (value: [number, number]) => void\n  value?: [number, number]\n  min: number\n  max: number\n  step: number\n} & RangeProps\n\nconst RangeWithTooltip = createSliderWithTooltip(Range);\n\nexport const DoubleRange: React.FC<DoubleRangePropsType> = (\n  {\n    onChangeRange,\n    value,\n    min,\n    max,\n    step,\n    draggableTrack = true,\n    ...restProps\n  }\n) => {\n\n  return (\n    <>\n      <RangeWithTooltip onChange={([val1, val2]) => {\n        onChangeRange && onChangeRange([val1, val2])\n      }}\n                        value={value}\n                        min={min}\n                        max={max}\n                        step={step}\n                        draggableTrack={draggableTrack}\n                        {...restProps}\n      />\n    </>\n  );\n}","import React, {FC, useState} from 'react';\r\nimport {Table} from 'src/common/ui/Table';\r\nimport {Button} from 'src/common/ui/Button';\r\nimport {Modal} from 'src/common/ui/Modals';\r\nimport {InputText} from 'src/common/ui/InputText';\r\nimport {Pagination} from 'src/common/ui/Paginator';\r\nimport {useInputValue} from 'src/hooks/useInputValue';\r\nimport {DoubleRange} from 'src/common/ui/DoubleRange';\r\nimport {CardsType} from 'src/pages/cards/dal/CardsApi';\r\nimport {setErrorCards} from 'src/pages/cards/bll/CardsReducer';\r\nimport {InfoErrorMessage} from 'src/common/ui/InfoErrorMessage';\r\n\r\ntype PropsType = {\r\n    addCard: (cardsPack_id: string, question: string, answer: string) => void;\r\n    updatedCard: (_id: string, question: string, answer: string) => void;\r\n    deleteCard: (CardId: string) => void;\r\n    loading: boolean;\r\n    error: string;\r\n    cardsPack_id: string;\r\n    cards: CardsType[];\r\n    page: number;\r\n    setPage: (page: number) => void;\r\n    pageCount: number;\r\n    setPageCount: (page: number) => void;\r\n    userId: string;\r\n};\r\n\r\nexport const Cards: FC<PropsType> = ({\r\n    loading,\r\n    error,\r\n    cards,\r\n    addCard,\r\n    updatedCard,\r\n    cardsPack_id,\r\n    deleteCard,\r\n    page,\r\n    setPage,\r\n    pageCount,\r\n    setPageCount,\r\n    userId,\r\n}) => {\r\n    const [modalAdd, setModalAdd] = useState<boolean>(false);\r\n    const [modalDelete, setModalDelete] = useState<boolean>(false);\r\n    const [\r\n        cardQuestion,\r\n        setCardQuestion,\r\n        onCardQuestion\r\n    ] = useInputValue<string>('');\r\n    const [\r\n        cardAnswer,\r\n        setCardAnswer,\r\n        onCardAnswerAdd\r\n    ] = useInputValue<string>('');\r\n    const [changeCard, setChangeCard] = useState<string>('');\r\n    const [cardNameId, setCardNameId] = useState<string>('');\r\n    const [value1, setValue1] = useState(0);\r\n    const [value2, setValue2] = useState(5);\r\n\r\n    const addCardHandler = () => {\r\n        setModalAdd(true);\r\n    };\r\n    const addCardSubmit = () => {\r\n        if (cardQuestion.trim()) {\r\n            addCard(cardsPack_id, cardQuestion, cardAnswer);\r\n            setModalAdd(false);\r\n            setCardQuestion('');\r\n            setCardAnswer('');\r\n            setPage(1);\r\n        }\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setModalAdd(false);\r\n        setModalDelete(false);\r\n        setChangeCard('');\r\n        setCardQuestion('');\r\n        setCardAnswer('');\r\n    };\r\n    const deletedCardHandler = (cardId: string) => {\r\n        setCardNameId(cardId);\r\n        setModalDelete(true);\r\n    };\r\n    const deletedCardsPackSubmit = () => {\r\n        deleteCard(cardNameId);\r\n        setModalDelete(false);\r\n    };\r\n    const updateCardHandler = (\r\n        id: string,\r\n        cardQuestion: string,\r\n        cardAnswer: string,\r\n    ) => {\r\n        setChangeCard(id);\r\n        setCardQuestion(cardQuestion);\r\n        setCardAnswer(cardAnswer);\r\n    };\r\n    const changeCardPackSubmit = () => {\r\n        if (cardQuestion.trim()) {\r\n            updatedCard(changeCard, cardQuestion, cardAnswer);\r\n            setChangeCard('');\r\n            setCardQuestion('');\r\n            setCardAnswer('');\r\n        }\r\n    };\r\n    const handleChangePage = (page: number) => {\r\n        setPage(page);\r\n    };\r\n    const onChangeRange = (value: number[]) => {\r\n        setValue1(value[0]);\r\n        setValue2(value[1]);\r\n    };\r\n    const searchCardsGrade = cards.filter(p => (\r\n            p.grade >= value1 && p.grade <= value2\r\n        ),\r\n    );\r\n    const totalPages = Math.ceil(searchCardsGrade.length / pageCount);\r\n    const buttonAddForHeader =\r\n        <Button\r\n        disabled={\r\n            loading\r\n            || cards.length > 0\r\n            && userId !== cards[0]?.user_id\r\n        }\r\n        onClick={addCardHandler}\r\n    >\r\n        add\r\n    </Button>;\r\n    const showModalAddCard = () => {\r\n        if (modalAdd) {\r\n\r\n            return (\r\n                <Modal deactivateEditMode={deactivateEditMode}>\r\n                    <InputText\r\n                        placeholder={'Question'}\r\n                        onChange={onCardQuestion}\r\n                        value={cardQuestion}\r\n                    />\r\n                    <InputText\r\n                        placeholder={'Answer'}\r\n                        onChange={onCardAnswerAdd}\r\n                        value={cardAnswer}\r\n                    />\r\n                    <Button\r\n                        disabled={loading}\r\n                        onClick={addCardSubmit}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Modal>)\r\n        }\r\n    };\r\n    const showModalDeleteCard = () => {\r\n        if (modalDelete) {\r\n\r\n            return (\r\n                <Modal deactivateEditMode={deactivateEditMode}>\r\n                    <Button onClick={deletedCardsPackSubmit}>Yes</Button>\r\n                    <Button onClick={deactivateEditMode}>No</Button>\r\n                </Modal>)\r\n        }\r\n    };\r\n    const showModalChangeCard = () => {\r\n        if (changeCard) {\r\n\r\n            return (\r\n                <Modal deactivateEditMode={deactivateEditMode}>\r\n                    <InputText\r\n                        placeholder={'Question card'}\r\n                        onChange={onCardQuestion}\r\n                        value={cardQuestion}\r\n                    />\r\n                    <InputText\r\n                        placeholder={'Answer card'}\r\n                        onChange={onCardAnswerAdd}\r\n                        value={cardAnswer}\r\n                    />\r\n                    <Button\r\n                        disabled={loading}\r\n                        onClick={changeCardPackSubmit}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Modal>)\r\n        }\r\n    };\r\n    const headersName = [\r\n        'Question',\r\n        'Answer',\r\n        'Grade',\r\n        'Updated',\r\n        'Url',\r\n        buttonAddForHeader\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <InfoErrorMessage\r\n                loading={loading}\r\n                error={error}\r\n                action={setErrorCards('')}\r\n            />\r\n            <div>\r\n                <DoubleRange\r\n                    onChangeRange={onChangeRange}\r\n                    value={[value1, value2]}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.1}\r\n                />\r\n            </div>\r\n            {showModalAddCard()}\r\n            {showModalDeleteCard()}\r\n            {showModalChangeCard()}\r\n            <Table\r\n                header={headersName}\r\n                userId={userId}\r\n                loading={loading}\r\n                pageCount={pageCount}\r\n                page={page}\r\n                cards={searchCardsGrade}\r\n                updateCardHandler={updateCardHandler}\r\n                deletedCardHandler={deletedCardHandler}\r\n            />\r\n            <Pagination\r\n                totalPages={totalPages}\r\n                handleChangePage={handleChangePage}\r\n                page={page}\r\n                setPageCount={setPageCount}\r\n                pageCount={pageCount}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import { RootStateType } from \"src/main/bll/store\";\r\n\r\nexport const selectCards = ((state: RootStateType) => state.cards);\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Cards } from './Cards';\r\nimport { useTypedSelector } from 'src/hooks/useTypedSelector';\r\nimport {\r\n  addCardTC,\r\n  deleteCardTC,\r\n  getCardsTC,\r\n  updateCardTC,\r\n} from 'src/pages/cards/bll/CardsReducer';\r\nimport { selectCards } from 'src/pages/cards/bll/selectCards';\r\n\r\nexport const CardsContainer: FC = () => {\r\n  const {error, cards, cardsTotalCount, loading} = useSelector(selectCards)\r\n  const userId = useTypedSelector<string>((state) =>\r\n    state.login.user._id);\r\n\r\n  const pageCountInitialState =\r\n    (cards.length < 4 && cards.length > 0)\r\n    ? cards.length\r\n    : 4;\r\n\r\n  const { cardsPack_id } = useParams<{ cardsPack_id: string }>();\r\n  const [pageCount, setPageCount] = useState<number>(pageCountInitialState);\r\n  const [page, setPage] = useState<number>(1);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (cards.length < 4 && cards.length > 0)\r\n      setPageCount(cards.length);\r\n  }, [cards]);\r\n  useEffect(() => {\r\n    if (cardsPack_id) {\r\n      dispatch(getCardsTC(cardsPack_id,\r\n        cardsTotalCount > 0\r\n          ? cardsTotalCount + 5\r\n          : 2000000,\r\n          page\r\n      ));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const addCard = (cardsPack_id: string, question: string, answer: string) => {\r\n    dispatch(addCardTC(\r\n      cardsPack_id,\r\n      question,\r\n      answer,\r\n      cardsTotalCount + 1,\r\n      page\r\n    ));\r\n  };\r\n  const updatedCard = (_id: string, question: string, answer: string) => {\r\n    dispatch(updateCardTC(\r\n      _id,\r\n      question,\r\n      answer,\r\n      cardsPack_id,\r\n      cardsTotalCount,\r\n      page\r\n    ));\r\n  };\r\n  const deleteCard = (cardId: string) => {\r\n    dispatch(deleteCardTC(\r\n      cardId,\r\n      cardsPack_id,\r\n      cardsTotalCount,\r\n      page\r\n    ));\r\n  };\r\n\r\n  return (\r\n      <Cards\r\n          loading={loading}\r\n          cards={cards}\r\n          error={error}\r\n          cardsPack_id={cardsPack_id}\r\n          addCard={addCard}\r\n          updatedCard={updatedCard}\r\n          deleteCard={deleteCard}\r\n          page={page}\r\n          setPage={setPage}\r\n          pageCount={pageCount}\r\n          setPageCount={setPageCount}\r\n          userId={userId}\r\n      />\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Cards.module.scss';\r\nimport { CardsContainer } from \"./CardsContainer\";\r\n\r\nexport const CardsPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Cards</h2>\r\n\r\n      <CardsContainer />\r\n    </section>\r\n  );\r\n};\r\n","import React, { ChangeEvent, MouseEvent, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from 'src/hooks';\r\nimport { Button } from 'src/common/ui/Button/Button';\r\nimport { changeAuthImageTC } from 'src/pages/login/bll/authReducer';\r\n\r\nexport const InputFile: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const name = useTypedSelector<string>((state) =>\r\n    state.login.user.name);\r\n  const inRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [fileURL, setFileURL] = useState<string>();\r\n  const [fileData, setFileData] = useState<FormData>();\r\n\r\n  useEffect(() => {\r\n    if(fileData){\r\n      dispatch(changeAuthImageTC( fileData, name, fileURL||''));\r\n    }\r\n  }, [dispatch, fileData, fileURL, name]);\r\n\r\n  const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const reader = new FileReader();\r\n    const formData = new FormData(); // for send to back\r\n    const newFile = e.target.files && e.target.files[0];\r\n\r\n    if (newFile) {\r\n      setFileURL(window.URL.createObjectURL(newFile));\r\n      formData.append('myFile', newFile, newFile.name);\r\n      setFileData(formData);\r\n      reader.readAsDataURL(newFile);\r\n    }\r\n  };\r\n\r\n  const addImg = (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    inRef && inRef.current && inRef.current.click();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        accept='.jpg, .jpeg, .png'\r\n        ref={inRef}\r\n        type={'file'}\r\n        style={{ display: 'none' }}\r\n        onChange={upload}\r\n      />\r\n      <Button\r\n          onClick={addImg}\r\n      >\r\n        Change image\r\n      </Button>\r\n      <hr style={{ width: '100%' }} />\r\n    </div>\r\n  );\r\n};\r\n","import React, {FC, FormEvent, useState} from 'react';\r\nimport s from './ProfileForm.module.scss';\r\nimport {Button} from 'src/common/ui/Button';\r\nimport {InputText} from 'src/common/ui/InputText';\r\nimport {InputFile} from 'src/common/ui/InputFile';\r\nimport {useInputValue} from 'src/hooks/useInputValue';\r\nimport {InfoErrorMessage} from 'src/common/ui/InfoErrorMessage';\r\nimport {setErrorLogin, UserType} from 'src/pages/login/bll/authReducer';\r\n\r\ntype PropsType = {\r\n    loading: boolean;\r\n    sendLogOut: () => void;\r\n    changeAuth: (name: string, avatar: string) => void;\r\n    error: string;\r\n    user: UserType;\r\n};\r\n\r\nexport const ProfileForm: FC<PropsType> = ({\r\n    loading,\r\n    sendLogOut,\r\n    error,\r\n    user,\r\n    changeAuth,\r\n}) => {\r\n    let [editModeName, setEditModeName] = useState(false);\r\n    let [editModeAvatar, setEditModeAvatar] = useState(false);\r\n    let [name, , onNameChange] = useInputValue(user.name);\r\n    let [avatar, , onAvatarChange] = useInputValue(user.avatar);\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        sendLogOut();\r\n    };\r\n    const activateEditMode = (value: string) => () => {\r\n        if (value === 'name') {\r\n            setEditModeName(true);\r\n        } else {\r\n            setEditModeAvatar(true);\r\n        }\r\n    };\r\n    const deactivateEditMode = () => () => {\r\n        setEditModeName(false);\r\n        setEditModeAvatar(false);\r\n        changeAuth(name, avatar !== undefined ? avatar : '');\r\n    };\r\n\r\n    const renderAvatar = () => {\r\n        if (!editModeAvatar) {\r\n            return (\r\n                <div className={s.avatar}>\r\n                    <div>{'avatar url: '}</div>\r\n                    <div onDoubleClick={activateEditMode('avatar')}>\r\n                        {user.avatar}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <InputText\r\n                    autoFocus={true}\r\n                    onChange={onAvatarChange}\r\n                    onBlur={deactivateEditMode()}\r\n                    value={avatar}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderInputName = () => {\r\n        if (!editModeName) {\r\n            return (\r\n                <div>\r\n                    {'name: '}\r\n                    <span\r\n                        onDoubleClick={activateEditMode('name')}\r\n                    >\r\n                        {user.name || ''}\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <InputText\r\n                    autoFocus={true}\r\n                    onChange={onNameChange}\r\n                    onBlur={deactivateEditMode()}\r\n                    value={name}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <form className={s.form} onSubmit={submitHandler}>\r\n        <InfoErrorMessage\r\n            loading={loading}\r\n            error={error}\r\n            action={setErrorLogin('')}\r\n        />\r\n        <div className={s.img}>\r\n            <img src={user.avatar} alt={''}/>\r\n            <InputFile/>\r\n        </div>\r\n        <div>\r\n            {renderAvatar()}\r\n            {renderInputName()}\r\n        </div>\r\n        <Button type='submit' disabled={loading}>\r\n            LogOut\r\n        </Button>\r\n    </form>\r\n};\r\n","import React, {FC} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {selectLogin} from 'src/pages/login/bll/selectLogin';\r\nimport {changeAuthTC, logoutTC} from 'src/pages/login/bll/authReducer';\r\nimport {ProfileForm} from 'src/pages/profile/ui/ProfileFormContainer/ProfileForm';\r\n\r\nexport const ProfileFormContainer: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        error,\r\n        loading,\r\n        user\r\n    } = useSelector(selectLogin)\r\n\r\n    const changeAuth = (name: string, avatar: string) => {\r\n        dispatch(changeAuthTC(name, avatar));\r\n    };\r\n    const sendLogOut = () => {\r\n        dispatch(logoutTC());\r\n    };\r\n\r\n    return (\r\n        <ProfileForm\r\n            loading={loading}\r\n            sendLogOut={sendLogOut}\r\n            changeAuth={changeAuth}\r\n            error={error}\r\n            user={user}\r\n        />\r\n    );\r\n};\r\n","import React, { FC } from 'react';\r\nimport s from './ProfilePage.module.scss';\r\nimport { ProfileFormContainer } from 'src/pages/profile/ui/ProfileFormContainer';\r\n\r\nexport const ProfilePage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Profile</h2>\r\n\r\n      <ProfileFormContainer/>\r\n    </section>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { useTypedSelector } from 'src/hooks';\r\nimport { PATH } from 'src/main/ui/App/Routes';\r\nimport { TestPage } from 'src/pages/test/ui/TestPage';\r\nimport { PacksPage } from 'src/pages/packs/ui/PacksPage';\r\nimport { TrainPage } from 'src/pages/learn/ui/TrainPage';\r\nimport { CardsPage } from 'src/pages/cards/ui/CardsPage';\r\nimport { ProfilePage } from 'src/pages/profile/ui/ProfilePage';\r\n\r\nexport const NotAuthWithRedirect = () => {\r\n  const userId = useTypedSelector<string>(state => state.login.user._id);\r\n\r\n  if (!userId)\r\n    return <Redirect to={PATH.LOGIN} />;\r\n\r\n  return <Switch>\r\n    <Route path={PATH.PROFILE} render={() => <ProfilePage />} />\r\n    <Route path={PATH.PACKS} render={() => <PacksPage />} />\r\n    <Route path={PATH.TRAIN + '/:cardsPack_id'}\r\n           render={() => <TrainPage />} />\r\n    <Route path={PATH.CARDS + '/:cardsPack_id'}\r\n           render={() => <CardsPage />} />\r\n    <Route path={PATH.TEST} render={() => <TestPage />} />\r\n    <Redirect from='*' to={PATH.ERROR_404} />\r\n  </Switch>;\r\n};\r\n","import React, {FC, FormEvent} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport s from './SetPassForm.module.scss';\r\nimport {Button} from 'src/common/ui/Button';\r\nimport {HookInputType} from 'src/hooks/types';\r\nimport {InputText} from 'src/common/ui/InputText';\r\nimport {ErrorMessage} from 'src/common/ui/ErrorMessage';\r\nimport {useInput} from 'src/hooks/ValidationFormAndrew';\r\nimport {LoginLinkType} from 'src/pages/login/ui/LoginFormContainer';\r\n\r\ntype PropsType = {\r\n    loginLink: LoginLinkType;\r\n    setNewPassAuth: (password: string) => void;\r\n    closeMessage: (error: string) => void;\r\n    loading: boolean;\r\n};\r\n\r\nexport const SetPassForm: FC<PropsType> = ({\r\n    loginLink: {link, title},\r\n    setNewPassAuth,\r\n    closeMessage,\r\n    loading,\r\n}) => {\r\n    const password = useInput('', {\r\n        minLength: 8,\r\n        isPassword: true\r\n    });\r\n    const repeatPassword = useInput('', {\r\n        minLength: 8,\r\n        repeatPass: true,\r\n    });\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (password.value !== repeatPassword.value) {\r\n            repeatPassword.setInputError('Passwords must be same')\r\n        } else {\r\n            repeatPassword.setInputError('')\r\n            if (password.value.trim()) {\r\n                setNewPassAuth(password.value);\r\n            }\r\n        }\r\n    };\r\n    const closeMessageHandler = (obj?: HookInputType) => () => {\r\n        closeMessage('');\r\n        if (obj) {\r\n            obj.setDirty(false);\r\n            obj.setInputError('')\r\n        }\r\n    };\r\n    const disabledSubmitBtn = !password.inputValid\r\n        || !repeatPassword.inputValid\r\n        || loading;\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={submitHandler}>\r\n            {password.isDirty && password.inputError && (\r\n                <ErrorMessage clickHandler={closeMessageHandler(password)}>\r\n                    {password.inputError}\r\n                </ErrorMessage>\r\n            )}\r\n            <InputText\r\n                placeholder={'New password'}\r\n                type={'password'}\r\n                onChange={password.onChange}\r\n                onBlur={password.onBlur}\r\n                value={password.value}\r\n                disabled={loading}\r\n            />\r\n            {repeatPassword.isDirty && repeatPassword.inputError && (\r\n                <ErrorMessage\r\n                    clickHandler={closeMessageHandler(repeatPassword)}>\r\n                    {repeatPassword.inputError}\r\n                </ErrorMessage>\r\n            )}\r\n            <InputText\r\n                placeholder={'Repeat new password'}\r\n                type={'password'}\r\n                onChange={repeatPassword.onChange}\r\n                onBlur={repeatPassword.onBlur}\r\n                value={repeatPassword.value}\r\n                disabled={loading}\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={disabledSubmitBtn}\r\n            >\r\n                Set pass\r\n            </Button>\r\n            <Link to={link} className={s.link}>\r\n                {title}\r\n            </Link>\r\n        </form>\r\n    );\r\n};\r\n","import React, {FC} from 'react';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    capitalizeFirstLetter,\r\n    transformLinkToTitle,\r\n} from 'src/utils/textTransform';\r\nimport {PATH} from 'src/main/ui/App/Routes';\r\nimport {selectLogin} from 'src/pages/login/bll/selectLogin';\r\nimport {LoginLinkType} from 'src/pages/login/ui/LoginFormContainer';\r\nimport {SetPassForm} from 'src/pages/setPass/ui/setPassForm/SetPassForm';\r\nimport {setErrorLogin, setNewPassTC} from 'src/pages/login/bll/authReducer';\r\n\r\nexport const SetPassFormContainer: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n    const {LOGIN} = PATH;\r\n    const {success, loading} = useSelector(selectLogin)\r\n    const loginLink: LoginLinkType = {\r\n        link: LOGIN,\r\n        title: capitalizeFirstLetter(transformLinkToTitle(LOGIN)),\r\n    };\r\n    if (success) {\r\n        return <Redirect to={'/PATH'}/>\r\n    }\r\n\r\n    const setNewPassAuth = (password: string) => {\r\n        dispatch(setNewPassTC(password, token));\r\n    };\r\n    const closeMessage = (error: string) => {\r\n        dispatch(setErrorLogin(error));\r\n    };\r\n\r\n    return (\r\n        <SetPassForm\r\n            loginLink={loginLink}\r\n            setNewPassAuth={setNewPassAuth}\r\n            closeMessage={closeMessage}\r\n            loading={loading}\r\n        />\r\n    );\r\n};\r\n","import React, { FC } from 'react';\r\nimport s from './SetPassPage.module.scss';\r\nimport {\r\n  SetPassFormContainer\r\n} from 'src/pages/setPass/ui/setPassForm/SetPassFormContainer';\r\n\r\nexport const SetPassPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Set New Password</h2>\r\n      <SetPassFormContainer/>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport s from './Error404Page.module.scss';\r\n\r\nexport const Error404Page: FC = () => {\r\n  return (\r\n    <div className={s.page}>\r\n      <div className={s.main}>\r\n        <h1 className={s.title}>404 - Page not&nbsp;found</h1>\r\n        <p className={s.text}>\r\n          —<span>Uh oh.</span> <span>¯\\_(ツ)_/¯</span>—\r\n        </p>\r\n      </div>\r\n      <footer className={s.footer}>\r\n        <p className={s.footerText}>\r\n          Take me back to:&nbsp;\r\n          <Link className={s.link} to=\"/\">\r\n            home page\r\n          </Link>\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n","import React, {FC, FormEvent, useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'src/common/ui/Button';\r\nimport s from './RecoveryPassForm.module.scss';\r\nimport {InputText} from 'src/common/ui/InputText';\r\nimport {InfoErrorMessage} from 'src/common/ui/InfoErrorMessage';\r\nimport {LoginLinkType} from 'src/pages/login/ui/LoginFormContainer';\r\nimport {recoveryPassActions} from 'src/pages/recoveryPass/bll/recoveryPassActions';\r\n\r\ntype PropsType = {\r\n  loginLink: LoginLinkType;\r\n  sendEmail: (email: string) => void;\r\n  closeMessage: (error: string) => void;\r\n  setSuccess: (success: boolean) => void;\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string;\r\n};\r\n\r\nexport const RecoveryPassForm: FC<PropsType> = ({\r\n  loginLink: { link, title },\r\n  sendEmail,\r\n  setSuccess,\r\n  loading,\r\n  success,\r\n  error,\r\n}) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setEmail('');\r\n      setSuccess(false);\r\n      setTimeout(()=> {\r\n        alert('Check your email')\r\n      }, 1000)\r\n    }\r\n  }, [success, setSuccess]);\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (email.trim()) {\r\n      sendEmail(email);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={submitHandler}>\r\n      <InfoErrorMessage\r\n        loading={loading}\r\n        error={error}\r\n        action={recoveryPassActions.setError('')}\r\n      />\r\n      <InputText\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        onChangeText={setEmail}\r\n        value={email}\r\n        disabled={loading}\r\n      />\r\n      <Button type=\"submit\" disabled={loading}>\r\n        Submit\r\n      </Button>\r\n      <Link to={link} className={s.link}>\r\n        {title}\r\n      </Link>\r\n    </form>\r\n  );\r\n};\r\n","import { message } from './messageTemplate';\r\nimport axios from 'axios';\r\n\r\nexport type RequestDataType = {\r\n  email: string;\r\n  from?: string;\r\n  message?: string;\r\n};\r\n\r\ntype ResponseDataType = {\r\n  info: string;\r\n  success: boolean;\r\n  answer: boolean;\r\n  html: boolean;\r\n};\r\n\r\nexport const recoveryPassApi = {\r\n  sendEmail({ email }: RequestDataType): Promise<ResponseDataType> {\r\n    return axios.post<ResponseDataType>(`https://neko-back.herokuapp.com/2.0/auth/forgot`, {\r\n      email,\r\n      from: 'Card <mozgche6@gmail.com>',\r\n      message,\r\n    }).then((res) => res.data);\r\n  },\r\n};\r\n","export const message = `<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n  <head>\r\n    <title>HTML email template</title>\r\n    <meta name=\"viewport\" content=\"width = 375, initial-scale = -1\">\r\n  </head>\r\n\r\n  <body style=\"background-color: #ffffff; font-size: 16px;\">\r\n    <center>\r\n      <table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"height: 100%; width: 600px; font-size: 18px;\">\r\n          <!-- BEGIN EMAIL -->\r\n          <tr>\r\n            <td align=\"center\" bgcolor=\"#ffffff\" style=\"padding:30px\">\r\n               <p style=\"text-align:left\">Hello,<br><br> We received a request to reset the password for your account for this email address. To initiate the password reset process for your account, click the link below.\r\n              </p>\r\n              <p>\r\n                <a target=\"_blank\" style=\"text-decoration:none; background-color: #17a2b8; border: #17a2b8 1px solid; color: #fff; padding:10px 10px; display:block;\" href=\"https://andrewkravchenko.github.io/Cards/#/set-pass/$token$\">\r\n                  <strong>Reset Password</strong></a>\r\n              </p>\r\n              <p style=\"text-align:left\">This link can only be used once. If you need to reset your password again, please visit <a href=\"https://andrewkravchenko.github.io/Cards/\">our site</a> and request another reset.<br><br>If you did not make this request, you can simply ignore this email.</p>\r\n              <p style=\"text-align:left\">\r\n              Sincerely,<br>The Card website Team\r\n              </p>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </center>\r\n  </body>\r\n</html>`\r\n","import { ThunkType } from 'src/main/bll/store';\r\nimport {\r\n  recoveryPassActions,\r\n  RecoveryPassActionsType,\r\n} from './recoveryPassActions';\r\nimport { recoveryPassApi } from 'src/pages/recoveryPass/dal/recoveryPassApi';\r\n\r\nconst { setLoading, setSuccess, setError } = recoveryPassActions;\r\n\r\nexport const sendEmailAsync = (\r\n  email: string,\r\n): ThunkType<RecoveryPassActionsType> => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const { success } = await recoveryPassApi.sendEmail({ email });\r\n\r\n    if (success) {\r\n      dispatch(setSuccess(success));\r\n    }\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : e.message + ', more details in the console';\r\n\r\n    dispatch(setError(error));\r\n  }\r\n};\r\n","import { RootStateType } from \"src/main/bll/store\";\r\n\r\nexport const selectRecoveryPass = ((state: RootStateType) => state.recoveryPass);\r\n","import React, {FC} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PATH} from 'src/main/ui/App/Routes';\r\nimport {\r\n    capitalizeFirstLetter,\r\n    transformLinkToTitle\r\n} from 'src/utils/textTransform';\r\nimport {RecoveryPassForm} from './RecoveryPassForm';\r\nimport {LoginLinkType} from 'src/pages/login/ui/LoginFormContainer';\r\nimport {sendEmailAsync} from 'src/pages/recoveryPass/bll/recoveryPassThunk';\r\nimport {selectRecoveryPass} from 'src/pages/recoveryPass/bll/selectRecoveryPass';\r\nimport {recoveryPassActions} from 'src/pages/recoveryPass/bll/recoveryPassActions';\r\n\r\nexport const RecoveryPassFormContainer: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {LOGIN} = PATH;\r\n    const {loading, success, error} = useSelector(selectRecoveryPass)\r\n\r\n    const loginLink: LoginLinkType = {\r\n        link: LOGIN,\r\n        title: capitalizeFirstLetter(transformLinkToTitle(LOGIN)),\r\n    };\r\n\r\n    const sendEmail = (email: string) => {\r\n        dispatch(sendEmailAsync(email));\r\n    };\r\n    const closeMessage = (error: string) => {\r\n        dispatch(recoveryPassActions.setError(error));\r\n    };\r\n    const setSuccess = (success: boolean) => {\r\n        dispatch(recoveryPassActions.setSuccess(success));\r\n    };\r\n\r\n    return (\r\n        <RecoveryPassForm\r\n            loginLink={loginLink}\r\n            sendEmail={sendEmail}\r\n            setSuccess={setSuccess}\r\n            closeMessage={closeMessage}\r\n            loading={loading}\r\n            success={success}\r\n            error={error}\r\n        />\r\n    );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './RecoveryPassPage.module.scss';\r\nimport { RecoveryPassFormContainer } from './RecoveryPassForm/RecoveryPassFormContainer';\r\n\r\nexport const RecoveryPassPage: FC = () => {\r\n  return (\r\n    <section className={s.page}>\r\n      <h2>Recovery Password</h2>\r\n\r\n      <RecoveryPassFormContainer />\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC, FormEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport s from './RegistrationForm.module.scss';\r\nimport { Button } from 'src/common/ui/Button';\r\nimport { HookInputType } from 'src/hooks/types';\r\nimport { InputText } from 'src/common/ui/InputText';\r\nimport { useInput } from 'src/hooks/ValidationFormAndrew';\r\nimport { ErrorMessage } from 'src/common/ui/ErrorMessage';\r\nimport { LoginLinkType } from 'src/pages/login/ui/LoginFormContainer';\r\n\r\ntype PropsType = {\r\n  loginLink: LoginLinkType;\r\n  createAuth: (email: string, password: string) => void;\r\n  closeMessage: (error: string) => void;\r\n  loading: boolean;\r\n};\r\n\r\nexport const RegistrationForm: FC<PropsType> = ({\r\n  loginLink: { link, title },\r\n  createAuth,\r\n  closeMessage,\r\n  loading,\r\n}) => {\r\n  const email = useInput('', { isEmail: true });\r\n  const password = useInput('', {\r\n    minLength: 8,\r\n    isPassword: true\r\n  });\r\n  const repeatPassword = useInput('', {\r\n    minLength: 8,\r\n    repeatPass: true,\r\n  });\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if(password.value !== repeatPassword.value){\r\n      repeatPassword.setInputError('Passwords must be same')\r\n    }\r\n    else {\r\n      repeatPassword.setInputError('')\r\n      if (email.value.trim() && password.value.trim()) {\r\n        createAuth(email.value, password.value);\r\n      }\r\n    }\r\n  };\r\n  const closeMessageHandler = (obj?: HookInputType) => () => {\r\n    closeMessage('');\r\n    if (obj) {\r\n      obj.setDirty(false);\r\n      obj.setInputError('')\r\n    }\r\n  };\r\n  const disabledSubmitBtn = !email.inputValid\r\n    || !password.inputValid\r\n    || !repeatPassword.inputValid\r\n    || loading;\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={submitHandler}>\r\n          {email.isDirty && email.inputError && (\r\n            <ErrorMessage clickHandler={closeMessageHandler(email)}>\r\n              {email.inputError}\r\n            </ErrorMessage>\r\n          )}\r\n          <InputText\r\n              placeholder={'Email'}\r\n              type={'email'}\r\n              onChange={email.onChange}\r\n              onBlur={email.onBlur}\r\n              value={email.value}\r\n              disabled={loading}\r\n          />\r\n          {password.isDirty && password.inputError && (\r\n            <ErrorMessage clickHandler={closeMessageHandler(password)}>\r\n              {password.inputError}\r\n            </ErrorMessage>\r\n          )}\r\n          <InputText\r\n              placeholder={'Password'}\r\n              type={'password'}\r\n              onChange={password.onChange}\r\n              onBlur={password.onBlur}\r\n              value={password.value}\r\n              disabled={loading}\r\n          />\r\n          {repeatPassword.isDirty && repeatPassword.inputError && (\r\n            <ErrorMessage clickHandler={closeMessageHandler(repeatPassword)}>\r\n              {repeatPassword.inputError}\r\n            </ErrorMessage>\r\n          )}\r\n          <InputText\r\n              placeholder={'Repeat password'}\r\n              type={'password'}\r\n              onChange={repeatPassword.onChange}\r\n              onBlur={repeatPassword.onBlur}\r\n              value={repeatPassword.value}\r\n              disabled={loading}\r\n          />\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={disabledSubmitBtn}\r\n            >\r\n              Sing Up\r\n            </Button>\r\n            <Link to={link} className={s.link}>\r\n              {title}\r\n            </Link>\r\n        </form>\r\n    );\r\n};\r\n","import React, {FC} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    capitalizeFirstLetter,\r\n    transformLinkToTitle\r\n} from 'src/utils/textTransform';\r\nimport {PATH} from 'src/main/ui/App/Routes';\r\nimport {RegistrationForm} from './RegistrationForm';\r\nimport {selectLogin} from 'src/pages/login/bll/selectLogin';\r\nimport {LoginLinkType} from 'src/pages/login/ui/LoginFormContainer';\r\nimport {CreateAuthTC, setErrorLogin} from 'src/pages/login/bll/authReducer';\r\n\r\nexport const RegistrationFormContainer: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {LOGIN} = PATH;\r\n    const {success, loading} = useSelector(selectLogin)\r\n    const loginLink: LoginLinkType = {\r\n        link: LOGIN,\r\n        title: capitalizeFirstLetter(transformLinkToTitle(LOGIN)),\r\n    };\r\n    if (success) {\r\n        return <Redirect to={'/PATH'}/>\r\n    }\r\n\r\n    const createAuth = (email: string, password: string,) => {\r\n        dispatch(CreateAuthTC(email, password));\r\n    };\r\n    const closeMessage = (error: string) => {\r\n        dispatch(setErrorLogin(error));\r\n    };\r\n\r\n    return (\r\n        <RegistrationForm\r\n            loginLink={loginLink}\r\n            createAuth={createAuth}\r\n            closeMessage={closeMessage}\r\n            loading={loading}\r\n        />\r\n    );\r\n};\r\n","import React, {FC} from 'react';\r\n\r\nimport s from './RegistrationPage.module.scss';\r\nimport {RegistrationFormContainer} from \"./RegistrationForm/RegistrationFormContainer\";\r\n\r\nexport const RegistrationPage: FC = () => {\r\n\r\n    return (\r\n        <section className={s.page}>\r\n            <h2>Registration</h2>\r\n\r\n            <RegistrationFormContainer/>\r\n\r\n        </section>\r\n    );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginPage } from 'src/pages/login/ui/LoginPage';\r\nimport { NotAuthWithRedirect } from './NotAuthWithRedirect';\r\nimport { SetPassPage } from 'src/pages/setPass/ui/SetPassPage';\r\nimport { Error404Page } from 'src/pages/error404/ui/Error404Page';\r\nimport { RecoveryPassPage } from 'src/pages/recoveryPass/ui/RecoveryPassPage';\r\nimport { RegistrationPage } from 'src/pages/registration/ui/RegistrationPage';\r\n\r\nexport const PATH = {\r\n  LOGIN: '/login',\r\n  REGISTRATION: '/registration',\r\n  RECOVERY_PASS: '/recovery-pass',\r\n  SET_PASS: '/set-pass',\r\n  PROFILE: '/profile',\r\n  PACKS: '/packs',\r\n  TRAIN: '/train',\r\n  CARDS: '/cards',\r\n  TEST: '/test',\r\n  ERROR_404: '/error404',\r\n};\r\n\r\nexport const Routes: FC = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path='/' exact render={() => <Redirect to={PATH.PROFILE} />} />\r\n        <Route path={PATH.LOGIN} render={() => <LoginPage />} />\r\n        <Route path={PATH.REGISTRATION} render={() => <RegistrationPage />} />\r\n        <Route path={PATH.RECOVERY_PASS} render={() => <RecoveryPassPage />} />\r\n        <Route path={PATH.SET_PASS + '/:token'} render={() => <SetPassPage />} />\r\n        <Route path={PATH.ERROR_404} render={() => <Error404Page />} />\r\n        <NotAuthWithRedirect/>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Nav.module.scss';\r\nimport { NavLinkType } from './NavContainer';\r\nimport { randomId } from 'src/utils/randomId';\r\n\r\ntype PropsType = {\r\n  navLinks: Array<NavLinkType>;\r\n};\r\n\r\nexport const Nav: FC<PropsType> = ({ navLinks }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const closeMenuHandler = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <nav className={s.nav}>\r\n      <input\r\n        checked={open}\r\n        className={s.navControl}\r\n        type=\"checkbox\"\r\n        id=\"menu-cb\"\r\n        onChange={closeMenuHandler}\r\n      />\r\n\r\n      <div className={s.navContent}>\r\n        <ul className={s.navItems} onClick={closeMenuHandler}>\r\n          {navLinks.map(({ link, title }) => (\r\n            <li key={randomId()} className={s.navItem}>\r\n              <NavLink\r\n                className={s.navItemLink}\r\n                exact\r\n                to={link}\r\n                activeClassName={s.navItemLinkActive}\r\n              >\r\n                {title}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <label className={s.navBtn} htmlFor=\"menu-cb\" />\r\n    </nav>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Nav } from './Nav';\r\nimport {\r\n  capitalizeFirstLetter,\r\n  transformLinkToTitle\r\n} from 'src/utils/textTransform';\r\nimport { PATH } from 'src/main/ui/App/Routes';\r\n\r\n\r\nexport const NavContainer: FC = () => {\r\n  const navLinks: Array<NavLinkType> = Object.values(PATH)\r\n      .filter(link => link !== PATH.CARDS && link !== PATH.TRAIN)\r\n    .map((navLink) => ({\r\n    link: navLink,\r\n    title: capitalizeFirstLetter(transformLinkToTitle(navLink)),\r\n  }));\r\n  const navLinksWithoutError404: Array<NavLinkType> = navLinks.slice(\r\n    0,\r\n    navLinks.length - 1,\r\n  );\r\n\r\n  return <Nav navLinks={navLinksWithoutError404} />;\r\n};\r\n\r\nexport type NavLinkType = {\r\n  link: string;\r\n  title: string;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport s from './Header.module.scss';\r\nimport { NavContainer } from './Nav/NavContainer';\r\n\r\nexport const Header: FC = () => {\r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <div className={s.container}>\r\n        <NavContainer />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Routes } from 'src/main/ui/App/Routes';\r\n\r\nimport s from './Main.module.scss';\r\n\r\nexport const Main: FC = () => {\r\n\r\n  return (\r\n    <main className={s.main}>\r\n      <div className={s.container}>\r\n        <Routes />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './App.scss';\r\nimport { Header } from './Header';\r\nimport { Main } from './Main';\r\nimport { isAuthTC } from 'src/pages/login/bll/authReducer';\r\nimport { useTypedSelector } from 'src/hooks/useTypedSelector';\r\n\r\nexport const App: FC = () => {\r\n  const isInitial = useTypedSelector<boolean>(state => state.login.isInitial);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    !isInitial && dispatch(isAuthTC());\r\n  }, [dispatch, isInitial]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n\r\n      {isInitial && <Main /> }\r\n    </div>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export type RecoveryPassStateType = {\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string;\r\n};\r\n\r\nexport const recoveryPassInitState: RecoveryPassStateType = {\r\n  loading: false,\r\n  success: false,\r\n  error: '',\r\n};\r\n","import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  compose,\r\n  Middleware,\r\n  Action,\r\n} from 'redux';\r\nimport thunk, { ThunkAction, ThunkMiddleware } from 'redux-thunk';\r\n\r\nimport { DEV } from 'src/config';\r\nimport { authReducer as login } from 'src/pages/login/bll/authReducer';\r\nimport { recoveryPassReducer as recoveryPass } from 'src/pages/recoveryPass/bll/recoveryPassReducer';\r\nimport { packsReducer as packs } from 'src/pages/packs/bll/PacksReducer';\r\nimport { cardsReducer as cards } from 'src/pages/cards/bll/CardsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  login,\r\n  recoveryPass,\r\n  packs,\r\n  cards\r\n});\r\n\r\n// @ts-ignore next line\r\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers = DEV && devtools ? devtools : compose;\r\n\r\nconst middleware: Array<Middleware> = [thunk as ThunkMiddleware<RootStateType>];\r\n\r\nexport const enhancedStore = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nexport const store = createStore(rootReducer, enhancedStore);\r\n\r\n/** Types */\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport type InferActionsType<T> = T extends Record<string,\r\n    (...args: never[]) => infer U>\r\n  ? U\r\n  : never;\r\n\r\nexport type ThunkType<A extends Action = Action,\r\n  R = Promise<void>,\r\n  S = RootStateType> = ThunkAction<R, S, unknown, A>;\r\n\r\nif (DEV) {\r\n  // @ts-ignore next line\r\n  window.store = store;\r\n}\r\n","import {\r\n  RecoveryPassActionsType,\r\n  RecoveryPassActionType,\r\n} from './recoveryPassActions';\r\nimport {\r\n  recoveryPassInitState,\r\n  RecoveryPassStateType,\r\n} from './recoveryPassState';\r\n\r\nexport const recoveryPassReducer = (\r\n  state = recoveryPassInitState,\r\n  action: RecoveryPassActionsType,\r\n): RecoveryPassStateType => {\r\n  switch (action.type) {\r\n    case RecoveryPassActionType.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload.loading,\r\n        success: false,\r\n        error: '',\r\n      };\r\n\r\n    case RecoveryPassActionType.SET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: action.payload.success,\r\n        error: '',\r\n      };\r\n\r\n    case RecoveryPassActionType.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.scss';\r\nimport { App } from './main/ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './main/bll/store';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}